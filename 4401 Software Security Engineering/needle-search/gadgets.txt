Gadgets information
============================================================
0x00000000004b39a1 : adc ah, bh ; jmp qword ptr [rax]
0x0000000000420168 : adc ah, cl ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043dd9f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043de09 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d7fd : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004b1108 : adc al, 0 ; add byte ptr [rax], al ; rcl byte ptr [rax], 1 ; add al, al ; retf 0xfff9
0x000000000047e68a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000427cb8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e1e5 : adc al, 0x13 ; jmp rdx
0x00000000004264a5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048d51a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ee91 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000445170 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004b1f7c : adc al, 0x72 ; cli ; call rdi
0x00000000004ac62c : adc al, 0x90 ; cmc ; call rsp
0x00000000004724f8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043f230 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d95e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042e1e1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d840 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004250a7 : adc al, 0xa ; jmp r10
0x0000000000426613 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004476ef : adc al, 0xe ; cmp rdi, rdx ; jb 0x447702 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042aa8a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042c75a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000040452f : adc al, 0xf ; retf 0xfa83
0x00000000004132cb : adc al, 0xf6 ; ret 0x7420
0x000000000048d89d : adc al, 0xf7 ; ret
0x0000000000495749 : adc al, 0xfa ; call qword ptr [rax + 0x10fffa15]
0x0000000000424cc6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000478215 : adc al, 3 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; retf 2
0x000000000048d16d : adc al, bh ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000494c90 : adc al, bl ; stc ; call rax
0x000000000043df47 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dfb1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429668 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047362a : adc al, byte ptr [rcx + 0xf] ; mov dh, 0x47 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044fcd8 : adc al, ch ; ret 0xffb6
0x000000000044a10f : adc al, ch ; retf
0x000000000041c5b8 : adc al, ch ; retf 0xfe3e
0x000000000042500a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x000000000049478d : adc bh, cl ; jmp rax
0x00000000004abf91 : adc bh, dh ; jmp rsp
0x0000000000495705 : adc bh, dl ; call qword ptr [rax + 0x10fffa13]
0x0000000000494f7d : adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000495745 : adc bh, dl ; call qword ptr [rax]
0x00000000004b194d : adc bh, dl ; call rcx
0x0000000000494dbd : adc bh, dl ; call rsi
0x0000000000494db9 : adc bh, dl ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000494cd8 : adc bl, bl ; stc ; push rax ; fdiv st(1), st(0) ; jmp rax
0x0000000000441635 : adc bl, ch ; call 0xffffffffc4149f8a
0x0000000000441555 : adc bl, ch ; call 0xffffffffc43c9eaa
0x00000000004834c2 : adc bl, ch ; jno 0x483518 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000444aa6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444b17 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444a77 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444aa5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f95a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419b65 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000483f2e : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045c9d9 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000484743 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045bbf5 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045c3d6 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000048241f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411f52 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041914f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047ca5f : adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000411f7d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042b996 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004448ca : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000048473d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041f3e3 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b70c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b928 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000424436 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000482420 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000004448a7 : adc byte ptr [rax + 0xf], cl ; mov esp, 0x1d8d4cd2 ; std ; syscall
0x00000000004139ce : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411f53 : adc byte ptr [rax + 1], cl ; ret
0x0000000000411357 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048a7fa : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044b727 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000040147e : adc byte ptr [rax - 0x39], cl ; ret 0
0x00000000004a4690 : adc byte ptr [rax - 0x46c70004], bh ; cld ; call rax
0x00000000004948cc : adc byte ptr [rax - 0x72c90007], dl ; stc ; jmp rdx
0x0000000000476075 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004161c3 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x00000000004011df : adc byte ptr [rax - 0x75], cl ; loopne 0x4011b4 ; ret
0x0000000000409b19 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406628
0x000000000041d43d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044c825 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458f38 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000471187 : adc byte ptr [rax - 0x77], cl ; jo 0x4711a5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471147 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000047114b : adc byte ptr [rax - 0x77], cl ; ret
0x000000000041da23 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000422bff : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041e821 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000419150 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x00000000004715b0 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000041792f : adc byte ptr [rax - 0x78], al ; jl 0x417951 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441817 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000441853 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000424ac5 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx*8 + 0x48], 0x29 ; ret
0x0000000000401650 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041a203 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455c18 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044b329 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004801e9 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x480241 ; mov esi, ebx ; syscall
0x000000000043d9f2 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042aaea : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043f508 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043f7fc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e151 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044a263 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004b1140 : adc byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rcx], dl ; add al, ch ; retf 0xfff9
0x00000000004489cc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000428138 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043ba08 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000495714 : adc byte ptr [rax], bl ; cli ; call qword ptr [rax + 0x10fffa19]
0x0000000000494fc4 : adc byte ptr [rax], cl ; cli ; call qword ptr [rax + 0x10fffa07]
0x000000000048e7c8 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048b628 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045c989 : adc byte ptr [rbp + 0x39], cl ; retf
0x000000000044490f : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; cdq ; syscall
0x00000000004ac2b0 : adc byte ptr [rbp - 0xb], bl ; call qword ptr [rcx]
0x0000000000414604 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004111c3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419b66 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b4467 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044c833 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044c832 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418d32 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047167e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004075e0 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x00000000004b13bc : adc byte ptr [rbx], 0 ; int1 ; hlt ; jmp qword ptr [rbx]
0x000000000049571c : adc byte ptr [rbx], bl ; cli ; call qword ptr [rax + 0x10fffa1c]
0x0000000000411f7e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000412a80 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000472783 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000044b792 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048b22f : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048b05e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044b1b1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000419ab7 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000483314 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045c971 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042ab1d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494d84 : adc byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x0000000000482d7a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000449329 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004859e0 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000418d35 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000494fbc : adc byte ptr [rcx], cl ; cli ; call qword ptr [rax + 0x10fffa08]
0x000000000047363a : adc byte ptr [rcx], cl ; ret 0xb60f
0x0000000000495740 : adc byte ptr [rcx], dl ; cli ; call qword ptr [rax + 0x10fffa12]
0x00000000004957d0 : adc byte ptr [rdi - 6], dl ; jmp qword ptr [rax]
0x0000000000494fcc : adc byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x10fffa06]
0x00000000004956fc : adc byte ptr [rdi], cl ; cli ; call qword ptr [rax + 0x10fffa10]
0x000000000040451f : adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000483f2f : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045c9da : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000445383 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042af01 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aff1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ae11 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b859 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042b3b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042ab41 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042b591 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ad21 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042b771 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b681 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042afc3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aed3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac31 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042ade3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac03 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042acf3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ab13 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045bbf6 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045c3d7 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044a709 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000495750 : adc byte ptr [rdi], dl ; cli ; call qword ptr [rax + 0x10fffa18]
0x00000000004845f1 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000048392d : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004adb53 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042e6d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004956f4 : adc byte ptr [rdx + rdi*8], cl ; call qword ptr [rax + 0x10fffa0d]
0x0000000000495748 : adc byte ptr [rdx + rdi*8], dl ; call qword ptr [rax + 0x10fffa15]
0x00000000004241eb : adc byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000495758 : adc byte ptr [rdx], bl ; cli ; call qword ptr [rax + 0x10fffa1b]
0x000000000042d61b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000495704 : adc byte ptr [rdx], dl ; cli ; call qword ptr [rax + 0x10fffa13]
0x000000000049570c : adc byte ptr [rip + 0x1690fffa], dl ; cli ; call qword ptr [rax]
0x0000000000495760 : adc byte ptr [rip + 0x1e90fffa], bl ; cli ; call qword ptr [rax]
0x000000000044731f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042d4ca : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042cac5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cec5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42ce99
0x000000000042cf43 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf17
0x000000000042d3d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42d3a9
0x000000000042d453 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42d427
0x000000000042cec0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ce9e
0x000000000042cf3e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf1c
0x000000000042d3d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d3ae
0x000000000042d44e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d42c
0x00000000004251f5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043971b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000494fd4 : adc byte ptr [rsi], al ; cli ; call qword ptr [rax + 0x10fffa05]
0x0000000000495724 : adc byte ptr [rsi], bl ; cli ; call qword ptr [rax + 0x10fffa1f]
0x0000000000495738 : adc byte ptr [rsi], cl ; cli ; call qword ptr [rax + 0x10fffa0f]
0x0000000000424bea : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000401a40 : adc ch, cl ; ret
0x0000000000494d60 : adc cl, 0xf9 ; call rax
0x0000000000494bf0 : adc cl, bl ; stc ; call rax
0x0000000000403416 : adc cl, bpl ; retf
0x00000000004161c6 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045debf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044cdea : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000441545 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045dec2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000048663a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045cc95 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000403417 : adc cl, ch ; retf
0x00000000004958c8 : adc cl, dh ; cli ; jmp qword ptr [rax]
0x00000000004b23e0 : adc cl, dh ; std ; call rdx
0x00000000004abbd9 : adc dh, bh ; call rsp
0x00000000004946b8 : adc dh, dh ; clc ; call rax
0x0000000000410745 : adc dh, dh ; ret 0x7420
0x000000000041ce8e : adc dh, dh ; ret 0xf0f
0x0000000000495701 : adc dl, bh ; call qword ptr [rax]
0x0000000000494e51 : adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000494dcd : adc dl, bh ; call qword ptr [rsi]
0x0000000000494f8d : adc dl, bh ; call rax
0x0000000000494f89 : adc dl, bh ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000494f0d : adc dl, bh ; jmp rsp
0x0000000000494f8c : adc dl, dil ; call rax
0x00000000004709db : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000402233 : adc dword ptr [rax - 0x39], ecx ; ret 0xffc8
0x0000000000411f6f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000048b27f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040572f : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000471d14 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043f7fb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043e0e7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f6ff : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000427fb8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045bc05 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000447948 : adc dword ptr [rbx], eax ; ret
0x000000000048c043 : adc dword ptr [rbx], esp ; add byte ptr [rax], cl ; ret
0x00000000004478c1 : adc dword ptr [rbx], esp ; ret
0x0000000000439047 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004478bc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000438ce2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438ca6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000447943 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004476a3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447825 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044782a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000447802 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000447807 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004391a9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000004476a0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044749c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000047a57e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004475cf : adc dword ptr [rsi + 3], edx ; ret
0x000000000044766c : adc dword ptr [rsi + 7], edx ; ret
0x000000000044746e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048b4a6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043e0e6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049570d : adc eax, 0x1690fffa ; cli ; call qword ptr [rax]
0x000000000045b629 : adc eax, 0x26048a ; je 0x45b640 ; ret
0x000000000044dc07 : adc eax, 0x26beac ; pop rbx ; ret
0x0000000000419a44 : adc eax, 0x2a0de7 ; ret
0x00000000004a8504 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047c332 : adc eax, 0x4000003 ; ret
0x000000000047c282 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000458827 : adc eax, 0x4cffff54 ; mov edi, ebp ; call r12
0x000000000043dc71 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046a055 : adc eax, 0x83fffffd ; ret
0x0000000000479431 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000429388 : adc eax, 0x894d0000 ; retf
0x0000000000417933 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x0000000000474e7a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004484f4 : adc eax, 0xf880272 ; ret
0x00000000004742e5 : adc eax, 0xfffd43b6 ; cmove rax, rdx ; ret
0x000000000043f55e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000427e38 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000484aa9 : adc eax, eax ; ret
0x0000000000484be6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a81a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004135f7 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047607c : adc ebx, esi ; ret
0x0000000000400d5b : adc ebx, esp ; add byte ptr [rax], al ; leave ; ret
0x0000000000417b4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040f051 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000457f04 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000494789 : adc ecx, edi ; jmp qword ptr [rax - 0x1f0006ee]
0x000000000047f7fe : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f89b : adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000047f1b3 : adc edi, eax ; dec dword ptr [rbx + rcx*4 + 0x3d] ; retf
0x0000000000494791 : adc edi, ecx ; jmp qword ptr [rax]
0x0000000000495709 : adc edi, edx ; call qword ptr [rax]
0x0000000000494d75 : adc edi, edx ; call rax
0x0000000000495741 : adc edx, edi ; call qword ptr [rax + 0x10fffa12]
0x0000000000494d85 : adc edx, edi ; call qword ptr [rax]
0x0000000000494f81 : adc edx, edi ; jmp qword ptr [rax]
0x0000000000494e45 : adc edx, edi ; jmp rdx
0x00000000004a96be : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416f13 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048e63c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000410743 : adc esi, dword ptr [rdx + rdx - 0xa] ; ret 0x7420
0x00000000004132c9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x0000000000410ed0 : adc esi, esi ; ret 0x7520
0x0000000000439046 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000438ce1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438ca5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004391a8 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000004475ce : adc qword ptr [rsi + 3], rdx ; ret
0x000000000044766b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000044746d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004b194c : adc r15b, dl ; call rcx
0x0000000000494dbc : adc r15b, dl ; call rsi
0x0000000000484be5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004b115b : add ah, ah ; retf 0xfff9
0x00000000004b03ff : add ah, al ; add byte ptr [r8], al ; sub al, 0x80 ; stc ; jmp rbx
0x00000000004b0337 : add ah, bh ; add byte ptr [rax], al ; xor al, 0x77 ; stc ; call rsp
0x000000000044891e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004489fb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448969 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b37b9 : add ah, bh ; jmp rdx
0x00000000004b5943 : add ah, bh ; xor ebp, edi ; jmp qword ptr [rdx]
0x00000000004aed73 : add ah, bl ; out 0xf6, eax ; call qword ptr [rdx]
0x00000000004a96e7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004475ca : add ah, byte ptr [rdx - 0xf] ; jl 0x44761f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b333a : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004ac627 : add ah, ch ; add eax, 0x90140000 ; cmc ; call rsp
0x00000000004b252f : add ah, dh ; add byte ptr fs:[rax], al ; sub al, 0xaf ; cli ; call qword ptr [rdx]
0x0000000000400a79 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004b5a0f : add ah, dl ; cdq ; add byte ptr [rax], al ; jl 0x4b5a51 ; std ; jmp rsp
0x0000000000453843 : add al, 0 ; add bh, dh ; ret 0
0x0000000000453837 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000045753f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000411af0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048c84d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042b477 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046fcf6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000044041f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b4a5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e760 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e787 ; ret
0x0000000000474f03 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000449dbf : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000428d38 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000472d10 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a5f1 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040b1f4 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040a4b0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424c15 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000044c892 : add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000455e5b : add al, 0 ; mov edx, 0x180 ; call 0x402149
0x0000000000455e37 : add al, 0 ; mov edx, 0x1be ; call 0x402149
0x0000000000455e82 : add al, 0 ; mov edx, 0x22f ; call 0x402149
0x0000000000449a41 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000004488c5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000047607b : add al, 0x11 ; ret
0x00000000004489b4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004264a1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042643a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000487430 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048b3a7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048b0ab : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000048a2a4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000401fca : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004849fb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484a47 ; leave ; ret
0x000000000040ef57 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000045b62b : add al, 0x26 ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x0000000000473a4e : add al, 0x31 ; ret
0x000000000047394a : add al, 0x37 ; ret
0x0000000000473660 : add al, 0x39 ; ret 0xeb75
0x00000000004183cf : add al, 0x3a ; ret
0x00000000004a77c6 : add al, 0x3d ; retf
0x00000000004800d6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x48008a ; xor eax, eax ; ret
0x0000000000444fdb : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000004444e9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000004444fb : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000048d8b0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x0000000000435bea : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000400dfc : add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000442d29 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000473d24 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047ee66 : add al, 0x4c ; cmp ecx, eax ; jne 0x47ee14 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004745e8 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x0000000000461318 : add al, 0x65 ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004444f7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442d37 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000457f02 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000004541c9 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047deda : add al, 0x75 ; retf
0x000000000046f4d8 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043d95b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043f233 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000402647 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448ef8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448ee8 ; ret
0x000000000043b567 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044dcd9 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c74a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000467619 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004749d9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048d04b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046f36c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b6f9 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046fb08 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004444e6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000442d26 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048b4d3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x0000000000400fae : add al, 0x89 ; ret 0xb60f
0x00000000004585e6 : add al, 0x89 ; retf
0x00000000004887a9 : add al, 0x89 ; retf 0xeac0
0x0000000000448efb : add al, 0x8a ; je 0x448ee5 ; ret
0x0000000000448983 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000004b5940 : add al, 0x99 ; add byte ptr [rax], al ; cld ; xor ebp, edi ; jmp qword ptr [rdx]
0x000000000048cc83 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000449a45 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c87f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047d1a7 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000417a57 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004488c9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046c6ed : add al, 0xc6 ; jmp rax
0x00000000004618b2 : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x0000000000461f0a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000461868 : add al, 0xc7 ; jmp rax
0x000000000046c728 : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x0000000000459c61 : add al, 0xe8 ; test rax, rax ; je 0x459c71 ; call rax
0x00000000004554d0 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x000000000046634d : add al, 0xe9 ; retf 0xfffb
0x0000000000401a12 : add al, 0xeb ; mov byte ptr [rcx], bh ; ret 0x860f
0x0000000000456f0c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000485408 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042aa86 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000404f7a : add al, 0xf ; retf
0x00000000004473db : add al, 0xf ; sub rax, rsi ; ret
0x0000000000435f53 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a0bb : add al, 0xf3 ; ret
0x000000000046131e : add al, 0xf8 ; jmp rax
0x0000000000495061 : add al, 0xfa ; call rdx
0x00000000004951a1 : add al, 0xfa ; jmp qword ptr [rax + 0x10fffa03]
0x00000000004951dd : add al, 0xfa ; jmp qword ptr [rax]
0x0000000000494fe5 : add al, 0xfa ; push qword ptr [rax + 3] ; cli ; jmp rax
0x000000000040f577 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ac340 : add al, 3 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rsi ; cmc ; call qword ptr [rcx]
0x000000000042dd27 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044094d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046c6e9 : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000440b68 : add al, 7 ; ret
0x000000000042660f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000049476f : add al, ah ; or ecx, edi ; jmp qword ptr [rax]
0x00000000004b37fb : add al, al ; ja 0x4b3807 ; add byte ptr [rax + 7], al ; cld ; jmp qword ptr [rax]
0x00000000004b16fb : add al, al ; push rsi ; add byte ptr [rax], al ; push rax ; sti ; stc ; call qword ptr [rax]
0x00000000004b110f : add al, al ; retf 0xfff9
0x000000000049f9c7 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000448a15 : add al, bh ; jg 0x448a17 ; int1 ; mov eax, eax ; ret
0x00000000004ac613 : add al, bl ; add eax, 0x90080000 ; cmc ; call qword ptr [rdx]
0x000000000048fb84 : add al, bl ; and al, byte ptr [rax] ; test eax, eax ; je 0x48fb99 ; ret
0x00000000004b3813 : add al, bl ; ja 0x4b381f ; add byte ptr [rax + 0xa], cl ; cld ; jmp qword ptr [rbx]
0x00000000004b3c13 : add al, bl ; jnp 0x4b3c1f ; add byte ptr [rax + 0x1f], bl ; cld ; jmp qword ptr [rcx]
0x00000000004b0857 : add al, bl ; xchg eax, esp ; stc ; jmp qword ptr [rcx]
0x000000000040dd12 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000424dea : add al, byte ptr [rax + 0x74020029] ; or bh, dh ; ret 0
0x0000000000441541 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000454e33 : add al, byte ptr [rax] ; add al, ch ; add eax, 0x89fffad3 ; retf 0xe283
0x000000000040164b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000455c0a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000045583d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047b6e0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041e9cd : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x7b73
0x00000000004ac32d : add al, byte ptr [rax] ; add byte ptr [rax + 0x5e], ah ; cmc ; call qword ptr [rcx]
0x00000000004601a3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042b982 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048885e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000040222d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffc8
0x0000000000401635 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004694e4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x0000000000423e03 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047ca5a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041ba2b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004708cd : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000447f04 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042210a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454fdb : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042b657 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eff1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b685 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040dd13 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045b612 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047e356 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044aeb9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000400e27 : add al, byte ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x000000000040e19c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000474c94 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004ac2ad : add al, byte ptr [rax] ; add byte ptr [rax], dl ; pop rbp ; cmc ; call qword ptr [rcx]
0x0000000000485eca : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000428eb8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446984 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000411556 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000486164 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046d4c4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044b0c0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041b687 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000424bc3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x00000000004241ec : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047df35 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000048b4a2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c87b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047d1a3 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048558a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044b795 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044c5ee : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac9cd : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000424f91 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x0000000000424d7d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x0000000000400d59 : add al, ch ; adc ebx, esp ; add byte ptr [rax], al ; leave ; ret
0x0000000000454e35 : add al, ch ; add eax, 0x89fffad3 ; retf 0xe283
0x0000000000449a0e : add al, ch ; cmp r8b, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000400be3 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; lock add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041e520 : add al, ch ; fidiv dword ptr [rsi + 0x3948ffff] ; retf 0x2a74
0x0000000000455e61 : add al, ch ; fld st(2) ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000045554d : add al, ch ; in eax, dx ; retf
0x0000000000410256 : add al, ch ; ret
0x0000000000423ff8 : add al, ch ; ret 0x285
0x000000000040eec8 : add al, ch ; ret 0x3d6
0x000000000045b318 : add al, ch ; ret 0xfc4e
0x000000000044e078 : add al, ch ; ret 0xfde1
0x000000000041509f : add al, ch ; retf
0x00000000004793b0 : add al, ch ; retf 0x98
0x00000000004b1147 : add al, ch ; retf 0xfff9
0x0000000000452b79 : add al, ch ; sal ebp, -6 ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455e3d : add al, ch ; std ; ret 0xfffa
0x00000000004b3603 : add al, cl ; jne 0x4b360f ; add byte ptr [rax], bh ; stc ; sti ; jmp qword ptr [rbx]
0x00000000004ac32b : add al, dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x5e], ah ; cmc ; call qword ptr [rcx]
0x00000000004ae5ef : add al, dl ; mov cl, 0xf6 ; call qword ptr [rsi]
0x00000000004b4fbf : add al, dl ; out 0xfc, al ; jmp qword ptr [rcx]
0x00000000004afe6f : add al, dl ; ret
0x00000000004b4a30 : add bh, 0xfc ; jmp qword ptr [rcx]
0x00000000004b497e : add bh, ah ; ret
0x000000000044eeff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045f4f7 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040f04f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040164d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000484c79 : add bh, byte ptr [rax + 1] ; ret
0x0000000000484dd6 : add bh, byte ptr [rax + 2] ; ret
0x0000000000449ddb : add bh, byte ptr [rax - 1] ; ret
0x0000000000446d52 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004b52f9 : add bh, ch ; jmp qword ptr [rdx]
0x00000000004b5311 : add bh, ch ; jmp rdx
0x000000000040141a : add bh, dh ; ret 0
0x0000000000453839 : add bh, dh ; ret 0xf800
0x000000000040f68f : add bh, dh ; ret 0xffef
0x00000000004951ad : add bh, dl ; call qword ptr [rax]
0x00000000004950f1 : add bh, dl ; call rsp
0x0000000000494fb1 : add bh, dl ; jmp qword ptr [rax]
0x00000000004950ed : add bh, dl ; ljmp ptr [rsi] ; add bh, dl ; call rsp
0x0000000000474c91 : add bl, al ; mov eax, 2 ; ret
0x000000000048887a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000494bb4 : add bl, bl ; stc ; jmp rax
0x0000000000464069 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x464002 ; ret
0x000000000048a6cb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x00000000004862f9 : add bl, ch ; ret
0x000000000040f928 : add bl, ch ; ret 0x1f0f
0x0000000000401aa3 : add bl, ch ; ret 0xe883
0x0000000000495920 : add bl, dh ; cli ; jmp qword ptr [rax]
0x000000000048b4a3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a7f : add bl, dh ; ret
0x000000000041b8ee : add bl, sil ; ret
0x000000000044b103 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000455a33 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000455a1e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455a48 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000482f35 : add byte ptr [r8 + 0x39], r9b ; retf
0x0000000000481d60 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000472fb6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004559e5 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e74a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b0185 : add byte ptr [r8], al ; js 0x4b01d4 ; stc ; jmp qword ptr [rbx]
0x00000000004b0184 : add byte ptr [r8], al ; js 0x4b01d5 ; stc ; jmp qword ptr [rbx]
0x00000000004b03b1 : add byte ptr [r8], al ; or al, 0x80 ; stc ; call qword ptr [rdx]
0x00000000004b0401 : add byte ptr [r8], al ; sub al, 0x80 ; stc ; jmp rbx
0x00000000004590ac : add byte ptr [r8], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b0fa5 : add byte ptr [r8], r8b ; cwde ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004b0f55 : add byte ptr [r8], r8b ; mov dil, 0xf9 ; call qword ptr [rax]
0x00000000004b0f6d : add byte ptr [r8], r8b ; mov dil, 0xf9 ; call qword ptr [rdx]
0x0000000000475ddb : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b23db : add byte ptr [rax + 0x10000063], ah ; int1 ; std ; call rdx
0x000000000044c893 : add byte ptr [rax + 0x15], bh ; syscall
0x0000000000423eff : add byte ptr [rax + 0x16], bh ; ret
0x0000000000449d2f : add byte ptr [rax + 0x18], bh ; syscall
0x0000000000449d2e : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044ae3f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004b3c17 : add byte ptr [rax + 0x1f], bl ; cld ; jmp qword ptr [rcx]
0x00000000004b10bb : add byte ptr [rax + 0x20000050], al ; ret 0xfff9
0x00000000004b35eb : add byte ptr [rax + 0x20000075], dh ; stc ; sti ; jmp qword ptr [rbx]
0x0000000000488d1f : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000412b70 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000452fc1 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000453b27 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000466828 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000477378 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047b06a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000422b34 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000455c0c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000465bd9 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047f010 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004b59df : add byte ptr [rax + 0x33], al ; std ; jmp qword ptr [rcx]
0x000000000040f02f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b6a3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041aa5f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000413b4f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b738 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047b6e2 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041d9f0 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000004789b8 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000482f36 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042e5c6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000434ebf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041e9cf : add byte ptr [rax + 0x39], cl ; retf 0x7b73
0x000000000041128d : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004474f8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042e0e6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000448803 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000448640 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004860c8 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004b59db : add byte ptr [rax + 0x40000099], ah ; xor edi, ebp ; jmp qword ptr [rcx]
0x00000000004b0183 : add byte ptr [rax + 0x41], cl ; add byte ptr [rax], al ; js 0x4b01d6 ; stc ; jmp qword ptr [rbx]
0x00000000004b0187 : add byte ptr [rax + 0x44], bh ; stc ; jmp qword ptr [rbx]
0x00000000004b048b : add byte ptr [rax + 0x44], dl ; add byte ptr [rax], al ; jo 0x4b041c ; stc ; call qword ptr [rbx]
0x00000000004b52f3 : add byte ptr [rax + 0x48000092], bh ; add bh, ch ; jmp qword ptr [rdx]
0x000000000044a266 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b0fa3 : add byte ptr [rax + 0x4f], ch ; add byte ptr [rax], al ; cwde ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004ac7cb : add byte ptr [rax + 0x50000007], dl ; sahf ; cmc ; jmp qword ptr [rax]
0x00000000004b5c97 : add byte ptr [rax + 0x55], ch ; std ; call qword ptr [rdx]
0x00000000004afff3 : add byte ptr [rax + 0x5800003f], bh ; xchg eax, ebx ; clc ; call qword ptr [rax]
0x00000000004ac32f : add byte ptr [rax + 0x5e], ah ; cmc ; call qword ptr [rcx]
0x00000000004ac357 : add byte ptr [rax + 0x5e], bh ; cmc ; call qword ptr [rcx]
0x00000000004b1ea3 : add byte ptr [rax + 0x5e], ch ; add byte ptr [rax], al ; pop rax ; out dx, al ; std ; jmp qword ptr [rdi]
0x000000000040d83d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046f4d5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000402644 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046fb05 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000449a42 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004488c6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000045a1b7 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048d173 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004691d5 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000047231f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000046ffd3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045e621 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000475b9f : add byte ptr [rax + 0x66], bh ; syscall
0x00000000004b13bb : add byte ptr [rax + 0x67000053], al ; int1 ; hlt ; jmp qword ptr [rbx]
0x0000000000475bbf : add byte ptr [rax + 0x68], bh ; syscall
0x00000000004ac0f3 : add byte ptr [rax + 0x69000000], bh ; cmc ; jmp qword ptr [rsi]
0x0000000000475baf : add byte ptr [rax + 0x6b], bh ; syscall
0x0000000000475bcf : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000489e68 : add byte ptr [rax + 0x74], ah ; xor ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000044153f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b37b3 : add byte ptr [rax + 0x77], bh ; add byte ptr [rax], al ; test al, 0 ; cld ; jmp rdx
0x0000000000444f7f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004b399b : add byte ptr [rax + 0x79], ah ; add byte ptr [rax], al ; and byte ptr [rax], dl ; cld ; jmp qword ptr [rax]
0x00000000004ae6c3 : add byte ptr [rax + 0x8000026], cl ; mov bl, 0xf6 ; call qword ptr [rdx]
0x000000000044ae0f : add byte ptr [rax + 0xa], bh ; syscall
0x00000000004b3817 : add byte ptr [rax + 0xa], cl ; cld ; jmp qword ptr [rbx]
0x000000000044addf : add byte ptr [rax + 0xb], bh ; syscall
0x000000000044c5d1 : add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449aa4 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040e19f : add byte ptr [rax + 0xe], bh ; syscall
0x0000000000424ee9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000448997 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x0000000000415edf : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004738b5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004502df : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041d7a4 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b876 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000424274 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041387a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041e863 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b8c5 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044890a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004241ed : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424cad : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000454658 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x0000000000484c3c : add byte ptr [rax + 1], bh ; ret
0x000000000044a17f : add byte ptr [rax + 1], bh ; syscall
0x000000000042b984 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411af2 : add byte ptr [rax + 1], cl ; ret
0x0000000000483e48 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000488860 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x0000000000434f7d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044d410 : add byte ptr [rax + 1], cl ; retf 0x8548
0x00000000004034d3 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000451165 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000004b530f : add byte ptr [rax + 2], ah ; std ; jmp rdx
0x0000000000484e45 : add byte ptr [rax + 2], bh ; ret
0x00000000004b52f7 : add byte ptr [rax + 2], cl ; std ; jmp qword ptr [rdx]
0x00000000004ac2ab : add byte ptr [rax + 2], dh ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], bl ; call qword ptr [rcx]
0x000000000044a42f : add byte ptr [rax + 3], bh ; syscall
0x00000000004b37ff : add byte ptr [rax + 7], al ; cld ; jmp qword ptr [rax]
0x000000000044a1af : add byte ptr [rax + 8], bh ; syscall
0x000000000044a1ae : add byte ptr [rax + 8], dil ; syscall
0x0000000000481d61 : add byte ptr [rax + 9], cl ; ret 0x840f
0x00000000004767b8 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e96b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004b0403 : add byte ptr [rax + rax*4], ch ; stc ; jmp rbx
0x00000000004b03b3 : add byte ptr [rax + rax*4], cl ; stc ; call qword ptr [rdx]
0x0000000000450b33 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000040080a : add byte ptr [rax + rax], 0xbf ; ret 0
0x0000000000472d0f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424c14 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041e70b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000004742c7 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000045b62d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000040222f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffc8
0x000000000049fb17 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004ac62b : add byte ptr [rax + rdx*4], dl ; cmc ; call rsp
0x00000000004b1ea7 : add byte ptr [rax - 0x12], bl ; std ; jmp qword ptr [rdi]
0x000000000046fb47 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047c134 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000041dc0f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b4fbb : add byte ptr [rax - 0x2fffff71], al ; out 0xfc, al ; jmp qword ptr [rcx]
0x00000000004ae5eb : add byte ptr [rax - 0x2fffffdb], dh ; mov cl, 0xf6 ; call qword ptr [rsi]
0x0000000000401637 : add byte ptr [rax - 0x39], cl ; ret
0x00000000004102d3 : add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x0000000000465bcb : add byte ptr [rax - 0x39], cl ; ret 0xc2c8
0x000000000045deaf : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040e1c7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000468b55 : add byte ptr [rax - 0x39], cl ; ret 0xffc8
0x0000000000423e05 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000474eef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000474ecf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000474f2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474edf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000474f1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045b76f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000458f09 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000458ee0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458840 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482e35 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004b0f6f : add byte ptr [rax - 0x49], al ; stc ; call qword ptr [rdx]
0x00000000004b0f57 : add byte ptr [rax - 0x49], cl ; stc ; call qword ptr [rax]
0x00000000004b0eb7 : add byte ptr [rax - 0x4a], ch ; stc ; jmp qword ptr [rcx]
0x00000000004b001f : add byte ptr [rax - 0x4b], dh ; clc ; call qword ptr [rax]
0x0000000000461faf : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b1fbb : add byte ptr [rax - 0x4fffffa1], al ; je 0x4b1fc5 ; call qword ptr [rsi]
0x00000000004b15c3 : add byte ptr [rax - 0x57ffffab], cl ; idiv ch ; jmp qword ptr [rdx]
0x00000000004ac7cf : add byte ptr [rax - 0x62], dl ; cmc ; jmp qword ptr [rax]
0x00000000004afff7 : add byte ptr [rax - 0x6d], bl ; clc ; call qword ptr [rax]
0x00000000004b19db : add byte ptr [rax - 0x6fffffa7], ah ; sbb edi, edx ; call qword ptr [rdi]
0x00000000004557da : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045795d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044dbcf : add byte ptr [rax - 0x73], cl ; add eax, 0x26d729 ; ret
0x000000000045797b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457999 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004830b7 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041ce8a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041f3df : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b708 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000481f5b : add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000046c1cb : add byte ptr [rax - 0x73], cl ; xor eax, 0x24bc4d ; jmp rax
0x000000000047ca5c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041a1ff : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000486637 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048b0a8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461f07 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000461865 : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046131b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000400ea5 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx + 0x6348f855], cl ; retf 0x8b48
0x000000000045805f : add byte ptr [rax - 0x75], cl ; add eax, 0x264e11 ; ret
0x000000000044fb7f : add byte ptr [rax - 0x75], cl ; add eax, 0x26ddc1 ; ret
0x000000000041902f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a10e9 ; ret
0x000000000040e4eb : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x0000000000400d80 : add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x000000000044efbf : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004232df : add byte ptr [rax - 0x75], cl ; je 0x423311 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045c00b : add byte ptr [rax - 0x75], cl ; jl 0x45c03c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040ef82 : add byte ptr [rax - 0x75], cl ; js 0x40efac ; call rdx
0x000000000047260f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000487380 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000402513 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004014fd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042fb0f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004831b2 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000412c8f : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000004715ad : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004850d6 : add byte ptr [rax - 0x77], cl ; add eax, 0x237f8a ; ret
0x000000000041a0ca : add byte ptr [rax - 0x77], cl ; add eax, 0x2a078e ; ret
0x0000000000419bc5 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0c23 ; ret
0x0000000000419b9d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0c43 ; ret
0x0000000000419b7d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0c5b ; ret
0x0000000000413312 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410e83 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004559e6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004553d0 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x00000000004601c4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000048bb4e : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000418c1b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000401df1 : add byte ptr [rax - 0x77], cl ; jbe 0x401e0b ; syscall
0x000000000044c83f : add byte ptr [rax - 0x77], cl ; jo 0x44c869 ; ret
0x00000000004801eb : add byte ptr [rax - 0x77], cl ; jrcxz 0x48023f ; mov esi, ebx ; syscall
0x0000000000413463 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000423f5f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000423f0f : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x4201e6
0x0000000000403e31 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000449c3b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041e6b7 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411bc6 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000413a9a : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000403424 : add byte ptr [rax - 0x77], cl ; ret 0x2fe9
0x000000000048ef1c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449ce7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000004606d8 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041ba2d : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000403258 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410938 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000449a13 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e66f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456a48 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403753 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046ad17 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f95d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004151f8 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000449c52 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000449757 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043d9f4 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042aaec : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045ee3b : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004115f7 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000455fe7 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042aa2a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456799 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d876 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043f3ec : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000447760 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000482351 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048d28f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000042491f : add byte ptr [rax - 0x77], cl ; sti ; jmp 0x4248f5
0x000000000042491e : add byte ptr [rax - 0x77], cl ; sti ; jmp 0x4248f6
0x000000000047bde3 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000041086f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048b186 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000473d1f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047206b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000046dcbd : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463e19 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000048c84f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000048f3ce : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004205ac : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041da97 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041d6fc : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000048008d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004241ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004020c9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411c0a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000462413 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048aeb1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041745f : add byte ptr [rax - 0x7d], cl ; jg 0x4174a5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041fa22 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472026 : add byte ptr [rax - 0x7d], cl ; js 0x472064 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040652f : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446e4f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044cbe7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046fb17 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f7af : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004566a4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004860af : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047e35a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045e604 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042ab19 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f077 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e64f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046fcf8 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424670 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043dad3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ab47 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047e617 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a6aa : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000422c39 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040dd15 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041d890 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040dd75 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000042654f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000473e5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000410eca : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000489c12 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004b048f : add byte ptr [rax - 0x7e], dh ; stc ; call qword ptr [rbx]
0x0000000000423ff1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x285
0x000000000040eec1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x3d6
0x000000000045b614 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000043377b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000041262a : add byte ptr [rax - 1], bh ; ret
0x000000000044ba9c : add byte ptr [rax - 3], dl ; push rbx ; ret
0x00000000004b16ff : add byte ptr [rax - 5], dl ; stc ; call qword ptr [rax]
0x0000000000494854 : add byte ptr [rax - 7], bl ; push qword ptr [rax + 0x59] ; stc ; jmp rax
0x0000000000494828 : add byte ptr [rax - 7], cl ; push qword ptr [rax] ; xor bh, cl ; call qword ptr [rax]
0x0000000000410253 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000423ff5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x285
0x000000000040eec5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x3d6
0x00000000004163aa : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000044863d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000434f7a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000004030aa : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004151f5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000435f5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044894b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418e43 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042c7db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a0ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042cd41 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b399f : add byte ptr [rax], ah ; adc ah, bh ; jmp qword ptr [rax]
0x00000000004b006f : add byte ptr [rax], ah ; clc ; call qword ptr [rax]
0x0000000000497c1f : add byte ptr [rax], ah ; cld ; call qword ptr [rax]
0x00000000004b676f : add byte ptr [rax], ah ; popfq ; std ; jmp qword ptr [rax]
0x00000000004b10bf : add byte ptr [rax], ah ; ret 0xfff9
0x00000000004b35ef : add byte ptr [rax], ah ; stc ; sti ; jmp qword ptr [rbx]
0x00000000004b223f : add byte ptr [rax], ah ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004b1f7a : add byte ptr [rax], al ; adc al, 0x72 ; cli ; call rdi
0x00000000004ac62a : add byte ptr [rax], al ; adc al, 0x90 ; cmc ; call rsp
0x00000000004ac2ae : add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], bl ; call qword ptr [rcx]
0x00000000004b13ba : add byte ptr [rax], al ; adc byte ptr [rbx], 0 ; int1 ; hlt ; jmp qword ptr [rbx]
0x00000000004b23de : add byte ptr [rax], al ; adc cl, dh ; std ; call rdx
0x00000000004b194a : add byte ptr [rax], al ; adc r15b, dl ; call rcx
0x00000000004b593e : add byte ptr [rax], al ; add al, 0x99 ; add byte ptr [rax], al ; cld ; xor ebp, edi ; jmp qword ptr [rdx]
0x00000000004ac33e : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rsi ; cmc ; call qword ptr [rcx]
0x000000000049476d : add byte ptr [rax], al ; add al, ah ; or ecx, edi ; jmp qword ptr [rax]
0x0000000000400d57 : add byte ptr [rax], al ; add al, ch ; adc ebx, esp ; add byte ptr [rax], al ; leave ; ret
0x0000000000410254 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000423ff6 : add byte ptr [rax], al ; add al, ch ; ret 0x285
0x000000000040eec6 : add byte ptr [rax], al ; add al, ch ; ret 0x3d6
0x000000000045b316 : add byte ptr [rax], al ; add al, ch ; ret 0xfc4e
0x000000000041509d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000004793ae : add byte ptr [rax], al ; add al, ch ; retf 0x98
0x00000000004b4a2e : add byte ptr [rax], al ; add bh, 0xfc ; jmp qword ptr [rcx]
0x000000000045f53e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040f04d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000474c8f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000004862f7 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f926 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004163ab : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004b0182 : add byte ptr [rax], al ; add byte ptr [r8], al ; js 0x4b01d7 ; stc ; jmp qword ptr [rbx]
0x00000000004b10b9 : add byte ptr [rax], al ; add byte ptr [rax + 0x20000050], al ; ret 0xfff9
0x0000000000488d1d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000469538 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000466826 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000477376 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047b068 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000465bd7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047f00e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000041fc0f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b6a1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041aa5d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000413b4d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b736 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042e5c4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004379b1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041128b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044863e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000044a264 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000046bc54 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000047231d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x0000000000475bbd : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x0000000000475bad : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x0000000000475bcd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000444f7d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044addd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044c5cf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449aa2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040e19d : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000448995 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041d7a2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000485852 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000453642 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041e861 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000448908 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004749ad : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000454656 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x0000000000484c3a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044a17d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000483779 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483e46 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000434f7b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000451163 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484e43 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000046fb45 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x00000000004030ab : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004102d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x000000000045dead : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044a07d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000458f07 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000458ede : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045883e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482e33 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045795b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000457979 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457997 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000481f59 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000041a1fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000400d7e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x000000000040ef80 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40efae ; call rdx
0x0000000000402511 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000041905d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004553ce : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x00000000004601c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000048bb4c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000401def : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x401e0d ; syscall
0x000000000044c83d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c86b ; ret
0x0000000000423f5d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000423f0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x4201e8
0x00000000004108b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411bc4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000460b34 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041c2ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e66d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046afb5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f95b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004151f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044bc32 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045ee39 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042aa28 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456797 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d874 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043f3ea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048d28d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048b184 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000046dcbb : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040652d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446e4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f7ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004860ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047e358 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042b833 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e64d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004732ce : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f191 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b85d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042654d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000489c10 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000434f74 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000412628 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000497c1d : add byte ptr [rax], al ; add byte ptr [rax], ah ; cld ; call qword ptr [rax]
0x000000000049476b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; or ecx, edi ; jmp qword ptr [rax]
0x000000000041548b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040f04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041901b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000413b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000047231b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045deab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044a07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041905b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044c83b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c86d ; ret
0x000000000041c2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048d28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000040652b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048e64b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000497c1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; cld ; call qword ptr [rax]
0x0000000000497c1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and byte ptr [rsi], ch ; cld ; call qword ptr [rax]
0x000000000049476a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x494784 ; stc ; jmp qword ptr [rax]
0x0000000000417c46 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a07f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0ce2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049fea2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0832 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a0d22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049fe9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004199ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044708b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042689b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004251ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000045a44b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x00000000004135cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041a75b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042310b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044ad7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000474eac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004821ff : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000497c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; and byte ptr [rsi], ch ; cld ; call qword ptr [rax]
0x000000000040f04c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041a6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004a281c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a19cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000448907 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d854 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d83c ; ret
0x00000000004862f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4862c4
0x000000000046096d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004455ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004455bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000004455cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004455dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004455ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000044552c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000044553c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044554c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044555c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044556c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000044557c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000044558c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044559c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000044551c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000049476c : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x494782 ; stc ; jmp qword ptr [rax]
0x0000000000444f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044495c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000488d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x0000000000475bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x0000000000475bac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x0000000000475bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044addc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000418fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484c39 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044a17c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484e42 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004497fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000435f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c83c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048220c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041904c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041905c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000423f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x4201e9
0x00000000004816ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x00000000004135cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044894c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004360ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004005ab : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004199ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041218c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000401fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a17ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1f84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a07f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0ce4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049fea4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a1824 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1fc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004a0834 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a0d24 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049fe9c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042c08c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x0000000000417f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x0000000000473d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004107dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x000000000044535c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004815ec : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x0000000000449d94 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048578d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e761 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x0000000000475f2b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000482592 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x00000000004824d2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000457f85 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000004826f3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004849fe : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044aecd : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449fc4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475df9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000044a354 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044ace3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488b08 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045b6bc : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004856aa : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d896 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041f9a9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000478217 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; retf 2
0x000000000044c478 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042b7e8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004581b9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043583d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000414ba2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417b64 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410279 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d855 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046d94d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000046695a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000460deb : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000411eb4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004ac0f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x4c], ch ; cmc ; jmp qword ptr [rsi]
0x000000000046145f : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046d218 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000469f26 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046e199 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044708d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e6d3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000049279d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000403a72 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x4004d0
0x00000000004740ed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000491ead : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000044bb18 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bb27 ; call r12
0x000000000044bb48 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bb57 ; call r12
0x0000000000458c29 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004243a2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000404dbe : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000047a462 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004243e9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000041d8c5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042689d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004251ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042c260 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042c286 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000044ad93 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040f262 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042bb6a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004107dd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000048d5c3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048d5eb : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048e33a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045a44d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463d93 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040e174 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481794 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000448895 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043603d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004360ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000454929 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000044894d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000004135cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042bbad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000458f29 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000465ff1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x000000000044f0bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sub dword ptr [rbp - 0x60], eax ; call 0x44b3a9
0x0000000000476ea0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d7c5 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b223a : add byte ptr [rax], al ; add byte ptr [rdx], ah ; add byte ptr [rax], ah ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004859c0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042cd42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041a75d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042bad2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000045ab31 : add byte ptr [rax], al ; add byte ptr [rsp + rax*2 - 0x75], ah ; xor al, ch ; ret
0x0000000000455aa3 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045f778 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000455256 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000423d74 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048b1ce : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000400e28 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046aa36 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045f280 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000045172d : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000042310d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044ad7d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004467e1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b52f6 : add byte ptr [rax], al ; add dil, bpl ; jmp qword ptr [rdx]
0x0000000000474eae : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042b983 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000412252 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d800 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000484fcc : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048b2c3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000416adb : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449eb9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044a24c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000401b3c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044ba0e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000482201 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b1e5e : add byte ptr [rax], al ; and al, 0x5e ; add byte ptr [rax], al ; or al, 0x6f ; cli ; call qword ptr [rdx]
0x00000000004b399e : add byte ptr [rax], al ; and byte ptr [rax], dl ; cld ; jmp qword ptr [rax]
0x0000000000497c1e : add byte ptr [rax], al ; and byte ptr [rsi], ch ; cld ; call qword ptr [rax]
0x00000000004b35ee : add byte ptr [rax], al ; and cl, bh ; sti ; jmp qword ptr [rbx]
0x00000000004b006e : add byte ptr [rax], al ; and dl, dh ; clc ; call qword ptr [rax]
0x000000000042bbae : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004411d0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004738b4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000455e3c : add byte ptr [rax], al ; call 0x402144
0x0000000000403535 : add byte ptr [rax], al ; call 4
0x000000000040f04e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048d5c9 : add byte ptr [rax], al ; call r14
0x000000000040ef5b : add byte ptr [rax], al ; call rax
0x00000000004a281e : add byte ptr [rax], al ; call rdi
0x000000000040ee95 : add byte ptr [rax], al ; call rdx
0x00000000004a19ce : add byte ptr [rax], al ; call rsp
0x0000000000448a14 : add byte ptr [rax], al ; clc ; jg 0x448a18 ; int1 ; mov eax, eax ; ret
0x00000000004b0336 : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; xor al, 0x77 ; stc ; call rsp
0x00000000004b5942 : add byte ptr [rax], al ; cld ; xor ebp, edi ; jmp qword ptr [rdx]
0x0000000000448941 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000448909 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000424bec : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000424223 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b1f76 : add byte ptr [rax], al ; cmp al, 0x5f ; add byte ptr [rax], al ; adc al, 0x72 ; cli ; call rdi
0x00000000004b1ee2 : add byte ptr [rax], al ; cmp al, 0x6f ; cli ; jmp rax
0x00000000004aca72 : add byte ptr [rax], al ; cmp byte ptr [rdx], cl ; add byte ptr [rax], al ; cwde ; and dh, dh ; call rsp
0x00000000004b3606 : add byte ptr [rax], al ; cmp cl, bh ; sti ; jmp qword ptr [rbx]
0x0000000000420037 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x420008 ; ret
0x00000000004aca76 : add byte ptr [rax], al ; cwde ; and dh, dh ; call rsp
0x00000000004b0fa6 : add byte ptr [rax], al ; cwde ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004b0046 : add byte ptr [rax], al ; cwde ; salc ; clc ; call qword ptr [rax]
0x000000000049e97a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a29ce : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049fb26 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004b3602 : add byte ptr [rax], al ; enter 0x75, 0 ; cmp cl, bh ; sti ; jmp qword ptr [rbx]
0x000000000049f326 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049f726 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a2bce : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a2dce : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a2fce : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a31ce : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a33ce : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a35ce : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a37ce : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a39ce : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a3bce : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004ac612 : add byte ptr [rax], al ; fadd dword ptr [rip - 0x6ff80000] ; cmc ; call qword ptr [rdx]
0x00000000004b3812 : add byte ptr [rax], al ; fdiv dword ptr [rdi] ; add byte ptr [rax + 0xa], cl ; cld ; jmp qword ptr [rbx]
0x00000000004b3c12 : add byte ptr [rax], al ; fdivr dword ptr [rbx] ; add byte ptr [rax + 0x1f], bl ; cld ; jmp qword ptr [rcx]
0x00000000004b252e : add byte ptr [rax], al ; hlt ; add byte ptr fs:[rax], al ; sub al, 0xaf ; cli ; call qword ptr [rdx]
0x0000000000400a78 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b115a : add byte ptr [rax], al ; in al, 0xca ; stc ; jmp qword ptr [rdx]
0x00000000004ac626 : add byte ptr [rax], al ; in al, dx ; add eax, 0x90140000 ; cmc ; call rsp
0x00000000004ac342 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rsi ; cmc ; call qword ptr [rcx]
0x00000000004b13be : add byte ptr [rax], al ; int1 ; hlt ; jmp qword ptr [rbx]
0x000000000048e33b : add byte ptr [rax], al ; ja 0x48e348 ; sbb eax, eax ; ret
0x0000000000413266 : add byte ptr [rax], al ; je 0x413271 ; ret
0x0000000000424c50 : add byte ptr [rax], al ; je 0x424c1f ; ret
0x00000000004742c9 : add byte ptr [rax], al ; je 0x4742d5 ; ret
0x000000000048d7c6 : add byte ptr [rax], al ; je 0x48d7b4 ; add rsp, 0x18 ; ret
0x000000000048d856 : add byte ptr [rax], al ; je 0x48d83a ; ret
0x000000000048d897 : add byte ptr [rax], al ; je 0x48d8a8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b03ae : add byte ptr [rax], al ; je 0x4b03fe ; add byte ptr [rax], al ; or al, 0x80 ; stc ; call qword ptr [rdx]
0x00000000004b5a12 : add byte ptr [rax], al ; jl 0x4b5a4e ; std ; jmp rsp
0x0000000000485833 : add byte ptr [rax], al ; jmp 0x402244
0x00000000004862f8 : add byte ptr [rax], al ; jmp 0x4862c2
0x000000000044aebb : add byte ptr [rax], al ; jmp rax
0x000000000041a93e : add byte ptr [rax], al ; jne 0x41a951 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042c842 : add byte ptr [rax], al ; jne 0x42c758 ; ret
0x0000000000448fdd : add byte ptr [rax], al ; jne 0x44900d ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449d95 : add byte ptr [rax], al ; jne 0x449db1 ; add rsp, 0x28 ; ret
0x0000000000449fc5 : add byte ptr [rax], al ; jne 0x44a013 ; add rsp, 0x58 ; ret
0x000000000044a355 : add byte ptr [rax], al ; jne 0x44a3ab ; add rsp, 0x68 ; ret
0x000000000044ace4 : add byte ptr [rax], al ; jne 0x44acff ; add rsp, 0x28 ; ret
0x000000000045b6bd : add byte ptr [rax], al ; jne 0x45b6ce ; add rsp, 0x18 ; ret
0x0000000000475dfa : add byte ptr [rax], al ; jne 0x475e4b ; add rsp, 0x58 ; ret
0x0000000000475f2c : add byte ptr [rax], al ; jne 0x475f53 ; add rsp, 0x38 ; ret
0x00000000004823d8 : add byte ptr [rax], al ; jne 0x4823eb ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004824d3 : add byte ptr [rax], al ; jne 0x48250b ; add rsp, 0x38 ; ret
0x0000000000482593 : add byte ptr [rax], al ; jne 0x4825c6 ; add rsp, 0x68 ; ret
0x00000000004826f4 : add byte ptr [rax], al ; jne 0x482736 ; add rsp, 0x78 ; ret
0x00000000004829c3 : add byte ptr [rax], al ; jne 0x4829f6 ; add rsp, 0x68 ; ret
0x00000000004849ff : add byte ptr [rax], al ; jne 0x484a43 ; leave ; ret
0x00000000004856ab : add byte ptr [rax], al ; jne 0x4856bc ; add rsp, 0x38 ; ret
0x000000000048578e : add byte ptr [rax], al ; jne 0x4857ac ; add rsp, 0x38 ; ret
0x0000000000487f79 : add byte ptr [rax], al ; jne 0x487f84 ; pop rbx ; ret
0x0000000000488b09 : add byte ptr [rax], al ; jne 0x488b24 ; add rsp, 0x38 ; ret
0x000000000048e762 : add byte ptr [rax], al ; jne 0x48e785 ; ret
0x00000000004ac2aa : add byte ptr [rax], al ; jo 0x4ac2b9 ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], bl ; call qword ptr [rcx]
0x00000000004b001e : add byte ptr [rax], al ; jo 0x4affdc ; clc ; call qword ptr [rax]
0x00000000004b048e : add byte ptr [rax], al ; jo 0x4b0419 ; stc ; call qword ptr [rbx]
0x00000000004ac356 : add byte ptr [rax], al ; js 0x4ac3bd ; cmc ; call qword ptr [rcx]
0x00000000004b0186 : add byte ptr [rax], al ; js 0x4b01d3 ; stc ; jmp qword ptr [rbx]
0x00000000004b37b2 : add byte ptr [rax], al ; js 0x4b3836 ; add byte ptr [rax], al ; test al, 0 ; cld ; jmp rdx
0x00000000004455ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004455be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000004455ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004455de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004455ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000044550d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044552e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000044553e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044554e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044555e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044556e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000044557e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004454ba : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000044558e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044559e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000044551e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044dbce : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x26d729] ; ret
0x000000000046c1ca : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x24bc4d] ; jmp rax
0x0000000000400d5d : add byte ptr [rax], al ; leave ; ret
0x000000000049476e : add byte ptr [rax], al ; loopne 0x494780 ; stc ; jmp qword ptr [rax]
0x00000000004acc1a : add byte ptr [rax], al ; loopne 0x4acc32 ; add byte ptr [rax], al ; shl byte ptr [rdi], 0xf6 ; jmp qword ptr [rax]
0x00000000004b001a : add byte ptr [rax], al ; loopne 0x4b0066 ; add byte ptr [rax], al ; jo 0x4affe0 ; clc ; call qword ptr [rax]
0x00000000004b1fbe : add byte ptr [rax], al ; mov al, 0x74 ; cli ; call qword ptr [rsi]
0x00000000004b35ea : add byte ptr [rax], al ; mov al, 0x75 ; add byte ptr [rax], al ; and cl, bh ; sti ; jmp qword ptr [rbx]
0x000000000044448e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442cde : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000041330e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000444f7e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044495e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004afd66 : add byte ptr [rax], al ; mov byte ptr [rdx - 9], dl ; jmp qword ptr [rbx]
0x00000000004b0f56 : add byte ptr [rax], al ; mov dil, 0xf9 ; call qword ptr [rax]
0x00000000004b0f6e : add byte ptr [rax], al ; mov dil, 0xf9 ; call qword ptr [rdx]
0x000000000047210b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419bdc : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a0c28], eax ; ret
0x000000000044496e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042417e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044ae3e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x0000000000488d1e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000044a265 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004b52f2 : add byte ptr [rax], al ; mov eax, 0x48000092 ; add bh, ch ; jmp qword ptr [rdx]
0x00000000004afff2 : add byte ptr [rax], al ; mov eax, 0x5800003f ; xchg eax, ebx ; clc ; call qword ptr [rax]
0x0000000000475b9e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x0000000000475bbe : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000004ac0f2 : add byte ptr [rax], al ; mov eax, 0x69000000 ; cmc ; jmp qword ptr [rsi]
0x0000000000475bae : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x0000000000475bce : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044ae0e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044adde : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044c5d0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040e19e : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000449aa3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000412629 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484c3b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044a17e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484e44 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000418cfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048fbde : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48fbf9 ; ret
0x000000000048fe0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48fe29 ; ret
0x000000000040e169 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047edef : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000469212 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004669b1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044499e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048d5c4 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048d5ec : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004497fe : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043583e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c686 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000044c83e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000485628 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000482350 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488b82 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488c56 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047bdb4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d8ee : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484c58 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000419b9c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0c43], rax ; ret
0x0000000000419b7c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0c5b], rax ; ret
0x0000000000401df0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041828e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045b76e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x0000000000474ece : add byte ptr [rax], al ; mov rax, 1 ; ret
0x0000000000474ede : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000474eee : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000474efe : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000474f0e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000474f1e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000474f2e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047d383 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041217e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000048220e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000400d7f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x000000000047cb9e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047260e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041904e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d86e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d8fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d95e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d94e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d90e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000045805e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264e11] ; ret
0x000000000044fb8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26ddc1] ; ret
0x000000000041902e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a10e9] ; ret
0x000000000048b63e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x00000000004740ee : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000004146f4 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048da68 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410e82 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041905e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e70e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000004801ea : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x000000000044775f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044bb19 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040ef81 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000403a73 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x4004cf
0x000000000049279e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000491eae : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000423f0e : add byte ptr [rax], al ; mov rdi, rbp ; call 0x4201e7
0x000000000046f94f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000435d9e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000420c9e : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048e2de : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000423f5e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000044f0bc : add byte ptr [rax], al ; movaps xmmword ptr [rbp - 0x60], xmm0 ; call 0x44b3a8
0x00000000004b1ede : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsi ; add byte ptr [rax], al ; cmp al, 0x6f ; cli ; jmp rax
0x00000000004816ae : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b6f5 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046fb04 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045ae5d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045a95e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004135ce : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044894e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004359ce : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004360ae : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043603e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400be7 : add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000485a6c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044c51c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x000000000047543c : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x00000000004b4b0e : add byte ptr [rax], al ; nop ; retf 0xfffc
0x00000000004b19de : add byte ptr [rax], al ; nop ; sbb edi, edx ; call qword ptr [rdi]
0x000000000044c759 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004b1946 : add byte ptr [rax], al ; or al, 0x59 ; add byte ptr [rax], al ; adc r15b, dl ; call rcx
0x00000000004b1e62 : add byte ptr [rax], al ; or al, 0x6f ; cli ; call qword ptr [rdx]
0x00000000004b03b2 : add byte ptr [rax], al ; or al, 0x80 ; stc ; call qword ptr [rdx]
0x00000000004b1142 : add byte ptr [rax], al ; or byte ptr [rcx], dl ; add al, ch ; retf 0xfff9
0x00000000004b4fba : add byte ptr [rax], al ; or byte ptr [rdi - 0x19300000], 0xfc ; jmp qword ptr [rcx]
0x00000000004af1c6 : add byte ptr [rax], al ; or byte ptr [rdx], cl ; idiv edi ; retf
0x00000000004b3816 : add byte ptr [rax], al ; or dil, spl ; jmp qword ptr [rbx]
0x00000000004b1ea6 : add byte ptr [rax], al ; pop rax ; out dx, al ; std ; jmp qword ptr [rdi]
0x00000000004005ad : add byte ptr [rax], al ; pop rax ; ret
0x00000000004afff6 : add byte ptr [rax], al ; pop rax ; xchg eax, ebx ; clc ; call qword ptr [rax]
0x000000000044aece : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400ab6 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000046695b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004107a4 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000004581ba : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000414ba3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417b65 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041027a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004013b6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b0fa2 : add byte ptr [rax], al ; push -0x67ffffb1 ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004b1ea2 : add byte ptr [rax], al ; push 0x5800005e ; out dx, al ; std ; jmp qword ptr [rdi]
0x00000000004b048a : add byte ptr [rax], al ; push rax ; add byte ptr [rax], r8b ; jo 0x4b041d ; stc ; call qword ptr [rbx]
0x00000000004ac7ce : add byte ptr [rax], al ; push rax ; sahf ; cmc ; jmp qword ptr [rax]
0x00000000004b16fe : add byte ptr [rax], al ; push rax ; sti ; stc ; call qword ptr [rax]
0x00000000004b000a : add byte ptr [rax], al ; push rsp ; xchg eax, ebx ; clc ; jmp qword ptr [rsi]
0x00000000004b110a : add byte ptr [rax], al ; rcl byte ptr [rax], 1 ; add al, al ; retf 0xfff9
0x00000000004b5c6e : add byte ptr [rax], al ; rcl byte ptr [rbx - 3], 0xff ; ret
0x00000000004b530a : add byte ptr [rax], al ; rcl byte ptr [rdx + 0x2600000], 1 ; std ; jmp rdx
0x00000000004b16fa : add byte ptr [rax], al ; rcl byte ptr [rsi], 0 ; push rax ; sti ; stc ; call qword ptr [rax]
0x0000000000400a7e : add byte ptr [rax], al ; ret
0x0000000000498ba6 : add byte ptr [rax], al ; ret 0
0x000000000049fb1e : add byte ptr [rax], al ; ret 0x10
0x00000000004a17ee : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1f86 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a07f6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a0ce6 : add byte ptr [rax], al ; ret 0x33
0x000000000049f31e : add byte ptr [rax], al ; ret 0xa
0x000000000049f71e : add byte ptr [rax], al ; ret 0xd
0x00000000004a2bc2 : add byte ptr [rax], al ; ret 1
0x00000000004a2dc2 : add byte ptr [rax], al ; ret 2
0x00000000004a2fc2 : add byte ptr [rax], al ; ret 3
0x00000000004a31c2 : add byte ptr [rax], al ; ret 4
0x00000000004a33c2 : add byte ptr [rax], al ; ret 5
0x000000000049eec6 : add byte ptr [rax], al ; ret 6
0x00000000004a37c2 : add byte ptr [rax], al ; ret 7
0x00000000004a39c2 : add byte ptr [rax], al ; ret 8
0x00000000004a3bc2 : add byte ptr [rax], al ; ret 9
0x0000000000498bca : add byte ptr [rax], al ; retf
0x0000000000498bc6 : add byte ptr [rax], al ; retf 0
0x000000000049fc7e : add byte ptr [rax], al ; retf 0x11
0x00000000004a1826 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1fc6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004a0836 : add byte ptr [rax], al ; retf 0x24
0x00000000004a0d26 : add byte ptr [rax], al ; retf 0x33
0x000000000049f47e : add byte ptr [rax], al ; retf 0xb
0x000000000049f87e : add byte ptr [rax], al ; retf 0xe
0x000000000049fe9e : add byte ptr [rax], al ; retf 1
0x00000000004a2dd2 : add byte ptr [rax], al ; retf 2
0x00000000004a2fd2 : add byte ptr [rax], al ; retf 3
0x000000000049ed26 : add byte ptr [rax], al ; retf 4
0x00000000004a33d2 : add byte ptr [rax], al ; retf 5
0x00000000004a35d2 : add byte ptr [rax], al ; retf 6
0x00000000004a37d2 : add byte ptr [rax], al ; retf 7
0x00000000004a39d2 : add byte ptr [rax], al ; retf 8
0x00000000004a3bd2 : add byte ptr [rax], al ; retf 9
0x00000000004a31be : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049f5c6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b4b0a : add byte ptr [rax], al ; ror byte ptr [rdx - 0x35700000], 1 ; cld ; jmp qword ptr [rsi]
0x00000000004b1156 : add byte ptr [rax], al ; sbb al, 0x51 ; add byte ptr [rax], al ; in al, 0xca ; stc ; jmp qword ptr [rdx]
0x00000000004b0852 : add byte ptr [rax], al ; sbb byte ptr [rax], cl ; add al, bl ; xchg eax, esp ; stc ; jmp qword ptr [rcx]
0x00000000004ac352 : add byte ptr [rax], al ; sbb byte ptr [rbx], al ; add byte ptr [rax], al ; js 0x4ac3c1 ; cmc ; call qword ptr [rcx]
0x00000000004b1fba : add byte ptr [rax], al ; sbb byte ptr [rdi], 0 ; mov al, 0x74 ; cli ; call qword ptr [rsi]
0x00000000004b0f52 : add byte ptr [rax], al ; sbb byte ptr [rdi], cl ; add byte ptr [rax - 0x49], cl ; stc ; call qword ptr [rax]
0x00000000004b0e52 : add byte ptr [rax], al ; sbb byte ptr [rsi], cl ; add byte ptr [rax], bl ; mov dh, 0xf9 ; call qword ptr [rcx]
0x00000000004acc1e : add byte ptr [rax], al ; shl byte ptr [rdi], 0xf6 ; jmp qword ptr [rax]
0x00000000004b4fbe : add byte ptr [rax], al ; shl dh, 1 ; cld ; jmp qword ptr [rcx]
0x000000000041f6bc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b0402 : add byte ptr [rax], al ; sub al, 0x80 ; stc ; jmp rbx
0x00000000004adca2 : add byte ptr [rax], al ; sub al, 0x8c ; idiv bh ; retf
0x00000000004b2532 : add byte ptr [rax], al ; sub al, 0xaf ; cli ; call qword ptr [rdx]
0x000000000042d78c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004183d6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004472a1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040e162 : add byte ptr [rax], al ; syscall
0x00000000004b37b6 : add byte ptr [rax], al ; test al, 0 ; cld ; jmp rdx
0x00000000004b15c6 : add byte ptr [rax], al ; test al, 0xf6 ; std ; jmp qword ptr [rdx]
0x000000000044c479 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042c08e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004ae4ce : add byte ptr [rax], al ; xchg eax, esp ; and al, 0 ; add byte ptr [rsp + rbp*4 - 0xa], cl ; call qword ptr [rdi]
0x00000000004b033a : add byte ptr [rax], al ; xor al, 0x77 ; stc ; call rsp
0x00000000004b006a : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax], ah ; clc ; call qword ptr [rax]
0x00000000004b116a : add byte ptr [rax], al ; xor byte ptr [rcx], dl ; add byte ptr [rax], al ; retf
0x00000000004b676a : add byte ptr [rax], al ; xor byte ptr [rdi - 0x62e00000], ah ; std ; jmp qword ptr [rax]
0x00000000004b0f6a : add byte ptr [rax], al ; xor byte ptr [rdi], cl ; add byte ptr [rax - 0x49], al ; stc ; call qword ptr [rdx]
0x000000000045d407 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000047634e : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040f263 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048da75 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f816 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a0ae : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042bfda : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004b59de : add byte ptr [rax], al ; xor edi, ebp ; jmp qword ptr [rcx]
0x000000000044abaa : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000004107de : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x0000000000457f86 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000044535e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004815ee : add byte ptr [rax], bh ; retf 0x850f
0x00000000004b3607 : add byte ptr [rax], bh ; stc ; sti ; jmp qword ptr [rbx]
0x00000000004ac6b7 : add byte ptr [rax], bh ; xchg eax, esi ; cmc ; call rax
0x00000000004b0f53 : add byte ptr [rax], bl ; add byte ptr [r8], r8b ; mov dil, 0xf9 ; call qword ptr [rax]
0x00000000004ac353 : add byte ptr [rax], bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x5e], bh ; cmc ; call qword ptr [rcx]
0x00000000004b0e57 : add byte ptr [rax], bl ; mov dh, 0xf9 ; call qword ptr [rcx]
0x00000000004b2507 : add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b0043 : add byte ptr [rax], cl ; add byte ptr [rax], al ; cwde ; salc ; clc ; call qword ptr [rax]
0x00000000004ae767 : add byte ptr [rax], cl ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004ae6c7 : add byte ptr [rax], cl ; mov bl, 0xf6 ; call qword ptr [rdx]
0x000000000048c03e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231169], 8 ; ret
0x00000000004ac617 : add byte ptr [rax], cl ; nop ; cmc ; call qword ptr [rdx]
0x000000000048c045 : add byte ptr [rax], cl ; ret
0x00000000004b0f6b : add byte ptr [rax], dh ; add byte ptr [r8], r8b ; mov dil, 0xf9 ; call qword ptr [rdx]
0x00000000004b006b : add byte ptr [rax], dh ; add byte ptr [rax], al ; and dl, dh ; clc ; call qword ptr [rax]
0x00000000004b5c6b : add byte ptr [rax], dh ; pushfq ; add byte ptr [rax], al ; rcl byte ptr [rbx - 3], 0xff ; ret
0x00000000004b251f : add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b23df : add byte ptr [rax], dl ; int1 ; std ; call rdx
0x00000000004ac2af : add byte ptr [rax], dl ; pop rbp ; cmc ; call qword ptr [rcx]
0x00000000004b658f : add byte ptr [rax], dl ; xchg eax, esi ; std ; call qword ptr [rdx]
0x00000000004b10b8 : add byte ptr [rax], r8b ; add byte ptr [rax + 0x20000050], al ; ret 0xfff9
0x000000000044ba0d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042432c : add byte ptr [rax], r8b ; cmovne rax, rdx ; ret
0x00000000004b048d : add byte ptr [rax], r8b ; jo 0x4b041a ; stc ; call qword ptr [rbx]
0x000000000042417d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044ae3d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x0000000000475b9d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044ae0d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x000000000041918d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x0000000000418cfd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044498d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004449cd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000420c9d : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400ab5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000048537d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a7d : add byte ptr [rax], r8b ; ret
0x0000000000446d5d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449d96 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048578f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e763 : add byte ptr [rbp + 0x1a], dh ; ret
0x0000000000475f2d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000448fde : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000482594 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x00000000004824d4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000413a4a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000457f87 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000004826f5 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484a00 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044aecf : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449fc6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475dfb : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416db7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044a356 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000413087 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x000000000048362f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000048351f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044ace5 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488b0a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x0000000000487f7a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045b6be : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004856ac : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041a93f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d898 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048d7b0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049f717 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000041b95c : add byte ptr [rbp + rcx*4 + 0x24], cl ; sub ecx, dword ptr [rax + 0x39] ; ret
0x00000000004230ae : add byte ptr [rbp + rcx*4 + 0x25], cl ; retf 0x2977
0x0000000000467a3d : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret 0x3c6
0x000000000041f9ab : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047277e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472878 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472972 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000044d556 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x26c4
0x0000000000478219 : add byte ptr [rbp + rcx*4 + 0xd], cl ; retf 2
0x0000000000485ecc : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004907f4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044c47a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f9c3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000449637 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000487274 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004831af : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004696d9 : add byte ptr [rbp - 0x75], cl ; je 0x46970a ; and byte ptr [rax + 1], cl ; ret
0x0000000000427a5d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044dbe5 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048fb87 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004957cc : add byte ptr [rbp - 6], dl ; call qword ptr [rax]
0x000000000043d959 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000491b83 : add byte ptr [rbx + 0x228c8a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000485a8d : add byte ptr [rbx + 0x2376cc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000480475 : add byte ptr [rbx + 0x23ad6b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004242ff : add byte ptr [rbx + 0x298aea15], cl ; add bh, dh ; ret 0
0x0000000000420c17 : add byte ptr [rbx + 0x299bf63d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004190c7 : add byte ptr [rbx + 0x2a3c4505], al ; add byte ptr [rcx], al ; ret
0x000000000041a6bf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004581bb : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000044499f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000004444cf : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00000000004107a5 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000043583f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004223ff : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412d58 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414ba4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000406381 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041027b : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400ea8 : add byte ptr [rbx + 0x6348f855], cl ; retf 0x8b48
0x000000000045a95f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048fbdf : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044b104 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x00000000004742ca : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b03af : add byte ptr [rbx + rax*2], dh ; add byte ptr [rax + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004ac33f : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rsi ; cmc ; call qword ptr [rcx]
0x0000000000401a11 : add byte ptr [rbx + rbp*8], al ; mov byte ptr [rcx], bh ; ret 0x860f
0x000000000048d857 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000415655 : add byte ptr [rbx + rcx*4 + 0x1d], cl ; retf
0x000000000041da1f : add byte ptr [rbx + rcx*4 + 0x40], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000484bd7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488a17 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b000b : add byte ptr [rbx + rdx*4 - 8], dl ; jmp qword ptr [rsi]
0x00000000004b5a13 : add byte ptr [rbx + rsi - 3], bh ; jmp rsp
0x000000000044dbef : add byte ptr [rbx - 0x18], dl ; mov edx, 0x8900027f ; ret
0x00000000004489c8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000004489d6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004489cf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000004489e4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004489dd : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004489c1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x00000000004725c9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x0000000000494b18 : add byte ptr [rbx - 0x4b1f0007], dh ; stc ; call rax
0x000000000046d94f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000448c3e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000046695c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446986 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004074c5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040af91 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040b1f6 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040a3a4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000411558 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x000000000040823c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x00000000004075f2 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040765e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000040a40f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000040a4b2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004135d7 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048f5ff : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000047bde7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004951e8 : add byte ptr [rbx], al ; cli ; push qword ptr [rax + 2] ; cli ; call qword ptr [rax]
0x0000000000460ded : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000467c15 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042aa75 : add byte ptr [rcx + 0x29], cl ; retf
0x0000000000411f4f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000411eb6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000048a0b2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000473e8f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041033d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419b60 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004ac0f7 : add byte ptr [rcx + 0x4c], ch ; cmc ; jmp qword ptr [rsi]
0x00000000004135c0 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000047210c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042e1de : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048b6f6 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045ae5e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042ca3c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000444818 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000461461 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046d21a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000486166 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000469f28 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046e19b : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000046276e : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x00000000004677c7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046c7de : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044708f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e6d5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c945 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000419b3d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004028b2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x0000000000475ddc : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b1947 : add byte ptr [rcx + rbx*2], cl ; add byte ptr [rax], al ; adc r15b, dl ; call rcx
0x00000000004b593f : add byte ptr [rcx + rbx*4], al ; add byte ptr [rax], al ; cld ; xor ebp, edi ; jmp qword ptr [rdx]
0x0000000000417464 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000490e7e : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x22ab
0x000000000049279f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000403a74 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x4004ce
0x00000000004740ef : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048e2df : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000491eaf : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000420038 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x420007 ; ret
0x00000000004b1157 : add byte ptr [rcx + rdx*2], bl ; add byte ptr [rax], al ; in al, 0xca ; stc ; jmp qword ptr [rdx]
0x0000000000455a9f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045b832 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f7fb : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f898 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e747 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044bb1a : add byte ptr [rcx - 0x75], cl ; jge 0x44bb25 ; call r12
0x000000000044bb4a : add byte ptr [rcx - 0x75], cl ; jge 0x44bb55 ; call r12
0x000000000049288a : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044c5e7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046cbde : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046b6f7 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000458c2b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004243a4 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000404dc0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491f05 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x000000000047a464 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004769b2 : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000004243eb : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000044c4ef : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048b07a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048b189 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x0000000000471bcb : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048b38f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x0000000000461c1a : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045bc07 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041d8c7 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000419d7f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045be7e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x000000000042689f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004251af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044b0c2 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000042c262 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042c288 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000455fe4 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048bb4a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000044729f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040f14f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b2b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000048047b : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004190cd : add byte ptr [rcx], al ; ret
0x0000000000495474 : add byte ptr [rcx], bh ; cli ; call qword ptr [rax + 0x20fffa38]
0x000000000044dbfc : add byte ptr [rcx], bh ; ret
0x000000000044ad95 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040f264 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042bb6c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000475f6a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475fa1 ; ret
0x000000000041517f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x415199 ; ret
0x000000000044dc1b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004107df : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000043368a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048d5c5 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048d5ed : add byte ptr [rdi + 1], bh ; call rax
0x000000000048e33c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b1ee3 : add byte ptr [rdi + rbp*2], bh ; cli ; jmp rax
0x00000000004b1e63 : add byte ptr [rdi + rbp*2], cl ; cli ; call qword ptr [rdx]
0x00000000004b2533 : add byte ptr [rdi + rbp*4], ch ; cli ; call qword ptr [rdx]
0x00000000004b1f77 : add byte ptr [rdi + rbx*2], bh ; add byte ptr [rax], al ; adc al, 0x72 ; cli ; call rdi
0x0000000000482ba7 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000045a44f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463d95 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b033b : add byte ptr [rdi + rsi*2], dh ; stc ; call rsp
0x00000000004b13bf : add byte ptr [rdi - 0xf], ah ; hlt ; jmp qword ptr [rbx]
0x000000000040e176 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481796 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000435006 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000448897 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043603f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004360af : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000045492b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000455a34 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000455a1f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455a49 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000044894f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000042644f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004135cf : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c7cf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c30f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000462f73 : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042bb9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042bbcf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042bbbf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042bbaf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046d214 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047c143 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000458f2b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000465ff3 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000044f0bd : add byte ptr [rdi], cl ; sub dword ptr [rbp - 0x60], eax ; call 0x44b3a7
0x000000000042aa6f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040e15b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000488efb : add byte ptr [rdi], cl ; test byte ptr [rsi - 0x7cfffff5], bl ; ret 0x4101
0x0000000000411a66 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000042260e : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046a388 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042102e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476ea3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044ff14 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000455e5c : add byte ptr [rdx + 0x180], bh ; call 0x402148
0x0000000000455e38 : add byte ptr [rdx + 0x1be], bh ; call 0x402148
0x0000000000455e83 : add byte ptr [rdx + 0x22f], bh ; call 0x402148
0x000000000044448f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000442cdf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d7c7 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c87c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047d1a4 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000048582f : add byte ptr [rdx + 5], bh ; jmp 0x402248
0x0000000000413267 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049f317 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004577f0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000000004577ef : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000494fe4 : add byte ptr [rdx + rdi*8], al ; push qword ptr [rax + 3] ; cli ; jmp rax
0x00000000004b194b : add byte ptr [rdx + rdx - 6], al ; call rcx
0x00000000004b1f7b : add byte ptr [rdx + rsi*2], dl ; cli ; call rdi
0x00000000004951ac : add byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x00000000004b223c : add byte ptr [rdx], ah ; add byte ptr [rax], ah ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x0000000000494f7c : add byte ptr [rdx], dl ; cli ; call qword ptr [rax + 0x20fffa11]
0x000000000049529c : add byte ptr [rip + 0x3490fffa], dh ; cli ; jmp qword ptr [rax]
0x000000000044c687 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004859c2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042cd44 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000463e3a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000466bba : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3ce8
0x000000000041ad27 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000041a75f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000463e63 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x93e8
0x0000000000463e01 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000466b5c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042bad4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041ad26 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000424c51 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004b1edf : add byte ptr [rsi + rbx*2 + 0x6f3c0000], ah ; cli ; jmp rax
0x00000000004ac343 : add byte ptr [rsi + rbx*2 - 0xb], ch ; call qword ptr [rcx]
0x00000000004b1e5f : add byte ptr [rsi + rbx*2], ah ; add byte ptr [rax], al ; or al, 0x6f ; cli ; call qword ptr [rdx]
0x00000000004565b0 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x00000000004565af : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000485a6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044c51d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x000000000047543d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004948e4 : add byte ptr [rsi - 0x710f0007], cl ; stc ; jmp rax
0x0000000000424c17 : add byte ptr [rsi - 9], dh ; ret 0
0x0000000000494da4 : add byte ptr [rsi], cl ; cli ; call qword ptr [rax + 0x20fffa0d]
0x0000000000417a55 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000045ab33 : add byte ptr [rsp + rax*2 - 0x75], ah ; xor al, ch ; ret
0x00000000004ae4d3 : add byte ptr [rsp + rbp*4 - 0xa], cl ; call qword ptr [rdi]
0x00000000004adc9f : add byte ptr [rsp + rbx], ah ; add byte ptr [rsp + rcx*4], ch ; idiv bh ; retf
0x00000000004013ee : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004adca3 : add byte ptr [rsp + rcx*4], ch ; idiv bh ; retf
0x000000000045326c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000449765 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000045b62c : add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x000000000044dbe4 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044c477 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b2531 : add byte ptr fs:[rax], al ; sub al, 0xaf ; cli ; call qword ptr [rdx]
0x000000000049f723 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x000000000040f6f7 : add ch, al ; ret
0x00000000004160c9 : add ch, al ; ret 0xffff
0x0000000000473c9f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004aa1fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004aa1fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b49d5 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000047248a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000469f63 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004ad627 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048c437 : add ch, cl ; retf 0xfffc
0x0000000000494d2c : add ch, dl ; stc ; inc dword ptr [rax - 0x40] ; stc ; call qword ptr [rax]
0x00000000004a95ca : add cl, bl ; retf 0xea91
0x0000000000442d07 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000046a742 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x00000000004557de : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000469c96 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000455a38 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000043328a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000448664 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041da9b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041d700 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000424eec : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000412054 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411f73 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004513fc : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000455d76 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000442d08 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442c75 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485cc5 : add cl, byte ptr [rax - 0x77] ; je 0x485cf6 ; or byte ptr [rax + 1], cl ; ret
0x00000000004518ad : add cl, byte ptr [rax - 0x77] ; ret
0x000000000047ee14 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000418ce2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004524e1 : add cl, byte ptr [rax - 0x7d] ; ret
0x00000000004414d0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000441533 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000048479d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048c433 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004719d0 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000435e82 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000458ae8 : add cl, byte ptr [rcx + 0x39] ; retf
0x0000000000472f5a : add cl, byte ptr [rcx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000404e39 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000044738b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000448eb7 : add cl, ch ; ret
0x000000000045f77a : add cl, ch ; ret 0xfffa
0x0000000000455258 : add cl, ch ; ret 0xfffd
0x00000000004062ba : add cl, ch ; retf
0x000000000043ba0a : add cl, ch ; retf 0xfffe
0x0000000000400d5e : add cl, cl ; ret
0x00000000004958c4 : add cl, dh ; cli ; call qword ptr [rax]
0x00000000004a9483 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a9482 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a33cb : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000046aa38 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045f282 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004abaf1 : add dh, bh ; jmp rsp
0x00000000004a2817 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000436033 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000413269 : add dh, bl ; ret
0x0000000000424c8e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004adb59 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000495348 : add dh, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x22fffa36]
0x000000000041b756 : add dh, dh ; ret
0x000000000045172f : add dh, dh ; ret 0x4801
0x000000000042310f : add dh, dh ; ret 0x4804
0x000000000047cd28 : add dh, dh ; ret 0x7403
0x000000000044ad7f : add dh, dh ; ret 0x7404
0x00000000004453b7 : add dh, dh ; ret 0x7501
0x00000000004453c4 : add dh, dh ; ret 0x7502
0x00000000004453d1 : add dh, dh ; ret 0x7504
0x0000000000445389 : add dh, dh ; ret 0x7510
0x0000000000445396 : add dh, dh ; ret 0x7520
0x0000000000424ebc : add dh, dh ; ret 0x7540
0x0000000000423433 : add dh, dh ; ret 0xf02
0x000000000045adb8 : add dh, dh ; ret 0xf04
0x000000000041b689 : add dh, dh ; ret 0xf08
0x0000000000467621 : add dh, dh ; ret 0xf40
0x0000000000467607 : add dh, dh ; ret 0xf50
0x00000000004b52f8 : add dil, bpl ; jmp qword ptr [rdx]
0x0000000000494e50 : add dl, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000495900 : add dl, dh ; cli ; jmp qword ptr [rax]
0x000000000047a0ed : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x00000000004709d7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046f7f5 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004502e3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x000000000043614b : add dword ptr [rax + 0x28], edx ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000444491 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046621a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000004661df : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000456f28 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000455da5 : add dword ptr [rax + 0x39480750], ecx ; retf
0x000000000041765d : add dword ptr [rax + 0x39], ecx ; ret
0x00000000004802b9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004802cb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045becf : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x00000000004655fa : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045d8c3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045d84d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000455a23 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000417938 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x0000000000457960 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048e653 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048cc3e : add dword ptr [rax + 1], ecx ; retf
0x000000000047af69 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000482667 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040e0aa : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004798e5 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041e86e : add dword ptr [rax + 9], ecx ; ret 0x8949
0x00000000004798b7 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044b107 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000475eb0 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a907b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a90e7 ; retf
0x0000000000461c9b : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x00000000004237e4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x00000000004709d8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000442ce1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000419a41 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a0de7 ; ret
0x0000000000442c72 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047fa03 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d9c5 ; ret
0x000000000045eb80 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040651c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000450847 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414a16 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045dc9c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000004860c2 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047fa02 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d9c5 ; ret
0x000000000040f486 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000481c73 : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x0000000000481ff3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4418
0x000000000045c339 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046f7f6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000403a4f : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000450e36 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046fe47 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e9ab : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x000000000046a7a9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045f2c5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000405f50 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000045554b : add dword ptr [rax], eax ; add al, ch ; in eax, dx ; retf
0x0000000000415dd3 : add dword ptr [rax], eax ; add al, ch ; ret
0x0000000000455e3b : add dword ptr [rax], eax ; add al, ch ; std ; ret 0xfffa
0x0000000000410874 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000448801 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000041a30a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468b53 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffc8
0x00000000004557d8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000041f3dd : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b706 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004715ab : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004760bd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449c39 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048ef1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456a46 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048d465 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000455fe5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000044775e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000472069 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000411c08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000041fa20 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000468e28 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044bf3c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004566a2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b747 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f075 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042466e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004406bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b775 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040dd73 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044ef01 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a281a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a19ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a17f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a17ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1f82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a182a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a1822 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1fc2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000048d5c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048d51d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048e339 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48e34a ; sbb eax, eax ; ret
0x00000000004618b5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000004763da : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044c5ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000449aa1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047eded : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048dbd0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484c56 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000400d7d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x000000000046f94d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417b63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486fbe : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000480481 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000469090 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044a0eb : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000413a48 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000429038 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048d3b6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e892 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000459253 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x1d], cl ; retf
0x000000000040a40d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000492888 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004769b0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x0000000000461c18 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041b754 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004453b5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000004453c2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000004453cf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000445387 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000445394 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004453a1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045adb6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000004242ec : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000424253 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000041033c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048582e : add dword ptr [rax], eax ; mov edx, 5 ; jmp 0x402249
0x0000000000406380 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044cec1 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a95c4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b2c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004670e0 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x00000000004495d9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044b8bd : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045f102 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a99aa : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435ef2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a858a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046cc15 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x000000000040da9e : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004691cf : add dword ptr [rcx + 0x2529560d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045cd92 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044b613 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044b0c6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x0000000000403fbd : add dword ptr [rcx + rcx*4 - 1], ecx ; call 0x4201e6
0x000000000040e6ea : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442d11 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046f5ee : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045492f : add dword ptr [rcx - 0x77], eax ; retf
0x000000000045a488 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044ccb5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467ce1 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000047902b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x0000000000475cca : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004156a3 : add dword ptr [rcx], ecx ; retf 0xd284
0x00000000004650f3 : add dword ptr [rcx], edi ; retf
0x00000000004a94d5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004484f2 : add dword ptr [rdi + 0x15], esi ; jb 0x448500 ; mov byte ptr [rdi], cl ; ret
0x00000000004b499d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b4935 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b4969 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b4946 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b497a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b49ae : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004ac4ae : add dword ptr [rdi], 3 ; ret
0x00000000004b1085 : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000456f20 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047eef7 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041ef9b : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000448c41 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000491eff : add dword ptr [rdi], ecx ; test dh, al ; add eax, 0x89490000 ; ret 0x8349
0x0000000000454891 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000047a0ee : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x00000000004474ec : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000438d7d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000485acb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a91af : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004b3b0c : add dword ptr [rdx], 0x4a ; ret
0x00000000004b65c4 : add dword ptr [rdx], 0x55 ; ret
0x00000000004afacc : add dword ptr [rdx], 0x5a ; ret
0x00000000004b6580 : add dword ptr [rdx], 0x76 ; ret
0x00000000004ad6ca : add dword ptr [rdx], eax ; retf
0x00000000004190c8 : add dword ptr [rip + 0x2a3c45], 1 ; ret
0x00000000004ad623 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442cf2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000417a59 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000048a6cd : add eax, 0x1489066 ; ret 0xb70f
0x000000000045b6c0 : add eax, 0x18c48348 ; ret
0x0000000000425009 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x00000000004242e9 : add eax, 0x1ce62 ; cmove rax, rdx ; ret
0x0000000000449e1a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042c03a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424bc0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000424f49 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000424e09 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424ca9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000424fb0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424e70 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x0000000000424d10 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000048fca1 : add eax, 0x22d6de ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048fb91 : add eax, 0x22d7ee ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424f8f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x0000000000424270 : add eax, 0x22f9b ; cmovne rax, rdx ; ret
0x0000000000424e4f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x0000000000424cef : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000487ec0 : add eax, 0x2359b2 ; jne 0x487ef6 ; ret
0x0000000000485c71 : add eax, 0x237c6a ; ret
0x0000000000424d5e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x00000000004850d9 : add eax, 0x237f8a ; ret
0x00000000004850be : add eax, 0x237fa5 ; add rsp, 8 ; ret
0x0000000000424daf : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047fb6c : add eax, 0x23d857 ; mov qword ptr [rsi], rax ; ret
0x000000000047fafb : add eax, 0x23d8d0 ; ret
0x000000000047fac2 : add eax, 0x23d909 ; add rsp, 8 ; ret
0x000000000047fa06 : add eax, 0x23d9c5 ; ret
0x000000000046d377 : add eax, 0x24aea4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046d324 : add eax, 0x24aef7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046cdf7 : add eax, 0x24af24 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046d196 : add eax, 0x24b085 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046d151 : add eax, 0x24b0ca ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046d10c : add eax, 0x24b10f ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046d0bd : add eax, 0x24b15e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461810 : add eax, 0x255e0b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461bbf : add eax, 0x255f5c ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461b71 : add eax, 0x255faa ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461ac2 : add eax, 0x256059 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461a66 : add eax, 0x2560b5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004617c6 : add eax, 0x256355 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461778 : add eax, 0x2563a3 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461317 : add eax, 0x256504 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000458062 : add eax, 0x264e11 ; ret
0x000000000044dbd2 : add eax, 0x26d729 ; ret
0x000000000044fb82 : add eax, 0x26ddc1 ; ret
0x0000000000452fbf : add eax, 0x29480000 ; ret 0x349
0x0000000000424f29 : add eax, 0x297ec2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424de9 : add eax, 0x298002 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424c89 : add eax, 0x298162 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004201c7 : add eax, 0x29a694 ; ret
0x00000000004201d1 : add eax, 0x29cb96 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041a0cd : add eax, 0x2a078e ; ret
0x0000000000419bc8 : add eax, 0x2a0c23 ; ret
0x0000000000419bdf : add eax, 0x2a0c28 ; ret
0x0000000000419ba0 : add eax, 0x2a0c43 ; ret
0x0000000000419b80 : add eax, 0x2a0c5b ; ret
0x0000000000419a76 : add eax, 0x2a0dcd ; ret
0x0000000000419a5c : add eax, 0x2a0ddf ; ret
0x0000000000419a06 : add eax, 0x2a0ded ; ret
0x00000000004199f6 : add eax, 0x2a0e05 ; ret
0x0000000000419032 : add eax, 0x2a10e9 ; ret
0x000000000041a081 : add eax, 0x2a2ce6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000419bf5 : add eax, 0x2a319a ; ret
0x000000000041912d : add eax, 0x2a3be2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040250e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b2c64 : add eax, 0x3400e4e ; ret
0x00000000004856ae : add eax, 0x38c48348 ; ret
0x000000000041d9ee : add eax, 0x39480000 ; ret 0xf275
0x000000000042c05a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000444528 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000442d58 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000444a26 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004951d9 : add eax, 0x4a0fffa ; cli ; jmp qword ptr [rax]
0x00000000004445a9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000442d99 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000495055 : add eax, 0x562fffa ; cli ; jmp rdx
0x0000000000485850 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a33bd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047204a : add eax, 0x5c415d5b ; ret
0x00000000004a33cd : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042c07a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424fd9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000424be9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x0000000000424c4d : add eax, 0x79ee ; je 0x424c22 ; ret
0x000000000042b387 : add eax, 0x83480000 ; ret 0x4910
0x000000000043ecb1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042b3b5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041d88e : add eax, 0x83480000 ; retf 0x4901
0x000000000045fa85 : add eax, 0x83ffffef ; ret
0x000000000044452b : add eax, 0x8428d48 ; ret
0x000000000040e178 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000459953 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491f03 : add eax, 0x89490000 ; ret 0x8349
0x0000000000428bb8 : add eax, 0x894d0000 ; retf
0x0000000000454e37 : add eax, 0x89fffad3 ; retf 0xe283
0x00000000004ac615 : add eax, 0x90080000 ; cmc ; call qword ptr [rdx]
0x00000000004ac629 : add eax, 0x90140000 ; cmc ; call rsp
0x0000000000472f59 : add eax, 0x902 ; cmove rax, rdx ; ret
0x0000000000481798 : add eax, 0x940fc085 ; ret 0x3d
0x0000000000474279 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042da7a : add eax, 0xc0310000 ; ret
0x00000000004445ad : add eax, 0xc428d48 ; ret
0x000000000044508d : add eax, 0xc478d48 ; ret
0x0000000000472f29 : add eax, 0xdf2 ; cmove rax, rdx ; ret
0x0000000000424a42 : add eax, 0xe0c148ff ; add ecx, dword ptr [rax + 0x29] ; ret 0xb60f
0x0000000000455aa2 : add eax, 0xe9000000 ; ret
0x000000000048d89a : add eax, 0xf7148948 ; ret
0x0000000000435ee3 : add eax, 0xf7f0ff3 ; ret
0x000000000048fbaa : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044eee5 : add eax, 1 ; push rax ; call rbx
0x0000000000474ea1 : add eax, 1 ; ret
0x0000000000474e98 : add eax, 2 ; ret
0x0000000000474eb1 : add eax, 3 ; ret
0x0000000000401fc9 : add eax, dword ptr [0] ; ret
0x000000000044c62d : add eax, dword ptr [rax] ; add al, ch ; retf
0x000000000047bde8 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004ac355 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5e], bh ; cmc ; call qword ptr [rcx]
0x0000000000489e66 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; xor ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000048a53c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044d40e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041ce88 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004014fb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000420da7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004766c6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004205aa : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000420770 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042b567 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee51 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b595 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044fad4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044aecc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474ef3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044a3bb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042b518 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000448c3c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000048a0b0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000046276c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044c5e5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044c685 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004ac341 : add eax, dword ptr [rax] ; add byte ptr [rsi + rbx*2 - 0xb], ch ; call qword ptr [rcx]
0x000000000047cd26 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000047b91f : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046f4d4 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046fc1b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046fc89 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448920 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d9ec : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b4949 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008da : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000047607a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000454970 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004addfa : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000487433 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b497d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b49b1 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b297a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047ca66 : add eax, dword ptr [rsi] ; call rax
0x000000000048b4d6 : add eax, eax ; jmp rax
0x00000000004028b4 : add eax, ebp ; jmp rax
0x0000000000487b20 : add eax, ebp ; retf 0xfff3
0x000000000047cd87 : add eax, ebx ; call rax
0x000000000044dcdc : add eax, ebx ; jmp rax
0x0000000000440fd8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046f4db : add eax, ecx ; jmp rax
0x000000000042b989 : add eax, ecx ; ret
0x000000000044133d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042beb6 : add eax, ecx ; vzeroupper ; ret
0x000000000042b986 : add eax, edi ; add rax, rcx ; ret
0x000000000042beb3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000004802b3 : add eax, edi ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046fb0b : add eax, edi ; jmp rax
0x000000000042bbb4 : add eax, edi ; ret
0x0000000000485a00 : add eax, edi ; sub rax, r8 ; ret
0x00000000004413f5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044739a : add eax, edi ; sub rax, rsi ; ret
0x000000000042c02a : add eax, edi ; vzeroupper ; ret
0x000000000040264a : add eax, edx ; jmp rax
0x00000000004412e6 : add eax, edx ; sub rax, rdi ; ret
0x0000000000474b9b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004488cc : add eax, esi ; jmp rax
0x0000000000418d8d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c74d : add eax, esp ; jmp rax
0x0000000000463a78 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a8117 : add ebp, ebp ; retf
0x000000000047ca62 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048aafa : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000488df0 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000004174a1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b496e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e8af : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44e918 ; pop r12 ; ret
0x0000000000482ea1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042c79b : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000004360a3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004484d7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x4484cc ; ret
0x0000000000442d45 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000424a47 : add ecx, dword ptr [rax + 0x29] ; ret 0xb60f
0x000000000045799d : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000455a4d : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e64e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000442d49 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047eeb7 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x00000000004503d3 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000434ec4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048c20f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040f041 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000048147a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483970 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435e12 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b493a : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004449c4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000442d46 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000004495df : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044963d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac9c9 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x00000000004668a9 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000453fd5 : add ecx, ebp ; retf 0xfff6
0x000000000042e0ab : add ecx, ebx ; jmp r9
0x000000000042ca42 : add ecx, ebx ; jmp rcx
0x00000000004488f4 : add ecx, esi ; jmp rcx
0x000000000048e75e : add edi, dword ptr [rax + 4] ; jne 0x48e789 ; ret
0x000000000045ae64 : add edi, ebx ; jmp rdi
0x000000000042e0a8 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004951a5 : add edi, edx ; call qword ptr [rax]
0x0000000000494fe9 : add edi, edx ; jmp rax
0x000000000040db2c : add edi, edx ; jmp rdi
0x00000000004951e9 : add edi, edx ; push qword ptr [rax + 2] ; cli ; call qword ptr [rax]
0x0000000000483bd2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000040d843 : add edx, edi ; jmp rdx
0x000000000045496a : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000458da6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x000000000045a965 : add esi, eax ; jmp rsi
0x0000000000435fc3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004476f5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000449dcc : add esi, ebx ; ret
0x000000000041f6c0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004489fe : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042e0a5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000416fd1 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004111c1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a3ff : add esp, 0x10 ; pop rbx ; ret
0x000000000044729d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482d78 : add esp, 0x110 ; pop rbx ; ret
0x000000000040e1be : add esp, 0x118 ; ret
0x000000000045b90a : add esp, 0x148 ; ret
0x000000000041aae9 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041fdb3 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004203de : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044d9fa : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412255 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045b6c2 : add esp, 0x18 ; ret
0x0000000000417add : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000004176bd : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000417b16 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482df9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041742f : add esp, 0x20 ; pop rbx ; ret
0x0000000000449422 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400c84 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000449d9a : add esp, 0x28 ; ret
0x000000000044fc68 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484fcf : add esp, 0x30 ; pop rbx ; ret
0x000000000048b2c6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040e074 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416ade : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475f31 : add esp, 0x38 ; ret
0x0000000000488c1c : add esp, 0x40 ; pop rbx ; ret
0x000000000048230c : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449a72 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488d03 : add esp, 0x50 ; pop rbx ; ret
0x000000000048229a : add esp, 0x58 ; jmp qword ptr [rax]
0x0000000000449fca : add esp, 0x58 ; ret
0x0000000000449ebc : add esp, 0x68 ; ret
0x0000000000474394 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a24f : add esp, 0x78 ; ret
0x000000000046920e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475a13 : add esp, 0x80 ; pop rbx ; ret
0x00000000004163a8 : add esp, 0x80 ; ret
0x000000000044c3cd : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004013b2 : add esp, 0x88 ; pop rbx ; ret
0x0000000000401b3f : add esp, 0x98 ; ret
0x0000000000475b33 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000004581b6 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x00000000004100e7 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000410276 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040fd44 : add esp, 0xd8 ; ret
0x00000000004125cf : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048038b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041060e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044ba00 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044ac3c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417089 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488b59 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000414084 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004022a3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x00000000004242b9 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a980b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000455d5a : add qword ptr [rax + 0x39], rcx ; retf
0x000000000045492e : add qword ptr [rcx - 0x77], r8 ; retf
0x00000000004360a2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436032 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435fc2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b594 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045496f : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042e0aa : add r9, r11 ; jmp r9
0x00000000004a95c9 : add r9b, bl ; retf 0xea91
0x000000000045797e : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045799c : add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004668a8 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000474ea0 : add rax, 1 ; ret
0x0000000000474e97 : add rax, 2 ; ret
0x0000000000474eb0 : add rax, 3 ; ret
0x0000000000401fc8 : add rax, qword ptr [0] ; ret
0x000000000047ca65 : add rax, qword ptr [r14] ; call rax
0x000000000047d9eb : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000487432 : add rax, qword ptr [rdx + 8] ; call rax
0x0000000000401fc7 : add rax, qword ptr fs:[0] ; ret
0x000000000047cd86 : add rax, r11 ; call rax
0x000000000048c74c : add rax, r12 ; jmp rax
0x00000000004028b3 : add rax, r13 ; jmp rax
0x000000000048d04d : add rax, r14 ; jmp rax
0x000000000048b6fb : add rax, r15 ; jmp rax
0x000000000048b4d5 : add rax, r8 ; jmp rax
0x000000000048cc85 : add rax, r9 ; jmp rax
0x000000000044dd53 : add rax, rbp ; jmp rax
0x000000000044dcdb : add rax, rbx ; jmp rax
0x0000000000440fd7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046f4da : add rax, rcx ; jmp rax
0x000000000042b988 : add rax, rcx ; ret
0x000000000044133c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042beb5 : add rax, rcx ; vzeroupper ; ret
0x000000000042b985 : add rax, rdi ; add rax, rcx ; ret
0x000000000042beb2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046fb0a : add rax, rdi ; jmp rax
0x000000000042bbb3 : add rax, rdi ; ret
0x00000000004859ff : add rax, rdi ; sub rax, r8 ; ret
0x00000000004413f4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000447399 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042c029 : add rax, rdi ; vzeroupper ; ret
0x0000000000402649 : add rax, rdx ; jmp rax
0x00000000004412e5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000004488cb : add rax, rsi ; jmp rax
0x000000000047ca61 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000455d79 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042ca41 : add rcx, r11 ; jmp rcx
0x00000000004488f3 : add rcx, rsi ; jmp rcx
0x000000000040db2b : add rdi, r10 ; jmp rdi
0x000000000045ae63 : add rdi, r11 ; jmp rdi
0x000000000042e0a7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000483bd1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000040d842 : add rdx, rdi ; jmp rdx
0x000000000045a964 : add rsi, r8 ; jmp rsi
0x0000000000416fd0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004111c0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a3fe : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482d77 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040e1bd : add rsp, 0x118 ; ret
0x000000000045b909 : add rsp, 0x148 ; ret
0x000000000041aae8 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041fdb2 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004203dd : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000412254 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045b6c1 : add rsp, 0x18 ; ret
0x0000000000417adc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000004176bc : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000417b15 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482df8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041742e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000400c83 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000449d99 : add rsp, 0x28 ; ret
0x000000000044fc67 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484fce : add rsp, 0x30 ; pop rbx ; ret
0x000000000048b2c5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000416add : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475f30 : add rsp, 0x38 ; ret
0x0000000000488c1b : add rsp, 0x40 ; pop rbx ; ret
0x000000000048230b : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488d02 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000482299 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449fc9 : add rsp, 0x58 ; ret
0x0000000000449ebb : add rsp, 0x68 ; ret
0x0000000000474393 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a24e : add rsp, 0x78 ; ret
0x0000000000475a12 : add rsp, 0x80 ; pop rbx ; ret
0x00000000004163a7 : add rsp, 0x80 ; ret
0x000000000044c3cc : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004013b1 : add rsp, 0x88 ; pop rbx ; ret
0x0000000000401b3e : add rsp, 0x98 ; ret
0x0000000000475b32 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000004100e6 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000410275 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040fd43 : add rsp, 0xd8 ; ret
0x00000000004125ce : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048038a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041060d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b9ff : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044ac3b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417088 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488b58 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004022a2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x00000000004242b8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000485aca : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000424222 : and al, 0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004ae4d1 : and al, 0 ; add byte ptr [rsp + rbp*4 - 0xa], cl ; call qword ptr [rdi]
0x000000000046c1d1 : and al, 0 ; jmp rax
0x000000000046cdfa : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000451927 : and al, 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048d938 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000488af1 : and al, 0x10 ; call 0x485504
0x000000000048f4f0 : and al, 0x10 ; call r14
0x000000000044b028 : and al, 0x10 ; call rax
0x0000000000482d3b : and al, 0x10 ; call rdx
0x000000000041d43c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409b18 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406629
0x0000000000472782 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048f2d8 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401765 : and al, 0x18 ; call rax
0x0000000000475d50 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044ee68 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000047269d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004748af : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000482d36 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004515b7 : and al, 0x20 ; call r15
0x000000000045376e : and al, 0x20 ; call rax
0x0000000000474570 : and al, 0x20 ; call rbx
0x000000000044a336 : and al, 0x20 ; je 0x44a369 ; mov eax, 0x48 ; syscall
0x0000000000451482 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a8344 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004203db : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000404805 : and al, 0x28 ; mov rbx, qword ptr [rsp + 0x30] ; call 0x420aa9
0x00000000004515b2 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004232e3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000040480a : and al, 0x30 ; call 0x420aa4
0x0000000000451e83 : and al, 0x30 ; call r14
0x000000000045205b : and al, 0x30 ; call rbx
0x000000000047475e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000045326a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000451874 : and al, 0x38 ; call r14
0x0000000000451b94 : and al, 0x38 ; call r15
0x00000000004531b4 : and al, 0x38 ; call rbx
0x0000000000474448 : and al, 0x38 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000045479b : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000451e7e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452056 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000467d1c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004577ee : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000000004565ae : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000482309 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000482297 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000453d4c : and al, 0x40 ; call r15
0x00000000004564f8 : and al, 0x40 ; call rbx
0x0000000000453769 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045186f : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000451b8f : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004531af : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000487431 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416ff8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048b3a8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048b0ac : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000413cc4 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048e3de : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453d47 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004564f3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048e38f : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000048a2f7 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a2a5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x00000000004b1e60 : and al, 0x5e ; add byte ptr [rax], al ; or al, 0x6f ; cli ; call qword ptr [rdx]
0x0000000000420ca3 : and al, 0x68 ; call rax
0x00000000004643ee : and al, 0x83 ; ret
0x0000000000417a5b : and al, 0x83 ; retf 0x4c01
0x0000000000457ead : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419b63 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000404dbc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000451d9e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049279b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000491eab : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000045172b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000046cdf8 : and al, 0xaf ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457f83 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048d51b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044a3fc : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044a2a3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000416fe2 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x413268
0x0000000000401760 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047a460 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004175bc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x000000000048b4a8 : and al, 0xd8 ; ret
0x00000000004640c1 : and al, 0xe8 ; mov ecx, 0x8900020b ; ret
0x0000000000418bd3 : and al, 0xe9 ; ret 0xfffd
0x0000000000452bce : and al, 0xf6 ; ret
0x00000000004176ed : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000409b1d : and al, 8 ; call 0x406624
0x0000000000409b1c : and al, 8 ; call 0x406625
0x000000000040e4ef : and al, 8 ; call rax
0x000000000041d441 : and al, 8 ; call rcx
0x000000000044b023 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000411bf0 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000048fb94 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004907f3 : and al, byte ptr [rax] ; jne 0x4907dd ; pop rbx ; ret
0x000000000048fb86 : and al, byte ptr [rax] ; test eax, eax ; je 0x48fb97 ; ret
0x000000000048fc96 : and al, byte ptr [rax] ; test eax, eax ; je 0x48fca7 ; ret
0x0000000000462411 : and al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000044154a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000041fb58 : and al, ch ; ret 0xff09
0x000000000041e958 : and al, ch ; ret 0xff1b
0x0000000000467190 : and al, ch ; retf 0x1dc
0x000000000041ab50 : and al, ch ; retf 0xff59
0x0000000000469f61 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000045376f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004947b9 : and bh, cl ; push rax ; and edi, ecx ; call qword ptr [rax]
0x000000000046fb4b : and bl, ch ; retf 0x9066
0x0000000000411e89 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000411eb9 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041c913 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000411e1e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042bec6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000440eea : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042c03c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000411eba : and byte ptr [rax + 1], cl ; ret
0x0000000000401501 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000466e1e : and byte ptr [rax + 9], cl ; ret 0xff83
0x00000000004411b8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004412dd : and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000473ece : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000451483 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004778e3 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045b064 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45b078 ; call rax
0x0000000000450166 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048da16 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000468854 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041c914 : and byte ptr [rax - 0x7d], cl ; retf
0x00000000004137e2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000460b4b : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048d9e9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004489da : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004951c0 : and byte ptr [rax], cl ; cli ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004b39a0 : and byte ptr [rax], dl ; cld ; jmp qword ptr [rax]
0x0000000000444944 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; syscall
0x0000000000494b94 : and byte ptr [rbp - 0x592f0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000492a61 : and byte ptr [rbp - 0x77], cl ; ret
0x000000000049295d : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004aa0e8 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000482dfb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468ab3 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x0000000000411e8a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000045e770 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000494a98 : and byte ptr [rcx + rdi*8 - 0x649ff01], dh ; jmp rax
0x0000000000417adf : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000411e1f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004957d4 : and byte ptr [rcx - 6], bl ; push qword ptr [rax] ; pop rbx ; cli ; call rax
0x000000000047fca4 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004951c8 : and byte ptr [rdi], al ; cli ; jmp qword ptr [rax + 0x20fffa06]
0x0000000000447941 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000041029b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000445390 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494a64 : and byte ptr [rdx - 0x43df0007], bh ; stc ; jmp qword ptr [rax]
0x0000000000494870 : and byte ptr [rdx - 7], ah ; call qword ptr [rax]
0x00000000004addfd : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000494fb4 : and byte ptr [rdx], cl ; cli ; jmp qword ptr [rax + 0x10fffa09]
0x00000000004951d8 : and byte ptr [rip + 0x4a0fffa], al ; cli ; jmp qword ptr [rax]
0x0000000000494dac : and byte ptr [rip + 0xcb6fffa], cl ; cli ; jmp qword ptr [rsi]
0x0000000000430b14 : and byte ptr [rsi + 0x39480028], ah ; retf 0x8949
0x000000000042cada : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b297d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004951d0 : and byte ptr [rsi], al ; cli ; jmp qword ptr [rax + 0x20fffa05]
0x0000000000497c20 : and byte ptr [rsi], ch ; cld ; call qword ptr [rax]
0x0000000000474e92 : and ch, 0xf ; je 0x474eb9 ; add rax, 2 ; ret
0x0000000000448998 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000494c8c : and ch, 0xf9 ; call qword ptr [rax]
0x0000000000424eea : and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000473c1b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000474e7d : and cl, 0xf ; je 0x474ea5 ; ret
0x00000000004b35f0 : and cl, bh ; sti ; jmp qword ptr [rbx]
0x000000000041812a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044cfb1 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047faa4 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x000000000042c31d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000047427a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494bec : and dh, 0xf9 ; call qword ptr [rax]
0x000000000044980d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044c829 : and dh, al ; sub byte ptr [rcx], al ; ret
0x00000000004aca79 : and dh, dh ; call rsp
0x0000000000469f60 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004b0070 : and dl, dh ; clc ; call qword ptr [rax]
0x0000000000469ad8 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044eb90 : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x0000000000469ad9 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9e62 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000004182e7 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041833f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000494904 : and dword ptr [rcx - 0x6e5e0007], edx ; stc ; jmp qword ptr [rcx]
0x000000000041916e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x000000000049490c : and dword ptr [rdx - 0x6d5e0007], edx ; stc ; jmp qword ptr [rcx]
0x0000000000424bc2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a6f19 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9e61 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000401fcb : and eax, 0 ; ret
0x00000000004849fc : and eax, 0x28 ; jne 0x484a46 ; leave ; ret
0x000000000045decd : and eax, 0x2948fffa ; ret
0x00000000004004c9 : and eax, 0x2b9bfa ; nop ; ret
0x000000000040ef58 : and eax, 0x30 ; call rax
0x000000000040ee92 : and eax, 0x30 ; call rdx
0x000000000040ef7e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044891d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448968 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000046131a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448a13 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004489b7 : and eax, 0x7ff80000 ; ret
0x00000000004541cb : and eax, 0x833fe283 ; retf 0x4180
0x000000000044c667 : and eax, 0xc ; cmp eax, 4 ; je 0x44c678 ; ret
0x0000000000482e9c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000487f78 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047fac5 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485ac8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487ec3 : and eax, dword ptr [rax] ; jne 0x487ef3 ; ret
0x000000000048551a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004850d5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x237f8a], rax ; ret
0x000000000047fb6f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047fa09 : and eax, dword ptr [rax] ; ret
0x000000000047c272 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000452fbe : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x00000000004182e8 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418340 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c602 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44c615 ; ret
0x00000000004a8614 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042e055 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042d788 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044bd4a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000419bc9 : and ecx, dword ptr [rdx + rbp] ; add bl, dh ; ret
0x00000000004947b5 : and ecx, edi ; call rax
0x00000000004947bd : and edi, ecx ; call qword ptr [rax]
0x000000000044eb8f : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000044c828 : and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004749d7 : bnd je 0x4749e6 ; test edx, edx ; jne 0x4749d8 ; ret
0x000000000042bc8a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042bbb0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042c0a1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042bbc0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042bbd0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042bba0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000042baff : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000440b63 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000441186 : bsf eax, edx ; ret
0x0000000000474a87 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000004412e2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440c80 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004411d2 : bsf rax, rdx ; ret
0x0000000000474a86 : bsf rax, rdx ; shr rax, 2 ; ret
0x00000000004738b7 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000473b3b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473a49 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000473945 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000004738b6 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000473b3a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473a48 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000473944 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000046a636 : call 0x2146a634
0x000000000046a7ac : call 0x2146a7aa
0x000000000046aa3b : call 0x2146aa39
0x000000000046af00 : call 0x2146aefe
0x000000000046b0be : call 0x2146b0bc
0x000000000046b68f : call 0x2146b68d
0x000000000046b8c8 : call 0x2146b8c6
0x000000000046417b : call 0x40043a
0x00000000004641ab : call 0x40048a
0x0000000000424289 : call 0x4004c2
0x0000000000403a78 : call 0x4004ca
0x0000000000455e3e : call 0x402142
0x0000000000409b1f : call 0x406622
0x00000000004160ca : call 0x412312
0x0000000000416fe8 : call 0x413262
0x0000000000422485 : call 0x41e722
0x000000000042331f : call 0x41f602
0x0000000000403fc1 : call 0x4201e2
0x000000000040480c : call 0x420aa2
0x0000000000405a74 : call 0x421d02
0x00000000004841d8 : call 0x4404c7
0x000000000044f0c2 : call 0x44b3a2
0x000000000047049a : call 0x44c6b2
0x0000000000461e4a : call 0x45e0e2
0x00000000004652ad : call 0x4714c2
0x0000000000488af3 : call 0x485502
0x00000000004a97ba : call 0xffffffffab5862b0
0x000000000041e6a0 : call 0xffffffffc37b2eaa
0x000000000041f999 : call 0xffffffffc37b41a3
0x000000000046b4ce : call 0xffffffffc3cab4d6
0x0000000000441637 : call 0xffffffffc4149f88
0x0000000000441557 : call 0xffffffffc43c9ea8
0x000000000044cf2d : call 0xffffffffcbc8ecc1
0x0000000000496d80 : call 0xffffffffd44968f7
0x000000000044ba05 : call 0xffffffffe1441768
0x0000000000403537 : call 2
0x000000000048a150 : call qword ptr [r14]
0x0000000000494fd7 : call qword ptr [rax + 0x10fffa05]
0x0000000000494fcf : call qword ptr [rax + 0x10fffa06]
0x0000000000494fc7 : call qword ptr [rax + 0x10fffa07]
0x0000000000494fbf : call qword ptr [rax + 0x10fffa08]
0x0000000000495733 : call qword ptr [rax + 0x10fffa0c]
0x00000000004956f7 : call qword ptr [rax + 0x10fffa0d]
0x000000000049573b : call qword ptr [rax + 0x10fffa0f]
0x00000000004956ff : call qword ptr [rax + 0x10fffa10]
0x0000000000495743 : call qword ptr [rax + 0x10fffa12]
0x0000000000495707 : call qword ptr [rax + 0x10fffa13]
0x000000000049574b : call qword ptr [rax + 0x10fffa15]
0x000000000049570f : call qword ptr [rax + 0x10fffa16]
0x0000000000495753 : call qword ptr [rax + 0x10fffa18]
0x0000000000495717 : call qword ptr [rax + 0x10fffa19]
0x000000000049575b : call qword ptr [rax + 0x10fffa1b]
0x000000000049571f : call qword ptr [rax + 0x10fffa1c]
0x0000000000495763 : call qword ptr [rax + 0x10fffa1e]
0x0000000000495727 : call qword ptr [rax + 0x10fffa1f]
0x0000000000494a0b : call qword ptr [rax + 0x20fff9be]
0x0000000000494da7 : call qword ptr [rax + 0x20fffa0d]
0x0000000000494f7f : call qword ptr [rax + 0x20fffa11]
0x000000000049529f : call qword ptr [rax + 0x20fffa34]
0x0000000000495477 : call qword ptr [rax + 0x20fffa38]
0x00000000004958a7 : call qword ptr [rax + 0x20fffaae]
0x0000000000494d53 : call qword ptr [rax - 0x1f000633]
0x0000000000494cff : call qword ptr [rax - 0x1f00063a]
0x0000000000494b87 : call qword ptr [rax - 0x1f00065f]
0x0000000000494b33 : call qword ptr [rax - 0x1f000666]
0x000000000041f753 : call qword ptr [rax]
0x000000000040f050 : call qword ptr [rbx]
0x000000000048a300 : call qword ptr [rcx]
0x0000000000496d9f : call qword ptr [rdi]
0x0000000000494e53 : call qword ptr [rdx + 0x22fffa0f]
0x000000000049534b : call qword ptr [rdx + 0x22fffa36]
0x000000000049600f : call qword ptr [rdx + 0x27fffb3d]
0x0000000000494e33 : call qword ptr [rdx]
0x0000000000494957 : call qword ptr [rsi + 0x26fff993]
0x00000000004952e7 : call qword ptr [rsi + 0x26fffa33]
0x000000000048a151 : call qword ptr [rsi]
0x000000000047ce47 : call r10
0x000000000040094c : call r11
0x000000000044af20 : call r12
0x000000000044f170 : call r14
0x000000000044b462 : call r15
0x0000000000400410 : call rax
0x000000000040094d : call rbx
0x000000000041d443 : call rcx
0x000000000044b463 : call rdi
0x000000000040ee97 : call rdx
0x000000000044f171 : call rsi
0x000000000044af21 : call rsp
0x0000000000429667 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b5941 : cdq ; add byte ptr [rax], al ; cld ; xor ebp, edi ; jmp qword ptr [rdx]
0x00000000004b5a11 : cdq ; add byte ptr [rax], al ; jl 0x4b5a4f ; std ; jmp rsp
0x00000000004b59dd : cdq ; add byte ptr [rax], al ; xor edi, ebp ; jmp qword ptr [rcx]
0x000000000042466d : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000048cc84 : cdq ; add rax, r9 ; jmp rax
0x00000000004a96c0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000490f0b : cdq ; retf 0x22
0x000000000040765b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000444913 : cdq ; syscall
0x000000000047ded9 : clc ; add al, 0x75 ; retf
0x000000000046a741 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041da9a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041d6ff : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047ee13 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040da9d : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000488def : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000004503d2 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042b987 : clc ; add rax, rcx ; ret
0x000000000042beb4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004946b6 : clc ; call qword ptr [rax]
0x00000000004946ba : clc ; call rax
0x0000000000495999 : clc ; cli ; call qword ptr [rax]
0x0000000000495991 : clc ; cli ; call rax
0x0000000000495995 : clc ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x00000000004946b4 : clc ; cmc ; clc ; call qword ptr [rax]
0x00000000004237e8 : clc ; cmovne rax, rcx ; ret
0x000000000042dff9 : clc ; cmp rcx, rax ; jne 0x42e02b ; xor eax, eax ; ret
0x000000000042dff8 : clc ; cmp rcx, rax ; jne 0x42e02c ; xor eax, eax ; ret
0x0000000000476fc6 : clc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000480090 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004241b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000472f90 : clc ; dec dword ptr [rax + 1] ; ret
0x00000000004802b4 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048d16e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004020cc : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000470789 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000411c0d : clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000004791eb : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004781c1 : clc ; dec dword ptr [rbp + rcx*4 + 0xd] ; retf 2
0x000000000047f1b4 : clc ; dec dword ptr [rbx + rcx*4 + 0x3d] ; retf
0x0000000000462416 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004603be : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000045f773 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000492f71 : clc ; idiv bh ; ret
0x0000000000492f39 : clc ; idiv bh ; sti ; div esi ; jmp rcx
0x000000000045a292 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004489ba : clc ; jg 0x448989 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448a16 : clc ; jg 0x448a16 ; int1 ; mov eax, eax ; ret
0x00000000004546c7 : clc ; jg 0x454656 ; ret 0xdb76
0x00000000004546c7 : clc ; jg 0x45465a ; ret 0xdb76
0x00000000004b000e : clc ; jmp qword ptr [rsi]
0x000000000046131f : clc ; jmp rax
0x0000000000400d84 : clc ; leave ; ret
0x00000000004a8322 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004132e4 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042faf7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430467 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004353b7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430667 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435327 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430867 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435297 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fb13 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004484fe : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000044867d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000438d4c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044778a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048dd91 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004132fc : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b536 : clc ; pop rbp ; pop r12 ; ret
0x00000000004946c6 : clc ; push qword ptr [rax - 0x7f00070a] ; cmc ; clc ; call rax
0x0000000000472047 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000475b03 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000491628 : clc ; push rbx ; ret
0x0000000000413315 : clc ; ret
0x000000000048d32b : clc ; retf
0x000000000043f4d4 : clc ; rol ch, 1 ; jns 0x43f4b5 ; retf 0xead3
0x000000000043f624 : clc ; rol ch, 1 ; jns 0x43f605 ; retf 0xead3
0x000000000043f774 : clc ; rol ch, 1 ; jns 0x43f755 ; retf 0xead3
0x000000000043f8c4 : clc ; rol ch, 1 ; jns 0x43f8a5 ; retf 0xead3
0x000000000043fa14 : clc ; rol ch, 1 ; jns 0x43f9f5 ; retf 0xead3
0x000000000043fb64 : clc ; rol ch, 1 ; jns 0x43fb45 ; retf 0xead3
0x000000000043fcb4 : clc ; rol ch, 1 ; jns 0x43fc95 ; retf 0xead3
0x000000000043fe04 : clc ; rol ch, 1 ; jns 0x43fde5 ; retf 0xead3
0x000000000043ff54 : clc ; rol ch, 1 ; jns 0x43ff35 ; retf 0xead3
0x00000000004400a4 : clc ; rol ch, 1 ; jns 0x440085 ; retf 0xead3
0x00000000004401f4 : clc ; rol ch, 1 ; jns 0x4401d5 ; retf 0xead3
0x0000000000440344 : clc ; rol ch, 1 ; jns 0x440325 ; retf 0xead3
0x0000000000440494 : clc ; rol ch, 1 ; jns 0x440475 ; retf 0xead3
0x00000000004405e4 : clc ; rol ch, 1 ; jns 0x4405c5 ; retf 0xead3
0x0000000000440734 : clc ; rol ch, 1 ; jns 0x440715 ; retf 0xead3
0x000000000048356a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000474b9f : clc ; shr rax, 2 ; ret
0x00000000004821dd : clc ; std ; jbe 0x4821ed ; ret
0x0000000000485a01 : clc ; sub rax, r8 ; ret
0x00000000004413f6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000044739b : clc ; sub rax, rsi ; ret
0x000000000042c02b : clc ; vzeroupper ; ret
0x00000000004b0338 : cld ; add byte ptr [rax], al ; xor al, 0x77 ; stc ; call rsp
0x000000000044891f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000497c22 : cld ; call qword ptr [rax]
0x00000000004a4686 : cld ; call rax
0x00000000004b4a46 : cld ; call rdx
0x00000000004a4682 : cld ; dec esp ; mov dh, 0xfc ; call rax
0x000000000047c3ce : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004489fc : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044896a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000497c36 : cld ; jmp qword ptr [rax]
0x00000000004b381a : cld ; jmp qword ptr [rbx]
0x00000000004b3c1a : cld ; jmp qword ptr [rcx]
0x00000000004b4b12 : cld ; jmp qword ptr [rsi]
0x00000000004b37ba : cld ; jmp rdx
0x00000000004a90a5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a9074 ; retf
0x0000000000430282 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430485 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430685 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430885 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000448506 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000448688 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000438d5e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000447798 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000447792 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042feb6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435546 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430096 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004354c6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430276 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435446 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fcd6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004355c6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044a507 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000494e2c : cld ; or al, 0xfa ; jmp qword ptr [rdx + 0x12fffa0c]
0x000000000042fb61 : cld ; ret
0x0000000000409b20 : cld ; retf 0xffff
0x00000000004a77c3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004a77d6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000448022 : cld ; vzeroupper ; ret
0x00000000004b5944 : cld ; xor ebp, edi ; jmp qword ptr [rdx]
0x0000000000415fc1 : cli ; add ch, al ; ret
0x00000000004160c8 : cli ; add ch, al ; ret 0xffff
0x0000000000469c95 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000411f72 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004484f1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x448501 ; mov byte ptr [rdi], cl ; ret
0x00000000004474eb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000438d7c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004495de : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044963c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a97b9 : cli ; call 0xffffffffab5862b1
0x0000000000494fd6 : cli ; call qword ptr [rax + 0x10fffa05]
0x0000000000494fce : cli ; call qword ptr [rax + 0x10fffa06]
0x0000000000494fc6 : cli ; call qword ptr [rax + 0x10fffa07]
0x0000000000494fbe : cli ; call qword ptr [rax + 0x10fffa08]
0x0000000000495732 : cli ; call qword ptr [rax + 0x10fffa0c]
0x00000000004956f6 : cli ; call qword ptr [rax + 0x10fffa0d]
0x000000000049573a : cli ; call qword ptr [rax + 0x10fffa0f]
0x00000000004956fe : cli ; call qword ptr [rax + 0x10fffa10]
0x0000000000495742 : cli ; call qword ptr [rax + 0x10fffa12]
0x0000000000495706 : cli ; call qword ptr [rax + 0x10fffa13]
0x000000000049574a : cli ; call qword ptr [rax + 0x10fffa15]
0x000000000049570e : cli ; call qword ptr [rax + 0x10fffa16]
0x0000000000495752 : cli ; call qword ptr [rax + 0x10fffa18]
0x0000000000495716 : cli ; call qword ptr [rax + 0x10fffa19]
0x000000000049575a : cli ; call qword ptr [rax + 0x10fffa1b]
0x000000000049571e : cli ; call qword ptr [rax + 0x10fffa1c]
0x0000000000495762 : cli ; call qword ptr [rax + 0x10fffa1e]
0x0000000000495726 : cli ; call qword ptr [rax + 0x10fffa1f]
0x0000000000494da6 : cli ; call qword ptr [rax + 0x20fffa0d]
0x0000000000494f7e : cli ; call qword ptr [rax + 0x20fffa11]
0x000000000049529e : cli ; call qword ptr [rax + 0x20fffa34]
0x0000000000495476 : cli ; call qword ptr [rax + 0x20fffa38]
0x00000000004958a6 : cli ; call qword ptr [rax + 0x20fffaae]
0x0000000000494d86 : cli ; call qword ptr [rax]
0x00000000004b250a : cli ; call qword ptr [rbx]
0x00000000004b19e2 : cli ; call qword ptr [rdi]
0x0000000000494e52 : cli ; call qword ptr [rdx + 0x22fffa0f]
0x000000000049534a : cli ; call qword ptr [rdx + 0x22fffa36]
0x0000000000494e32 : cli ; call qword ptr [rdx]
0x00000000004952e6 : cli ; call qword ptr [rsi + 0x26fffa33]
0x0000000000494dce : cli ; call qword ptr [rsi]
0x0000000000494d76 : cli ; call rax
0x00000000004b194e : cli ; call rcx
0x00000000004b1f7e : cli ; call rdi
0x0000000000494e62 : cli ; call rdx
0x0000000000494dbe : cli ; call rsi
0x0000000000494f2a : cli ; call rsp
0x000000000044cad5 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045dece : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047fc30 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000459041 : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x48], 0xc7 ; ret 0xffd8
0x000000000045ce85 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000472297 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494f6a : cli ; dec edx ; or al, 0xfa ; push qword ptr [rax + 0xc] ; cli ; jmp rax
0x0000000000494f8a : cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000494d72 : cli ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x00000000004952aa : cli ; inc dword ptr [rax + 0x33] ; cli ; call rsi
0x0000000000495482 : cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x0000000000495872 : cli ; inc dword ptr [rax - 0x2f000563] ; sahf ; cli ; jmp qword ptr [rax]
0x00000000004958a2 : cli ; inc dword ptr [rax - 0x53] ; cli ; call qword ptr [rax + 0x20fffaae]
0x0000000000494f7a : cli ; inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000494fe2 : cli ; inc dword ptr [rax] ; add al, 0xfa ; push qword ptr [rax + 3] ; cli ; jmp rax
0x00000000004951e6 : cli ; inc dword ptr [rax] ; add edi, edx ; push qword ptr [rax + 2] ; cli ; call qword ptr [rax]
0x00000000004958fe : cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000495472 : cli ; inc dword ptr [rax] ; cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x00000000004958c2 : cli ; inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x00000000004957ca : cli ; inc dword ptr [rax] ; push rbp ; cli ; call qword ptr [rax]
0x000000000049529a : cli ; inc dword ptr [rax] ; xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000494f26 : cli ; inc dword ptr [rbp + rcx - 6] ; call rsp
0x000000000045a28f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000452b7d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455e65 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000495356 : cli ; inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x0000000000494e5e : cli ; inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x0000000000494e4e : cli ; inc dword ptr [rdx] ; adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000494dba : cli ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x00000000004952b2 : cli ; inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x00000000004952e2 : cli ; inc dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rsi + 0x26fffa33]
0x000000000049541e : cli ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x00000000004957ba : cli ; inc eax ; cli ; call rax
0x0000000000495916 : cli ; inc eax ; cli ; jmp rax
0x0000000000495946 : cli ; inc eax ; idiv dl ; call rax
0x000000000049596e : cli ; inc eax ; idiv edx ; call rax
0x00000000004958f2 : cli ; inc eax ; int1 ; cli ; jmp rax
0x00000000004952d2 : cli ; inc esi ; xor eax, 0x3556fffa ; cli ; jmp rsi
0x0000000000438d37 : cli ; jg 0x438d4a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004474b6 : cli ; jg 0x4474c8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447ae9 : cli ; jg 0x447afc ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447f51 : cli ; jg 0x447f64 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448672 : cli ; jg 0x448682 ; vzeroupper ; ret
0x0000000000448848 : cli ; jg 0x448858 ; vzeroupper ; ret
0x00000000004951a2 : cli ; jmp qword ptr [rax + 0x10fffa03]
0x0000000000494fb6 : cli ; jmp qword ptr [rax + 0x10fffa09]
0x00000000004951da : cli ; jmp qword ptr [rax + 0x20fffa04]
0x00000000004951d2 : cli ; jmp qword ptr [rax + 0x20fffa05]
0x00000000004951ca : cli ; jmp qword ptr [rax + 0x20fffa06]
0x00000000004951c2 : cli ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004951ba : cli ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000494daa : cli ; jmp qword ptr [rax]
0x0000000000494e2e : cli ; jmp qword ptr [rdx + 0x12fffa0c]
0x0000000000494e56 : cli ; jmp qword ptr [rdx]
0x0000000000494db2 : cli ; jmp qword ptr [rsi]
0x0000000000494d9a : cli ; jmp rax
0x000000000040d844 : cli ; jmp rdx
0x0000000000494de2 : cli ; jmp rsi
0x0000000000494f0e : cli ; jmp rsp
0x00000000004950ea : cli ; lcall ptr [rsi + 0x2efffa02] ; add bh, dl ; call rsp
0x000000000049552e : cli ; ljmp ptr [rax + rbp - 6] ; call qword ptr [rdx]
0x000000000049566a : cli ; ljmp ptr [rdx + 0x3afffa28] ; sub dl, bh ; jmp rax
0x00000000004950ee : cli ; ljmp ptr [rsi] ; add bh, dl ; call rsp
0x00000000004554dc : cli ; loopne 0x455559 ; jae 0x45546f ; retf 0xb941
0x0000000000430688 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040db26 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042c338 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042ade6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9c41 : cli ; push 0x6e ; ja 0x4a9bce ; ret 0x48f
0x0000000000494f86 : cli ; push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x00000000004952a6 : cli ; push qword ptr [rax + 0x40fffa33] ; xor edi, edx ; call rsi
0x0000000000494f6e : cli ; push qword ptr [rax + 0xc] ; cli ; jmp rax
0x00000000004951ea : cli ; push qword ptr [rax + 2] ; cli ; call qword ptr [rax]
0x0000000000494fe6 : cli ; push qword ptr [rax + 3] ; cli ; jmp rax
0x000000000049596a : cli ; push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004958ee : cli ; push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; jmp rax
0x00000000004957b6 : cli ; push qword ptr [rax - 0x3f0005b6] ; cli ; call rax
0x0000000000495852 : cli ; push qword ptr [rax - 0x6a] ; cli ; call qword ptr [rax]
0x0000000000495832 : cli ; push qword ptr [rax - 0x77] ; cli ; call qword ptr [rax]
0x000000000049519e : cli ; push qword ptr [rax] ; add al, 0xfa ; jmp qword ptr [rax + 0x10fffa03]
0x00000000004951b6 : cli ; push qword ptr [rax] ; or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x00000000004957d6 : cli ; push qword ptr [rax] ; pop rbx ; cli ; call rax
0x00000000004956ae : cli ; push qword ptr [rax] ; sub dl, bh ; call rax
0x000000000049582a : cli ; push qword ptr [rax] ; xchg dl, bh ; call rax
0x000000000049584a : cli ; push qword ptr [rax] ; xchg eax, ebx ; cli ; call rax
0x0000000000494f22 : cli ; push qword ptr [rbp + rcx + 0xd44fffa] ; cli ; call rsp
0x00000000004955f6 : cli ; push qword ptr [rdi + rbp - 6] ; jmp rsp
0x0000000000495036 : cli ; push qword ptr [rdx + 9] ; cli ; jmp rdx
0x0000000000494db6 : cli ; push qword ptr [rsi + 0x46fffa12] ; adc bh, dl ; call rsi
0x000000000049541a : cli ; push qword ptr [rsp + rsi + 0x3444fffa] ; cli ; call rsp
0x0000000000495996 : cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000495952 : cli ; push rax ; idiv dl ; call qword ptr [rax]
0x0000000000495976 : cli ; push rax ; idiv edx ; call qword ptr [rax]
0x00000000004958fa : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x00000000004956ee : cli ; push rax ; or bh, dl ; call qword ptr [rax]
0x00000000004957c6 : cli ; push rax ; push rdx ; cli ; inc dword ptr [rax] ; push rbp ; cli ; call qword ptr [rax]
0x000000000049548e : cli ; push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000495032 : cli ; push rdx ; or edx, edi ; push qword ptr [rdx + 9] ; cli ; jmp rdx
0x0000000000448429 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a86e5 : cli ; ret 0xac65
0x000000000044c58b : cli ; setae al ; ret
0x00000000004a8590 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004004ca : cli ; wait ; sub eax, dword ptr [rax] ; nop ; ret
0x00000000004a732a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004ac2b2 : cmc ; call qword ptr [rcx]
0x00000000004ac61a : cmc ; call qword ptr [rdx]
0x00000000004ac6ba : cmc ; call rax
0x00000000004ac62e : cmc ; call rsp
0x00000000004946b5 : cmc ; clc ; call qword ptr [rax]
0x00000000004946cd : cmc ; clc ; call rax
0x0000000000452b7c : cmc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004ac7d2 : cmc ; jmp qword ptr [rax]
0x00000000004ac0fa : cmc ; jmp qword ptr [rsi]
0x00000000004aa069 : cmc ; mov ch, 0xab ; ret
0x00000000004354ca : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff0e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000446873 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a6f17 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000446877 : cmc ; sub eax, edx ; ret
0x00000000004a96a5 : cmc ; xlatb ; ret 0x4e27
0x00000000004199d9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004199d8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000448944 : cmove eax, ecx ; pop rbx ; ret
0x00000000004725f1 : cmove eax, ecx ; ret
0x00000000004241b3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000044890c : cmove eax, edx ; pop rbx ; ret
0x00000000004242ef : cmove eax, edx ; ret
0x000000000041542f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ef18 : cmove ecx, eax ; mov rax, rcx ; ret
0x00000000004725f0 : cmove r8, rcx ; ret
0x0000000000448943 : cmove rax, rcx ; pop rbx ; ret
0x00000000004241b2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000044890b : cmove rax, rdx ; pop rbx ; ret
0x00000000004242ee : cmove rax, rdx ; ret
0x000000000047ef17 : cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000416e2b : cmovg eax, ecx ; test rdx, rdx ; jne 0x416e29 ; ret
0x000000000047110b : cmovg eax, ecx ; test rdx, rdx ; jne 0x471109 ; ret
0x00000000004237ea : cmovne eax, ecx ; ret
0x000000000044899c : cmovne eax, edx ; pop rbx ; ret
0x00000000004241ef : cmovne eax, edx ; ret
0x0000000000440db4 : cmovne eax, edx ; vzeroupper ; ret
0x00000000004237e9 : cmovne rax, rcx ; ret
0x000000000044899b : cmovne rax, rdx ; pop rbx ; ret
0x00000000004241ee : cmovne rax, rdx ; ret
0x0000000000440db3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042b948 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x000000000045125c : cmovs eax, edx ; ret
0x000000000048e288 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000472358 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x472359 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004488ee : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000448980 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000447388 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000456002 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044ff12 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416ff7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416fe6 : cmp al, 0x24 ; call 0x413264
0x000000000048e3dd : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004474f6 : cmp al, 0x27 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004190cb : cmp al, 0x2a ; add byte ptr [rcx], al ; ret
0x000000000048d8ac : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d83d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a8320 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b1f78 : cmp al, 0x5f ; add byte ptr [rax], al ; adc al, 0x72 ; cli ; call rdi
0x00000000004a7223 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004b1ee4 : cmp al, 0x6f ; cli ; jmp rax
0x00000000004a9d0b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000045ae61 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040db29 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x0000000000496005 : cmp al, 0xfb ; call qword ptr [rax]
0x0000000000495fdd : cmp al, 0xfb ; call qword ptr [rdx]
0x00000000004960b1 : cmp al, 0xfb ; call rsi
0x000000000049604d : cmp al, 0xfb ; jmp rbx
0x000000000044be2d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004518aa : cmp al, byte ptr [rbx - 0x76b7fd1e] ; ret
0x0000000000449a11 : cmp al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000446d36 : cmp al, byte ptr [rsi - 1] ; jne 0x446d5c ; xor eax, eax ; ret
0x000000000042bba6 : cmp al, dh ; ret
0x000000000042bba5 : cmp al, r14b ; ret
0x000000000048b626 : cmp bh, 0x10 ; jne 0x48b64f ; xor eax, eax ; ret
0x000000000048e7c6 : cmp bh, 0x10 ; jne 0x48e7e5 ; xor eax, eax ; ret
0x000000000048f626 : cmp bh, 0x10 ; jne 0x48f645 ; xor eax, eax ; ret
0x0000000000490096 : cmp bh, 0x10 ; jne 0x4900bf ; xor eax, eax ; ret
0x000000000048e7ac : cmp bh, 0x30 ; jne 0x48e7e1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f60c : cmp bh, 0x30 ; jne 0x48f641 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000411352 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000412d0f : cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004773eb : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000041101e : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004137b9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000401ccb : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x0000000000482fee : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042bbe7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000470c75 : cmp byte ptr [rax + 1], cl ; ret
0x00000000004709e0 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000458c2f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045ba17 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000045479c : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045bb94 : cmp byte ptr [rax - 0x75], cl ; jl 0x45bbc5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000411353 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047e939 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000411be0 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x0000000000470786 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000453134 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000049527c : cmp byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000042bbd6 : cmp byte ptr [rax], ah ; ret
0x0000000000417463 : cmp byte ptr [rax], al ; je 0x417475 ; ret
0x000000000048d7af : cmp byte ptr [rax], al ; je 0x48d7d8 ; add rsp, 0x18 ; ret
0x0000000000447322 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000440950 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042bbc6 : cmp byte ptr [rax], dl ; ret
0x000000000042bbc5 : cmp byte ptr [rax], r10b ; ret
0x000000000042bbd5 : cmp byte ptr [rax], r12b ; ret
0x000000000044094f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004a5748 : cmp byte ptr [rbp - 3], bh ; jmp qword ptr [rax]
0x00000000004b4979 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b49ad : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b4945 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048b2c8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040e076 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416ae0 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004ad6c4 : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x0000000000472080 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d8ab : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d8be ; mov qword ptr [rax], rdx ; ret
0x00000000004a4700 : cmp byte ptr [rcx - 0x46c70004], bh ; cld ; call rax
0x00000000004a4694 : cmp byte ptr [rcx - 0x482f0004], bh ; cld ; call rax
0x000000000040452b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000458957 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000480806 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000417428 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042d4cd : cmp byte ptr [rdi], dl ; ret
0x000000000042dfe0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042dfc9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042dfb2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ca6e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d83c : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d865 ; mov rax, qword ptr [rax] ; ret
0x00000000004aca74 : cmp byte ptr [rdx], cl ; add byte ptr [rax], al ; cwde ; and dh, dh ; call rsp
0x0000000000495670 : cmp ch, byte ptr [rax] ; cli ; jmp rax
0x000000000048cde4 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x00000000004b3608 : cmp cl, bh ; sti ; jmp qword ptr [rbx]
0x0000000000489522 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042e6b1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042e801 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042e951 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042eaa1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042ebf1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042ed41 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042ee91 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042efe1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042f131 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042f281 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042f3d1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042f521 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042f671 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042f7c1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042f911 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004338ea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x0000000000433a6a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x0000000000433bea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x0000000000433d6a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x0000000000433eea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043406a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004341ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000043436a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x00000000004344ea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000043466a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000004347ea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043496a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x0000000000434aea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x0000000000434c6a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x0000000000434dea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004aa0e6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000404de7 : cmp cl, ch ; ret 0xfffb
0x0000000000440db1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044882a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004acf95 : cmp dh, dh ; call qword ptr [rdi]
0x000000000048b625 : cmp dil, 0x10 ; jne 0x48b650 ; xor eax, eax ; ret
0x000000000048e7c5 : cmp dil, 0x10 ; jne 0x48e7e6 ; xor eax, eax ; ret
0x000000000048f625 : cmp dil, 0x10 ; jne 0x48f646 ; xor eax, eax ; ret
0x0000000000490095 : cmp dil, 0x10 ; jne 0x4900c0 ; xor eax, eax ; ret
0x00000000004484f0 : cmp dl, 1 ; ja 0x448513 ; jb 0x448502 ; mov byte ptr [rdi], cl ; ret
0x0000000000438d7b : cmp dl, 1 ; jb 0x438d8d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004474ea : cmp dl, 1 ; jb 0x4474f8 ; mov byte ptr [rdi], cl ; ret
0x0000000000423855 : cmp dl, al ; jne 0x423848 ; sub rax, 0x10 ; ret
0x000000000049527d : cmp dl, bh ; call qword ptr [rax]
0x0000000000495479 : cmp dl, bh ; jmp qword ptr [rax]
0x000000000049533d : cmp dl, bh ; jmp rdx
0x0000000000423854 : cmp dl, r8b ; jne 0x423849 ; sub rax, 0x10 ; ret
0x0000000000472028 : cmp dword ptr [rax + 0x30], 0 ; je 0x472037 ; ret
0x000000000042a4c7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042aca7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040f021 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000435008 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000417461 : cmp dword ptr [rdi + 0x38], 0 ; je 0x417477 ; ret
0x00000000004766c4 : cmp dword ptr [rdi + 0x48000003], -0x77 ; retf
0x0000000000424db1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000045ce83 : cmp dword ptr [rsi], esi ; cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000048008f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000472046 : cmp eax, -1 ; je 0x472059 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004821dc : cmp eax, -3 ; jbe 0x4821ee ; ret
0x0000000000487f75 : cmp eax, 0x231ffd ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000461861 : cmp eax, 0x255eba ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000413262 : cmp eax, 0x2a6d40 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000403e2c : cmp eax, 0x2b612e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405a6f : cmp eax, 0x2b7f84 ; call 0x421d07
0x0000000000495fd9 : cmp eax, 0x3cb8fffb ; sti ; call qword ptr [rdx]
0x000000000049601d : cmp eax, 0x3d5afffb ; sti ; call qword ptr [rdx]
0x000000000049600d : cmp eax, 0x3d92fffb ; sti ; jmp qword ptr [rdi]
0x0000000000495ec5 : cmp eax, 0x3e66fffb ; sti ; call rsi
0x00000000004013eb : cmp eax, 0x74002bba ; or al, 0x81 ; retf 0x440
0x000000000044af42 : cmp eax, 0x7d8b48 ; call r12
0x000000000044ccaf : cmp eax, 0x83482f74 ; ret
0x000000000044cad6 : cmp eax, 0x83497174 ; ret
0x0000000000473ba4 : cmp eax, 0x89000001 ; ret 0x8948
0x000000000044ddeb : cmp eax, 0x890026f0 ; ret 0xe083
0x00000000004554d2 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004a760b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000449dc6 : cmp eax, 0xfffff000 ; ja 0x449dd8 ; ret
0x0000000000449e14 : cmp eax, 0xfffff000 ; ja 0x449e28 ; ret
0x000000000044a01f : cmp eax, 0xfffff000 ; ja 0x44a088 ; ret
0x000000000044a0b5 : cmp eax, 0xfffff000 ; ja 0x44a0c8 ; ret
0x000000000044a0f2 : cmp eax, 0xfffff000 ; ja 0x44a158 ; ret
0x000000000044a188 : cmp eax, 0xfffff000 ; ja 0x44a1a0 ; ret
0x000000000044a1b8 : cmp eax, 0xfffff000 ; ja 0x44a1d0 ; ret
0x000000000044a3c2 : cmp eax, 0xfffff000 ; ja 0x44a410 ; ret
0x000000000044a438 : cmp eax, 0xfffff000 ; ja 0x44a450 ; ret
0x000000000044abb1 : cmp eax, 0xfffff000 ; ja 0x44abc8 ; ret
0x000000000045b99e : cmp eax, 0xfffff000 ; ja 0x45b9b8 ; ret
0x0000000000475bf6 : cmp eax, 0xfffff000 ; ja 0x475c08 ; ret
0x0000000000475c4a : cmp eax, 0xfffff000 ; ja 0x475c60 ; ret
0x0000000000449d38 : cmp eax, 0xfffff001 ; jae 0x449d47 ; ret
0x000000000044ade8 : cmp eax, 0xfffff001 ; jae 0x44adf7 ; ret
0x000000000044ae18 : cmp eax, 0xfffff001 ; jae 0x44ae27 ; ret
0x000000000044ae48 : cmp eax, 0xfffff001 ; jae 0x44ae57 ; ret
0x000000000044c4fb : cmp eax, 0xfffff001 ; jae 0x44c50a ; ret
0x000000000044c528 : cmp eax, 0xfffff001 ; jae 0x44c537 ; ret
0x0000000000475b78 : cmp eax, 0xfffff001 ; jae 0x475b87 ; ret
0x0000000000488d28 : cmp eax, 0xfffff001 ; jae 0x488d37 ; ret
0x0000000000448eab : cmp eax, 2 ; je 0x448ebf ; xor eax, eax ; ret
0x000000000044c66a : cmp eax, 4 ; je 0x44c675 ; ret
0x00000000004a94d7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000044733f : cmp eax, ecx ; jle 0x44737f ; movsxd rax, ecx ; ret
0x0000000000446d53 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041916b : cmp eax, edx ; jae 0x419197 ; movzx eax, byte ptr [rax] ; ret
0x00000000004884a4 : cmp eax, esi ; je 0x4884b5 ; ret
0x000000000044c606 : cmp ebx, 0xa ; je 0x44c611 ; ret
0x00000000004742c5 : cmp ecx, 0xc00 ; je 0x4742d9 ; ret
0x000000000044c831 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44c826 ; ret
0x0000000000482ca8 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x2fe8
0x000000000044efc2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004800d8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x480088 ; xor eax, eax ; ret
0x00000000004725ee : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042dffb : cmp ecx, eax ; jne 0x42e029 ; xor eax, eax ; ret
0x000000000047ee68 : cmp ecx, eax ; jne 0x47ee12 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000484a02 : cmp ecx, ecx ; ret
0x000000000047235a : cmp ecx, esi ; jne 0x472357 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047ee56 : cmp ecx, esi ; jne 0x47ee35 ; ret
0x0000000000466890 : cmp edi, eax ; ja 0x466877 ; mov eax, r9d ; ret
0x0000000000475f6e : cmp edi, edx ; ja 0x475f9d ; ret
0x00000000004476f2 : cmp edi, edx ; jb 0x4476ff ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046688f : cmp edi, r8d ; ja 0x466878 ; mov eax, r9d ; ret
0x000000000042003a : cmp edx, eax ; jne 0x420005 ; ret
0x00000000004484db : cmp edx, ecx ; jne 0x4484c8 ; ret
0x0000000000448642 : cmp edx, ecx ; jne 0x44862e ; vzeroupper ; ret
0x0000000000448805 : cmp edx, ecx ; jne 0x4487e9 ; vzeroupper ; ret
0x0000000000495475 : cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x00000000004952b5 : cmp edx, edi ; call rsi
0x000000000044c58a : cmp edx, edi ; setae al ; ret
0x00000000004749d6 : cmp edx, esi ; je 0x4749e7 ; test edx, edx ; jne 0x4749d9 ; ret
0x00000000004952b4 : cmp edx, r15d ; call rsi
0x00000000004191a9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000458da4 : cmp esi, 3 ; je 0x458db6 ; ret
0x0000000000447ad5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a96a4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000004183ca : cmp esi, ecx ; jne 0x4183c7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000472027 : cmp qword ptr [rax + 0x30], 0 ; je 0x472038 ; ret
0x0000000000417460 : cmp qword ptr [rdi + 0x38], 0 ; je 0x417478 ; ret
0x000000000044c605 : cmp r11d, 0xa ; je 0x44c612 ; ret
0x0000000000449a10 : cmp r8b, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000449dc5 : cmp rax, -0x1000 ; ja 0x449dd9 ; ret
0x0000000000449e13 : cmp rax, -0x1000 ; ja 0x449e29 ; ret
0x000000000044a01e : cmp rax, -0x1000 ; ja 0x44a089 ; ret
0x000000000044a0b4 : cmp rax, -0x1000 ; ja 0x44a0c9 ; ret
0x000000000044a0f1 : cmp rax, -0x1000 ; ja 0x44a159 ; ret
0x000000000044a187 : cmp rax, -0x1000 ; ja 0x44a1a1 ; ret
0x000000000044a1b7 : cmp rax, -0x1000 ; ja 0x44a1d1 ; ret
0x000000000044a3c1 : cmp rax, -0x1000 ; ja 0x44a411 ; ret
0x000000000044a437 : cmp rax, -0x1000 ; ja 0x44a451 ; ret
0x000000000044abb0 : cmp rax, -0x1000 ; ja 0x44abc9 ; ret
0x000000000045b99d : cmp rax, -0x1000 ; ja 0x45b9b9 ; ret
0x0000000000475bf5 : cmp rax, -0x1000 ; ja 0x475c09 ; ret
0x0000000000475c49 : cmp rax, -0x1000 ; ja 0x475c61 ; ret
0x0000000000449d37 : cmp rax, -0xfff ; jae 0x449d48 ; ret
0x000000000044ade7 : cmp rax, -0xfff ; jae 0x44adf8 ; ret
0x000000000044ae17 : cmp rax, -0xfff ; jae 0x44ae28 ; ret
0x000000000044ae47 : cmp rax, -0xfff ; jae 0x44ae58 ; ret
0x000000000044c4fa : cmp rax, -0xfff ; jae 0x44c50b ; ret
0x000000000044c527 : cmp rax, -0xfff ; jae 0x44c538 ; ret
0x0000000000475b77 : cmp rax, -0xfff ; jae 0x475b88 ; ret
0x0000000000488d27 : cmp rax, -0xfff ; jae 0x488d38 ; ret
0x000000000048008e : cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004821db : cmp rax, -3 ; jbe 0x4821ef ; ret
0x000000000041916a : cmp rax, rdx ; jae 0x419198 ; movzx eax, byte ptr [rax] ; ret
0x00000000004884a3 : cmp rax, rsi ; je 0x4884b6 ; ret
0x000000000044c830 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c827 ; ret
0x00000000004800d7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x480089 ; xor eax, eax ; ret
0x00000000004725ed : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047ee67 : cmp rcx, r8 ; jne 0x47ee13 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042dffa : cmp rcx, rax ; jne 0x42e02a ; xor eax, eax ; ret
0x0000000000472359 : cmp rcx, rsi ; jne 0x472358 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047ee55 : cmp rcx, rsi ; jne 0x47ee36 ; ret
0x0000000000475f6d : cmp rdi, rdx ; ja 0x475f9e ; ret
0x00000000004476f1 : cmp rdi, rdx ; jb 0x447700 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420039 : cmp rdx, r8 ; jne 0x420006 ; ret
0x00000000004484da : cmp rdx, rcx ; jne 0x4484c9 ; ret
0x00000000004484d9 : cmp rdx, rcx ; jne 0x4484ca ; ret
0x0000000000448641 : cmp rdx, rcx ; jne 0x44862f ; vzeroupper ; ret
0x0000000000448804 : cmp rdx, rcx ; jne 0x4487ea ; vzeroupper ; ret
0x000000000044c589 : cmp rdx, rdi ; setae al ; ret
0x00000000004183c9 : cmp rsi, rcx ; jne 0x4183c8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000042da79 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a76d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a76a2 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000404d8e : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000043e766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a97f1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000494b99 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x00000000004201c9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub dword ptr [rax], eax ; ret
0x000000000041d88d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047d1a8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000411289 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044e075 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in eax, dx ; add al, ch ; ret 0xfde1
0x0000000000400be5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; lock add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004a71bf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000046d10d : cmpxchg dword ptr [rax + rax], esp ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048b6a0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041aa5c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b735 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000041128a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000451d9f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049279c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000491eac : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004aca78 : cwde ; and dh, dh ; call rsp
0x0000000000495859 : cwde ; cli ; jmp rax
0x00000000004b0fa8 : cwde ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004a4710 : cwde ; mov eax, 0xb878fffc ; cld ; call rax
0x00000000004b0048 : cwde ; salc ; clc ; call qword ptr [rax]
0x0000000000464207 : cwde ; shl rdx, 3 ; call 0x40043f
0x0000000000442a51 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000442a52 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044801d : dec byte ptr [rax + 0x7f] ; jl 0x448042 ; cld ; vzeroupper ; ret
0x000000000045e6c9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x00000000004814df : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xbde8
0x0000000000472e40 : dec byte ptr [rax - 0x77] ; ret
0x000000000048147d : dec byte ptr [rax - 0x7d] ; ret
0x0000000000421a7e : dec byte ptr [rbp - 0x7bf0ffd7] ; ret
0x000000000044b092 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e9c6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044b723 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000040e577 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000041e9c9 : dec byte ptr [rdi] ; xchg byte ptr [rax], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x7b73
0x00000000004821d9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x4821f1 ; ret
0x0000000000456f23 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x0000000000414e3e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000411c1d : dec dword ptr [rax + 0x29] ; ret
0x0000000000442b92 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004831a1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004832e1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041f0b5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000476953 : dec dword ptr [rax + 0x39] ; ret
0x0000000000413a4d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000041e525 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041e4f7 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x0000000000484e9e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045f7fc : dec dword ptr [rax + 0x63] ; retf
0x00000000004967cf : dec dword ptr [rax + 0x6a] ; sti ; jmp qword ptr [rax]
0x000000000046f7f2 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000473b39 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000480091 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004241b1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004742e9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045ba1b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472f91 : dec dword ptr [rax + 1] ; ret
0x0000000000403613 : dec dword ptr [rax - 0x39] ; ret
0x0000000000449cbf : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000449c64 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045e730 : dec dword ptr [rax - 0x39] ; ret 0xbc20
0x0000000000449bd7 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x00000000004693c6 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000449f55 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000449b2c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000495a37 : dec dword ptr [rax - 0x3f0004d1] ; sti ; jmp rax
0x000000000048c44f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000456e34 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044eb8c : dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x00000000004802b5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041f508 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c942 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f75c : dec dword ptr [rax - 0x75] ; jne 0x44f6f6 ; call rsi
0x0000000000469bdb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048d16f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044b325 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000041bd4d : dec dword ptr [rax - 0x75] ; ret 0x4840
0x000000000048241c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004201c4 : dec dword ptr [rax - 0x77] ; add eax, 0x29a694 ; ret
0x000000000048aaf7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047fc31 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004020cd : dec dword ptr [rax - 0x77] ; ret
0x0000000000475f5e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041f9af : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000475ebd : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041f72c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000424127 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045b842 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046e3d8 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000449a56 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000478e4c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000044ada5 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449bb1 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x0000000000456e4d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x0000000000449b9d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x000000000046c4e9 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000047d467 : dec dword ptr [rax - 0x77] ; ret 0xc8e8
0x000000000046e746 : dec dword ptr [rax - 0x77] ; ret 0xd9e8
0x000000000047646c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000047078a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000405dff : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000411c0e : dec dword ptr [rax - 0x77] ; retf
0x00000000004629cc : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000411589 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000046d92f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x0000000000403a7c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x0000000000459042 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x48], 0xc7 ; ret 0xffd8
0x000000000046a3d3 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004821da : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4821f0 ; ret
0x0000000000404d4f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454c51 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045333b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000040634b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000456f24 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e737 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040df7c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000459e98 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044be30 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043500c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004776f7 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x000000000048f134 : dec dword ptr [rax - 9] ; ret
0x0000000000458ba5 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000492f37 : dec dword ptr [rax] ; clc ; idiv bh ; sti ; div esi ; jmp rcx
0x00000000004a565f : dec dword ptr [rax] ; jbe 0x4a5664 ; jmp rax
0x0000000000462634 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047d296 : dec dword ptr [rbp + rcx*4 + 0x2d] ; retf 0x282
0x0000000000477fbe : dec dword ptr [rbp + rcx*4 + 0xd] ; retf 0x2cc
0x0000000000478143 : dec dword ptr [rbp + rcx*4 + 0xd] ; retf 2
0x0000000000403b27 : dec dword ptr [rbp - 0x75] ; push rsp ; ret 0x4820
0x000000000046885d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045bf39 : dec dword ptr [rbp - 0x77] ; retf
0x000000000045ce86 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000401414 : dec dword ptr [rbx + 0x2bb9e115] ; add bh, dh ; ret 0
0x000000000042379d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x000000000047f1b5 : dec dword ptr [rbx + rcx*4 + 0x3d] ; retf
0x0000000000472298 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047182b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048cd68 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048cd86 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048cde7 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000460e73 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046258f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047cb09 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048b3da : dec dword ptr [rcx + 0x39] ; retf
0x000000000048cdf2 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046bcf5 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046b877 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046e01e : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000004028ad : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048cdbb : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048cdb0 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047cd85 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x000000000045882a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f759 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000458981 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000458c5f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045e526 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046d853 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041c910 : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000040e83f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000460dd7 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047ce50 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x0000000000404d91 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d7f0 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046b844 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041cca6 : dec dword ptr [rcx - 0x7b] ; ret
0x0000000000460bdf : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000496d9b : dec dword ptr [rdi + 0x72] ; sti ; call qword ptr [rdi]
0x0000000000496db7 : dec dword ptr [rdi + rbp*2 + 0x72c9fffb] ; sti ; call qword ptr [rax]
0x00000000004610db : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x000000000045125b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045383f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000446be0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004603bf : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047df4a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000460b47 : dec dword ptr [rdi] ; xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000044ea09 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000421d2c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004191ab : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000044aa2f : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc221
0x000000000044a536 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xca21
0x00000000004a569f : dec eax ; je 0x4a56a4 ; call rax
0x0000000000496dbb : dec ecx ; jb 0x496dbe ; call qword ptr [rax]
0x0000000000494f6b : dec edx ; or al, 0xfa ; push qword ptr [rax + 0xc] ; cli ; jmp rax
0x0000000000495fd7 : dec esp ; cmp eax, 0x3cb8fffb ; sti ; call qword ptr [rdx]
0x00000000004a4683 : dec esp ; mov dh, 0xfc ; call rax
0x000000000045bf38 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000442b91 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000473d22 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047eeb5 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000458da1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x458db9 ; ret
0x00000000004668a6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000448a18 : div ecx ; mov eax, eax ; ret
0x00000000004489ff : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000492f41 : div esi ; call rsp
0x0000000000492f3d : div esi ; jmp rcx
0x00000000004668a5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042c0d7 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047ee10 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000446d54 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000483f2b : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000442a4e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000442b8e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004766b8 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042beb7 : enter -0x73b, 0x77 ; ret
0x000000000047ef1a : enter -0x76b8, -0x38 ; ret
0x00000000004650ef : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x0000000000402237 : enter -1, -1 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000042c884 : enter -2, -1 ; ret
0x0000000000494d45 : enter -7, -0x60 ; leave ; stc ; push rax ; retf 0xfff9
0x000000000049e97c : enter 0, 0 ; retf
0x00000000004a29d0 : enter 0, 0 ; retf 0
0x000000000047634c : enter 0, 0 ; xor eax, eax ; leave ; ret
0x000000000049fb28 : enter 0x10, 0 ; retf
0x0000000000440fd9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046c729 : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484cf1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044133e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000042643d : enter 0x31c3, -0x40 ; ret
0x0000000000447340 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004b3604 : enter 0x75, 0 ; cmp cl, bh ; sti ; jmp qword ptr [rbx]
0x00000000004a9e5c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049f328 : enter 0xa, 0 ; retf
0x000000000049f728 : enter 0xd, 0 ; retf
0x000000000042db26 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004409a1 : enter 0xf66, -0x15 ; ret
0x00000000004a2bd0 : enter 1, 0 ; retf 1
0x000000000049fee0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2dd0 : enter 2, 0 ; retf 2
0x00000000004a2fd0 : enter 3, 0 ; retf 3
0x00000000004a31d0 : enter 4, 0 ; retf 4
0x00000000004a33d0 : enter 5, 0 ; retf 5
0x00000000004a35d0 : enter 6, 0 ; retf 6
0x00000000004a37d0 : enter 7, 0 ; retf 7
0x00000000004a39d0 : enter 8, 0 ; retf 8
0x00000000004a3bd0 : enter 9, 0 ; retf 9
0x000000000048d853 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000410278 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040fd46 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000045a1b5 : fadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004ac614 : fadd dword ptr [rip - 0x6ff80000] ; cmc ; call qword ptr [rdx]
0x0000000000458755 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000466893 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000048f287 : fbld dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042d671 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048f286 : fbld dword ptr ss:[rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000490664 : fbstp dword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a9498 : fcmovb st(0), st(3) ; ret
0x000000000044145b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045f5a6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d859 : fcomi st(3) ; ret
0x00000000004110a9 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000410e86 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044ac41 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004aa219 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a8480 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000048fca2 : fcomp st(0), st(6) ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000488c18 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488cff : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004b3814 : fdiv dword ptr [rdi] ; add byte ptr [rax + 0xa], cl ; cld ; jmp qword ptr [rbx]
0x0000000000494c59 : fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000494c39 : fdiv st(1), st(0) ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494cdd : fdiv st(1), st(0) ; jmp rax
0x000000000048b4a9 : fdiv st(3) ; ret
0x0000000000494c3d : fdivp st(1) ; jmp qword ptr [rax]
0x000000000041f72a : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004b3c14 : fdivr dword ptr [rbx] ; add byte ptr [rax + 0x1f], bl ; cld ; jmp qword ptr [rcx]
0x0000000000433670 : fdivr qword ptr [rdx + 0x28] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000494c71 : fdivr st(1) ; call qword ptr [rax]
0x0000000000494c91 : fdivr st(1) ; call rax
0x00000000004a77d5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000446d58 : fdivr st(7) ; ret
0x0000000000400591 : fiadd dword ptr [rax] ; test dl, dl ; jne 0x40059e ; ret
0x000000000040f5d8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000004719d3 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000412e9a : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004aa066 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000041e522 : fidiv dword ptr [rsi + 0x3948ffff] ; retf 0x2a74
0x0000000000488875 : fidivr dword ptr [rax + 1] ; ret
0x0000000000424ea1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000465682 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424ea2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041a64c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000004559e9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004814d7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046621d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000486f64 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x00000000004661e2 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042ac06 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046cb9d : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000404f74 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x00000000004513ff : fimul word ptr [rax + 1] ; ret
0x0000000000484b7c : fimul word ptr [rbp + 0x11] ; retf
0x0000000000422481 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41e726
0x000000000044a11f : fistp qword ptr [rax + 1] ; syscall
0x000000000041708e : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000471500 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000458fb7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483b31 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046706c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047fca6 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000048cc80 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000483b4b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000004556c7 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047ddc4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000042191b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000424aca : fisttp qword ptr [rax + 0x29] ; ret
0x000000000040636e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000045831a : fisttp qword ptr [rdi] ; ret 0xc389
0x00000000004abf30 : fisttp qword ptr [rsi + rdi*8] ; jmp rsp
0x00000000004814e2 : fisttp word ptr [rax - 0x77] ; ret 0xbde8
0x0000000000401f13 : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000483bcf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044a3dd : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000043fa9d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042da41 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000449764 : fisub dword ptr [rsi] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042d741 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000483e44 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a84c1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000455e63 : fld st(2) ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000473b72 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000473bd2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041cd65 : fld xword ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042bae9 : fldenv dword ptr [rsi + 0xf] ; je 0x42bb46 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bdc7 : fldenv dword ptr [rsi + 0xf] ; je 0x42be24 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042dac1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b9e1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004553d3 : fldl2t ; retf 0xfffd
0x000000000046908c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000484be4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044ac65 : fmul dword ptr [rax + 0x39] ; ret
0x0000000000447027 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000412b18 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e651 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000048a0b4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044ccfc : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000004776fa : fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x0000000000469a70 : fmul dword ptr [rdi] ; ret
0x0000000000487402 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048f6ee : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004251f9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043971f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000046019f : fmul qword ptr [rdi] ; lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000458518 : fmul qword ptr [rdi] ; ret 0xc389
0x0000000000473b70 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000424d5f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a9d0a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040e0c9 : fpatan ; ret
0x000000000042d841 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a81a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a8520 : fstp st(0) ; ret 0xde5d
0x00000000004a76eb : fstp st(3), st(0) ; retf 0xeb83
0x000000000047f7f9 : fsub dword ptr [rbx] ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000449d48 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449dd8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000048fb85 : fsub dword ptr [rdx] ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000042db41 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004418c4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a9ad8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000044716b : fsub qword ptr [rsi + 0xf] ; jmp 0x447137
0x000000000042d941 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440abc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000049552c : fsubr qword ptr [rax] ; cli ; ljmp ptr [rax + rbp - 6] ; call qword ptr [rdx]
0x000000000044a384 : fsubr st(3) ; ret 0xf66
0x00000000004aa1f8 : fucom st(5) ; loop 0x4aa251 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a951 : fucomi st(3) ; ret 0x1f0f
0x00000000004601c7 : fucompi st(0) ; ret
0x000000000048bb51 : fucompi st(1) ; ret
0x00000000004a983e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494cd5 : fyl2xp1 ; call qword ptr [rax]
0x0000000000494bf1 : fyl2xp1 ; call rax
0x00000000004b2530 : hlt ; add byte ptr fs:[rax], al ; sub al, 0xaf ; cli ; call qword ptr [rdx]
0x000000000044b461 : hlt ; call r15
0x0000000000491627 : hlt ; clc ; push rbx ; ret
0x00000000004b13c2 : hlt ; jmp qword ptr [rbx]
0x00000000004b46b2 : hlt ; jmp qword ptr [rcx]
0x000000000043544a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300fe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044980e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000446863 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a7a : hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004a86e3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446867 : hlt ; sub eax, edx ; ret
0x00000000004946b9 : idiv al ; call rax
0x000000000045e52c : idiv bh ; call rax
0x000000000045f774 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045f286 : idiv bh ; jmp qword ptr [rax]
0x0000000000492f36 : idiv bh ; or al, bh ; idiv bh ; sti ; div esi ; jmp rcx
0x0000000000492f72 : idiv bh ; ret
0x00000000004adca6 : idiv bh ; retf
0x0000000000492f3a : idiv bh ; sti ; div esi ; jmp rcx
0x0000000000451256 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004b15c9 : idiv ch ; jmp qword ptr [rdx]
0x0000000000495955 : idiv dl ; call qword ptr [rax]
0x0000000000495949 : idiv dl ; call rax
0x0000000000495945 : idiv dl ; inc eax ; idiv dl ; call rax
0x000000000049594d : idiv dl ; jmp rax
0x0000000000495951 : idiv dl ; push rax ; idiv dl ; call qword ptr [rax]
0x000000000045e846 : idiv edi ; call qword ptr [rax]
0x000000000045f7fa : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045e72e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbc20
0x000000000046b211 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000046a46d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000493152 : idiv edi ; mov ebp, dword ptr [rdi + rsi*8 - 0x852d901] ; jmp qword ptr [rsi]
0x0000000000493266 : idiv edi ; mov ebp, dword ptr [rdi + rsi*8 - 0x8537401] ; jmp qword ptr [rsi]
0x00000000004af1ca : idiv edi ; retf
0x0000000000495979 : idiv edx ; call qword ptr [rax]
0x0000000000495971 : idiv edx ; call rax
0x000000000049596d : idiv edx ; inc eax ; idiv edx ; call rax
0x0000000000495975 : idiv edx ; push rax ; idiv edx ; call qword ptr [rax]
0x00000000004791e7 : imul al ; wait ; jb 0x4791ec ; dec dword ptr [rax - 0x7d] ; ret
0x000000000046d325 : imul dword ptr [rsi - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000406acf : imul eax ; retf
0x00000000004453c1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000429037 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000468b52 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffc8
0x0000000000428a37 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000429d97 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042af77 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000428737 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004addff : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000475b6c : imul edi, ebp, -1 ; nop ; mov eax, 0x3f ; syscall
0x0000000000404f24 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000428137 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000427e37 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000427b37 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000418c1e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044483c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000041c46f : in al, 0x29 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a9b21 : in al, 0x4c ; pop rax ; retf
0x000000000044154c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044cad3 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x00000000004b115c : in al, 0xca ; stc ; jmp qword ptr [rdx]
0x000000000045ee20 : in al, 0xf ; lahf ; ret
0x000000000043542a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004484de : in al, 0xf3 ; ret
0x000000000044a10e : in al, dx ; adc al, ch ; retf
0x0000000000410252 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000423ff4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x285
0x000000000040eec4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x3d6
0x000000000045f2c4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045f101 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004ac628 : in al, dx ; add eax, 0x90140000 ; cmc ; call rsp
0x0000000000415431 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004300fa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043582a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041f74f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042aff4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000450e58 : in al, dx ; retf 0x26
0x00000000004a9d0d : in al, dx ; retf 0xae32
0x000000000048e439 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048aeb4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a9c3e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9bd1 ; ret 0x48f
0x00000000004a9c3d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9bd2 ; ret 0x48f
0x0000000000449aa6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a8343 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484ea2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a75d9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c97a : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046406d : in eax, 0xdf ; loopne 0x463ffe ; ret
0x00000000004aa1f9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a839a : in eax, 0xe5 ; retf 0x2a91
0x0000000000474e93 : in eax, 0xf ; je 0x474eb8 ; add rax, 2 ; ret
0x0000000000448999 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004354aa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000494c8d : in eax, 0xf9 ; call qword ptr [rax]
0x0000000000494cad : in eax, 0xf9 ; call rax
0x00000000004a96c1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000424eeb : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000467618 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000044e076 : in eax, dx ; add al, ch ; ret 0xfde1
0x000000000046a7a8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044af1a : in eax, dx ; jne 0x44af37 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044ba85 : in eax, dx ; jne 0x44baaf ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bab8 : in eax, dx ; jne 0x44bb08 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bae4 : in eax, dx ; jne 0x44bb68 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004906af : in eax, dx ; jne 0x490691 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490902 : in eax, dx ; jne 0x4908ef ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004914bc : in eax, dx ; jne 0x4914a7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447082 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004a7905 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a7976 ; salc ; retf
0x000000000042ff0a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004358aa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000483317 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000416e32 : in eax, dx ; ret
0x000000000045554f : in eax, dx ; retf
0x00000000004471d2 : in eax, dx ; sub rax, 1 ; ret
0x00000000004474e8 : inc bl ; cmp dl, 1 ; jb 0x4474fa ; mov byte ptr [rdi], cl ; ret
0x0000000000417422 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044b0ac : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000458da5 : inc byte ptr [rbx] ; je 0x458db5 ; ret
0x000000000047f958 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494f8b : inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000494c8b : inc dword ptr [rax + 0x10fff9e5] ; fdivr st(1) ; call rax
0x0000000000494beb : inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x0000000000494d73 : inc dword ptr [rax + 0x13] ; cli ; call rax
0x00000000004952ab : inc dword ptr [rax + 0x33] ; cli ; call rsi
0x0000000000495483 : inc dword ptr [rax + 0x37] ; cli ; call rax
0x0000000000494a8f : inc dword ptr [rax + 0x40fff9b0] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x000000000049486b : inc dword ptr [rax + 0x4a] ; stc ; jmp qword ptr [rax]
0x0000000000496d97 : inc dword ptr [rax + 0x4ffffb74] ; jb 0x496da2 ; call qword ptr [rdi]
0x0000000000494cab : inc dword ptr [rax - 0x1b] ; stc ; call rax
0x0000000000494ca7 : inc dword ptr [rax - 0x1d] ; stc ; inc dword ptr [rax - 0x1b] ; stc ; call rax
0x0000000000494c3b : inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494cd3 : inc dword ptr [rax - 0x27] ; stc ; call qword ptr [rax]
0x0000000000495873 : inc dword ptr [rax - 0x2f000563] ; sahf ; cli ; jmp qword ptr [rax]
0x0000000000494d5f : inc dword ptr [rax - 0x2f00062f] ; sar cl, cl ; jmp qword ptr [rax]
0x0000000000494d0b : inc dword ptr [rax - 0x2f000636] ; retf
0x0000000000494b93 : inc dword ptr [rax - 0x2f00065b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x0000000000494b3f : inc dword ptr [rax - 0x2f000662] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000494d4f : inc dword ptr [rax - 0x34] ; stc ; call qword ptr [rax - 0x1f000633]
0x0000000000494cfb : inc dword ptr [rax - 0x3b] ; stc ; call qword ptr [rax - 0x1f00063a]
0x0000000000494d2f : inc dword ptr [rax - 0x40] ; stc ; call qword ptr [rax]
0x0000000000494a5f : inc dword ptr [rax - 0x48] ; stc ; jmp qword ptr [rax]
0x0000000000494a93 : inc dword ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x0000000000494aaf : inc dword ptr [rax - 0x50] ; stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x00000000004958a3 : inc dword ptr [rax - 0x53] ; cli ; call qword ptr [rax + 0x20fffaae]
0x0000000000494b83 : inc dword ptr [rax - 0x60] ; stc ; call qword ptr [rax - 0x1f00065f]
0x0000000000494be7 : inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x0000000000494c87 : inc dword ptr [rax - 0x7f00061d] ; in eax, 0xf9 ; call qword ptr [rax]
0x000000000046aefd : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045f7b5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494f7b : inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000494fe3 : inc dword ptr [rax] ; add al, 0xfa ; push qword ptr [rax + 3] ; cli ; jmp rax
0x0000000000460de9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045f776 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044893f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042e057 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004951e7 : inc dword ptr [rax] ; add edi, edx ; push qword ptr [rax + 2] ; cli ; call qword ptr [rax]
0x00000000004958ff : inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000495473 : inc dword ptr [rax] ; cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x00000000004958c3 : inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x0000000000494b17 : inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494a9b : inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x0000000000494ab3 : inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x0000000000494853 : inc dword ptr [rax] ; pop rax ; stc ; push qword ptr [rax + 0x59] ; stc ; jmp rax
0x00000000004957cb : inc dword ptr [rax] ; push rbp ; cli ; call qword ptr [rax]
0x0000000000494827 : inc dword ptr [rax] ; stc ; push qword ptr [rax] ; xor bh, cl ; call qword ptr [rax]
0x0000000000494877 : inc dword ptr [rax] ; stc ; push rax ; stc ; jmp rax
0x000000000049529b : inc dword ptr [rax] ; xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x00000000004556c4 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004a5743 : inc dword ptr [rbp + 0x38fffd86] ; jge 0x4a5750 ; jmp qword ptr [rax]
0x000000000047c3cf : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000494f27 : inc dword ptr [rbp + rcx - 6] ; call rsp
0x0000000000482d2c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402e40 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400947 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040da9b : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e9a9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000045a290 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048cba3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045f734 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x00000000004489fd : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044896b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f959 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460b02 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046d859 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x00000000004887a4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000481692 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x00000000004130fb : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x0000000000470281 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x470257
0x000000000049491b : inc dword ptr [rcx - 0x6c] ; stc ; call rcx
0x0000000000452b7e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000455e66 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000045a293 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046e646 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044ad97 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046a46f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000465b7f : inc dword ptr [rcx] ; retf
0x0000000000495357 : inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x0000000000494e5f : inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x0000000000494e4f : inc dword ptr [rdx] ; adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x000000000044027d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000494dbb : inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x00000000004952b3 : inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x0000000000494963 : inc dword ptr [rsi - 0x6b] ; stc ; jmp rsi
0x000000000048e782 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x0000000000494953 : inc dword ptr [rsi] ; xchg eax, ebx ; stc ; call qword ptr [rsi + 0x26fff993]
0x00000000004952e3 : inc dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rsi + 0x26fffa33]
0x0000000000495fff : inc dword ptr [rsp + rdi + 0x3c84fffb] ; sti ; call qword ptr [rax]
0x000000000049626b : inc dword ptr [rsp + rdi + 0x3ceafffb] ; sti ; call rsi
0x000000000049541f : inc dword ptr [rsp + rsi - 6] ; call rsp
0x00000000004957bb : inc eax ; cli ; call rax
0x0000000000495917 : inc eax ; cli ; jmp rax
0x0000000000495947 : inc eax ; idiv dl ; call rax
0x000000000049596f : inc eax ; idiv edx ; call rax
0x00000000004958f3 : inc eax ; int1 ; cli ; jmp rax
0x0000000000494d1b : inc eax ; iretd ; stc ; call qword ptr [rax]
0x0000000000495a3b : inc eax ; sti ; jmp rax
0x0000000000494ba3 : inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000042c9ac : inc ebp ; std ; xlatb ; ret 0xe883
0x00000000004725fc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000446d59 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004952d3 : inc esi ; xor eax, 0x3556fffa ; cli ; jmp rsi
0x0000000000424fdb : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042b774 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004aa1fe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004ac344 : insb byte ptr [rdi], dx ; pop rsi ; cmc ; call qword ptr [rcx]
0x000000000045dec5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004a95c6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000044988e : insb byte ptr [rdi], dx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000495530 : insb byte ptr [rdi], dx ; sub dl, bh ; call qword ptr [rdx]
0x0000000000424cf0 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453836 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000040a4af : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424beb : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000490732 : insd dword ptr [rdi], dx ; js 0x4907af ; ret 0x8b48
0x00000000004aa1ff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a85ad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000413264 : insd dword ptr [rdi], dx ; sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004a94bf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000468b4a : int 0x80
0x00000000004748b6 : int1 ; call rbx
0x00000000004958c5 : int1 ; cli ; call qword ptr [rax]
0x00000000004958fd : int1 ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x00000000004958f1 : int1 ; cli ; inc eax ; int1 ; cli ; jmp rax
0x00000000004958c9 : int1 ; cli ; jmp qword ptr [rax]
0x00000000004958f5 : int1 ; cli ; jmp rax
0x00000000004b13c1 : int1 ; hlt ; jmp qword ptr [rbx]
0x000000000044746b : int1 ; jl 0x4474bc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044748c : int1 ; jl 0x4474dd ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044749f : int1 ; jl 0x4474f0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447574 : int1 ; jl 0x4475c5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004475cc : int1 ; jl 0x44761d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000447669 : int1 ; jl 0x4476ba ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004488f5 : int1 ; jmp rcx
0x000000000047235b : int1 ; jne 0x472356 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047ee57 : int1 ; jne 0x47ee34 ; ret
0x00000000004a9484 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000448a19 : int1 ; mov eax, eax ; ret
0x000000000043529b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004306cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446833 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000448a00 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000043938b : int1 ; ret
0x00000000004a9bd6 : int1 ; ret 0x5803
0x000000000044ca4b : int1 ; retf 0x26
0x00000000004b23e1 : int1 ; std ; call rdx
0x0000000000446837 : int1 ; sub eax, edx ; ret
0x0000000000400946 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000494d1d : iretd ; stc ; call qword ptr [rax]
0x000000000040637d : ja 0x40635e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004391a3 : ja 0x4391a7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444987 : ja 0x44498d ; ret
0x00000000004449a3 : ja 0x4449ad ; mov dword ptr [rdi], ecx ; ret
0x00000000004449e4 : ja 0x4449f3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a69 : ja 0x444a7d ; ret
0x0000000000444abf : ja 0x444ad7 ; ret
0x0000000000444b41 : ja 0x444b5d ; ret
0x0000000000444fa7 : ja 0x444fb1 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444fc3 : ja 0x444fd1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000445014 : ja 0x445027 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004450f9 : ja 0x445111 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000044516f : ja 0x44518b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000004451f1 : ja 0x445211 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000447774 : ja 0x4477a5 ; jb 0x447786 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ad4 : ja 0x447b1a ; jb 0x447ae6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447f24 : ja 0x447f82 ; jb 0x447f36 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004484f3 : ja 0x448510 ; jb 0x4484ff ; mov byte ptr [rdi], cl ; ret
0x0000000000448661 : ja 0x448698 ; jb 0x448670 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448829 : ja 0x44886e ; jb 0x448838 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044980c : ja 0x449838 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449dcb : ja 0x449dd3 ; ret
0x0000000000449e19 : ja 0x449e23 ; ret
0x000000000044a024 : ja 0x44a083 ; ret
0x000000000044a0ba : ja 0x44a0c3 ; ret
0x000000000044a0f7 : ja 0x44a153 ; ret
0x000000000044a18d : ja 0x44a19b ; ret
0x000000000044a1bd : ja 0x44a1cb ; ret
0x000000000044a3c7 : ja 0x44a40b ; ret
0x000000000044a43d : ja 0x44a44b ; ret
0x000000000044abb6 : ja 0x44abc3 ; ret
0x000000000044cfb0 : ja 0x44cfdd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044dcd5 : ja 0x44dd29 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045b9a3 : ja 0x45b9b3 ; ret
0x0000000000466892 : ja 0x466875 ; mov eax, r9d ; ret
0x0000000000475379 : ja 0x475347 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000475bfb : ja 0x475c03 ; ret
0x0000000000475c4f : ja 0x475c5b ; ret
0x0000000000475f70 : ja 0x475f9b ; ret
0x00000000004835ce : ja 0x483620 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048e33d : ja 0x48e346 ; sbb eax, eax ; ret
0x00000000004a9c44 : ja 0x4a9bcb ; ret 0x48f
0x00000000004b033d : ja 0x4b033a ; call rsp
0x00000000004b37fd : ja 0x4b3805 ; add byte ptr [rax + 7], al ; cld ; jmp qword ptr [rax]
0x00000000004b3815 : ja 0x4b381d ; add byte ptr [rax + 0xa], cl ; cld ; jmp qword ptr [rbx]
0x000000000041916d : jae 0x419195 ; movzx eax, byte ptr [rax] ; ret
0x0000000000449d3d : jae 0x449d42 ; ret
0x000000000044aded : jae 0x44adf2 ; ret
0x000000000044ae1d : jae 0x44ae22 ; ret
0x000000000044ae4d : jae 0x44ae52 ; ret
0x000000000044c500 : jae 0x44c505 ; ret
0x000000000044c52d : jae 0x44c532 ; ret
0x000000000044c834 : jae 0x44c823 ; ret
0x00000000004554df : jae 0x45546c ; retf 0xb941
0x000000000045b74e : jae 0x45b795 ; xor eax, eax ; pop rbx ; ret
0x0000000000475b7d : jae 0x475b82 ; ret
0x000000000047f1b0 : jae 0x47f1a3 ; or dl, byte ptr [rbx] ; clc ; dec dword ptr [rbx + rcx*4 + 0x3d] ; retf
0x00000000004800db : jae 0x480085 ; xor eax, eax ; ret
0x0000000000488874 : jae 0x488857 ; mov eax, 1 ; ret
0x0000000000488d2d : jae 0x488d32 ; ret
0x000000000048f2c6 : jae 0x48f2d9 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004a8202 : jae 0x4a81e4 ; jo 0x4a8280 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a909e : jae 0x4a9079 ; push rsi ; pop rdx ; je 0x4a906e ; ret 0xacfc
0x00000000004adb5a : jae 0x4adb68 ; ret
0x0000000000414dc4 : jb 0x414df6 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041e6d7 : jb 0x41e6c1 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042e6da : jb 0x42e6ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e82a : jb 0x42e83a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e97a : jb 0x42e98a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eaca : jb 0x42eada ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec1a : jb 0x42ec2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed6a : jb 0x42ed7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eeba : jb 0x42eeca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f00a : jb 0x42f01a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f15a : jb 0x42f16a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f2aa : jb 0x42f2ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f3fa : jb 0x42f40a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f54a : jb 0x42f55a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f69a : jb 0x42f6aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f7ea : jb 0x42f7fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f93a : jb 0x42f94a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310aa : jb 0x4310ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311fa : jb 0x43120a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043134a : jb 0x43135a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043149a : jb 0x4314aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004315ea : jb 0x4315fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043173a : jb 0x43174a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043188a : jb 0x43189a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004319da : jb 0x4319ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431b2a : jb 0x431b3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c7a : jb 0x431c8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431dca : jb 0x431dda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431f1a : jb 0x431f2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043206a : jb 0x43207a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004321ba : jb 0x4321ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043230a : jb 0x43231a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000438d7e : jb 0x438d8a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004474d5 : jb 0x4474e4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000004474e0 : jb 0x4474f3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004474ed : jb 0x4474f5 ; mov byte ptr [rdi], cl ; ret
0x00000000004476f4 : jb 0x4476fd ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447776 : jb 0x447784 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447775 : jb 0x447785 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ad6 : jb 0x447ae4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447f26 : jb 0x447f34 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004484f5 : jb 0x4484fd ; mov byte ptr [rdi], cl ; ret
0x0000000000448663 : jb 0x44866e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044882b : jb 0x448836 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044aa7d : jb 0x44aa81 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000463e17 : jb 0x463e23 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004791ea : jb 0x4791e9 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000495038 : jb 0x495046 ; cli ; jmp rdx
0x0000000000496d9d : jb 0x496d9c ; call qword ptr [rdi]
0x0000000000496d9c : jb 0x496d9d ; call qword ptr [rdi]
0x0000000000496dbd : jb 0x496dbc ; call qword ptr [rax]
0x00000000004b1f7d : jb 0x4b1f7b ; call rdi
0x0000000000401df4 : jbe 0x401e08 ; syscall
0x00000000004111bf : jbe 0x411212 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042bbe6 : jbe 0x42bc25 ; add rax, rdi ; ret
0x000000000042bbf6 : jbe 0x42bc27 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042bc06 : jbe 0x42bc27 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042bc16 : jbe 0x42bc27 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c027 : jbe 0x42c098 ; add rax, rdi ; vzeroupper ; ret
0x00000000004565b2 : jbe 0x4565ac ; ret
0x00000000004821df : jbe 0x4821eb ; ret
0x0000000000485a91 : jbe 0x485abb ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000491626 : jbe 0x491621 ; clc ; push rbx ; ret
0x00000000004a5661 : jbe 0x4a5662 ; jmp rax
0x00000000004a9adc : jbe 0x4a9aaf ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a9adb : jbe 0x4a9ab0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400aa9 : je 0x400ac0 ; pop rbp ; mov edi, 0x6bbbd0 ; jmp rax
0x0000000000400aeb : je 0x400b00 ; pop rbp ; mov edi, 0x6bbbd0 ; jmp rax
0x0000000000405f4e : je 0x405f5e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000040f6f5 : je 0x40f71f ; add ch, al ; ret
0x0000000000412d0d : je 0x412d38 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000413268 : je 0x41326f ; ret
0x0000000000414b4e : je 0x414b80 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000414e3c : je 0x414e73 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000415bf8 : je 0x415be5 ; retf 0xfffc
0x0000000000415bf7 : je 0x415be6 ; retf 0xfffc
0x0000000000416fe1 : je 0x417010 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x413269
0x0000000000417465 : je 0x417473 ; ret
0x00000000004232e2 : je 0x42330e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004237d3 : je 0x4237e6 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x00000000004239e0 : je 0x42396d ; retf 0x4c89
0x00000000004239df : je 0x42396e ; retf 0x4c89
0x0000000000424c52 : je 0x424c1d ; ret
0x000000000042a9d3 : je 0x42a99d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042b8ba : je 0x42b8c2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042baec : je 0x42bb43 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bdca : je 0x42be21 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c795 : je 0x42c7a7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042ddb7 : je 0x42ddc1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d7f3 : je 0x43d7bd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043f383 : je 0x43f34d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000440b61 : je 0x440b79 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000441184 : je 0x44118f ; bsf eax, edx ; ret
0x000000000044122d : je 0x441246 ; bsf rax, rdx ; ret
0x0000000000447803 : je 0x447824 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000448eae : je 0x448ebc ; xor eax, eax ; ret
0x0000000000448ea9 : je 0x448ec9 ; cmp eax, 2 ; je 0x448ec1 ; xor eax, eax ; ret
0x0000000000448efd : je 0x448ee3 ; ret
0x000000000044a338 : je 0x44a367 ; mov eax, 0x48 ; syscall
0x000000000044ac7a : je 0x44ac81 ; ret
0x000000000044c609 : je 0x44c60e ; ret
0x000000000044c66d : je 0x44c672 ; ret
0x000000000044cebc : je 0x44cecf ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000044dbe8 : je 0x44dbf3 ; ret
0x000000000044dc04 : je 0x44dc19 ; mov dword ptr [rip + 0x26beac], edx ; pop rbx ; ret
0x000000000045186e : je 0x45189d ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000451b8e : je 0x451bbd ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000045231c : je 0x45234b ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045261d : je 0x45264c ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452907 : je 0x452936 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452b46 : je 0x452b75 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004531ae : je 0x4531dc ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453d46 : je 0x453d75 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000454dd2 : je 0x454e01 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004558cb : je 0x4558fa ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000455c73 : je 0x455ca2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004560b7 : je 0x4560e6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004564f2 : je 0x456520 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456ab4 : je 0x456ae3 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456de3 : je 0x456e12 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004572f7 : je 0x457326 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457732 : je 0x457760 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000458da7 : je 0x458db3 ; ret
0x0000000000458da2 : je 0x458db8 ; cmp esi, 3 ; je 0x458db8 ; ret
0x0000000000459b6a : je 0x459b70 ; call rsi
0x0000000000459c66 : je 0x459c6c ; call rax
0x000000000045b06b : je 0x45b071 ; call rax
0x000000000045b62e : je 0x45b63b ; ret
0x00000000004696dc : je 0x469707 ; and byte ptr [rax + 1], cl ; ret
0x00000000004711d6 : je 0x471226 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004711d5 : je 0x471227 ; add esp, 0x20 ; pop rbx ; ret
0x000000000047202c : je 0x472033 ; ret
0x0000000000472049 : je 0x472056 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472083 : je 0x4720e5 ; pop rbp ; pop r12 ; ret
0x000000000047210f : je 0x472171 ; pop rbp ; pop r12 ; ret
0x000000000047229a : je 0x4722c4 ; or al, 0xeb ; ret 0x5590
0x0000000000473e2c : je 0x473e56 ; bsf rax, rdx ; ret
0x00000000004742cb : je 0x4742d3 ; ret
0x00000000004748ae : je 0x4748dd ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000004749d8 : je 0x4749e5 ; test edx, edx ; jne 0x4749d7 ; ret
0x0000000000474e79 : je 0x474e99 ; mov cl, dl ; and cl, 0xf ; je 0x474ea9 ; ret
0x0000000000474e80 : je 0x474ea2 ; ret
0x0000000000474e95 : je 0x474eb6 ; add rax, 2 ; ret
0x0000000000475ddd : je 0x475e0f ; mov eax, 0x101 ; syscall
0x000000000047634a : je 0x476421 ; xor eax, eax ; leave ; ret
0x000000000047eeb6 : je 0x47eec3 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000048168d : je 0x4815df ; sub eax, r8d ; ret
0x00000000004857c2 : je 0x4857d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485cc8 : je 0x485cf3 ; or byte ptr [rax + 1], cl ; ret
0x00000000004884a6 : je 0x4884b3 ; ret
0x000000000048b22d : je 0x48b258 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d7c8 : je 0x48d7b2 ; add rsp, 0x18 ; ret
0x000000000048d7b1 : je 0x48d7d6 ; add rsp, 0x18 ; ret
0x000000000048d858 : je 0x48d838 ; ret
0x000000000048d899 : je 0x48d8a6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048fb8a : je 0x48fb93 ; ret
0x000000000048fbc3 : je 0x48fbd4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48fbd9 ; ret
0x000000000048fc9a : je 0x48fca3 ; ret
0x0000000000491433 : je 0x49143e ; call rax
0x00000000004955f8 : je 0x49562c ; cli ; jmp rsp
0x0000000000496d99 : je 0x496d9c ; dec dword ptr [rdi + 0x72] ; sti ; call qword ptr [rdi]
0x00000000004a56a1 : je 0x4a56a2 ; call rax
0x00000000004a760c : je 0x4a763a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a8368 : je 0x4a8333 ; xor al, 0xd8 ; ret
0x00000000004a90a2 : je 0x4a906a ; ret 0xacfc
0x00000000004b03b0 : je 0x4b03fc ; add byte ptr [rax], al ; or al, 0x80 ; stc ; call qword ptr [rdx]
0x00000000004b1fc1 : je 0x4b1fbf ; call qword ptr [rsi]
0x0000000000417462 : jg 0x4174a2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004302b9 : jg 0x43030c ; ret
0x0000000000430300 : jg 0x430350 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000430305 : jg 0x430358 ; retf
0x000000000043033f : jg 0x43038a ; ret
0x000000000043037f : jg 0x4303ca ; retf
0x00000000004304b9 : jg 0x43050c ; ret 0x894c
0x0000000000430500 : jg 0x430550 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000430505 : jg 0x430558 ; retf 0x894c
0x000000000043053f : jg 0x43058a ; ret 0x894c
0x000000000043057b : jg 0x4305c6 ; retf 0x894c
0x0000000000432c89 : jg 0x432cdc ; ret
0x0000000000432cd0 : jg 0x432d20 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000432cd5 : jg 0x432d28 ; retf
0x0000000000432d0f : jg 0x432d5a ; ret
0x0000000000432d4f : jg 0x432d9a ; retf
0x0000000000432e89 : jg 0x432edc ; ret 0x894c
0x0000000000432ed0 : jg 0x432f20 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000432ed5 : jg 0x432f28 ; retf 0x894c
0x0000000000432f0f : jg 0x432f5a ; ret 0x894c
0x0000000000432f4b : jg 0x432f96 ; retf 0x894c
0x0000000000435278 : jg 0x4352c9 ; loope 0x435277 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004352ef : jg 0x43533a ; ret 0xff2
0x0000000000435308 : jg 0x435359 ; loop 0x435307 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043537f : jg 0x4353ca ; ret
0x0000000000435398 : jg 0x4353e9 ; jrcxz 0x435397 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435428 : jg 0x435479 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004354a8 : jg 0x4354f9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435528 : jg 0x435579 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004355a8 : jg 0x4355f9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435705 : jg 0x435755 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043570f : jg 0x43575a ; retf 0xff2
0x0000000000435785 : jg 0x4357d5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043578f : jg 0x4357da ; retf
0x0000000000435828 : jg 0x435879 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004358a8 : jg 0x4358f9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435938 : jg 0x435989 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004359b8 : jg 0x435a09 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435a2c : jg 0x435a37 ; ret
0x0000000000435a86 : jg 0x435a99 ; ret
0x0000000000435a81 : jg 0x435ad1 ; psllq mm1, qword ptr [rdi] ; jg 0x435a9e ; ret
0x0000000000435af6 : jg 0x435b09 ; ret
0x0000000000435b66 : jg 0x435b79 ; ret
0x0000000000435b61 : jg 0x435bb1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435bd6 : jg 0x435be9 ; ret
0x0000000000435bd1 : jg 0x435c21 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435c46 : jg 0x435c59 ; ret
0x0000000000435c41 : jg 0x435c91 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435cb6 : jg 0x435cc9 ; ret
0x0000000000435cb1 : jg 0x435d01 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d26 : jg 0x435d39 ; ret
0x0000000000435d21 : jg 0x435d71 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d96 : jg 0x435da9 ; ret
0x0000000000435d91 : jg 0x435de1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435e06 : jg 0x435e19 ; ret
0x0000000000435e76 : jg 0x435e89 ; ret
0x0000000000435ee6 : jg 0x435ef9 ; ret
0x0000000000435ee1 : jg 0x435f31 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435f56 : jg 0x435f69 ; ret
0x0000000000435f51 : jg 0x435fa1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435fc6 : jg 0x435fd9 ; ret
0x0000000000435fc1 : jg 0x436011 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436036 : jg 0x436049 ; ret
0x0000000000436031 : jg 0x436081 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004360a6 : jg 0x4360b9 ; ret
0x00000000004360a1 : jg 0x4360f1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437d98 : jg 0x437de9 ; loope 0x437d97 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437e0f : jg 0x437e5a ; ret 0xff2
0x0000000000437e28 : jg 0x437e79 ; loop 0x437e27 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437e9f : jg 0x437eea ; ret
0x0000000000437eb8 : jg 0x437f09 ; jrcxz 0x437eb7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437f48 : jg 0x437f99 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437fc8 : jg 0x438019 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438048 : jg 0x438099 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004380c8 : jg 0x438119 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438225 : jg 0x438275 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043822f : jg 0x43827a ; retf 0xff2
0x00000000004382a5 : jg 0x4382f5 ; mov ebx, 0x46f00ff2 ; retf
0x00000000004382af : jg 0x4382fa ; retf
0x0000000000438348 : jg 0x438399 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004383c8 : jg 0x438419 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438458 : jg 0x4384a9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004384d8 : jg 0x438529 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043854c : jg 0x438557 ; ret
0x00000000004385a6 : jg 0x4385b9 ; ret
0x00000000004385a1 : jg 0x4385f1 ; psllq mm1, qword ptr [rdi] ; jg 0x4385be ; ret
0x0000000000438616 : jg 0x438629 ; ret
0x0000000000438686 : jg 0x438699 ; ret
0x0000000000438681 : jg 0x4386d1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004386f6 : jg 0x438709 ; ret
0x00000000004386f1 : jg 0x438741 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438766 : jg 0x438779 ; ret
0x0000000000438761 : jg 0x4387b1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004387d6 : jg 0x4387e9 ; ret
0x00000000004387d1 : jg 0x438821 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438846 : jg 0x438859 ; ret
0x0000000000438841 : jg 0x438891 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004388b6 : jg 0x4388c9 ; ret
0x00000000004388b1 : jg 0x438901 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438926 : jg 0x438939 ; ret
0x0000000000438996 : jg 0x4389a9 ; ret
0x0000000000438a06 : jg 0x438a19 ; ret
0x0000000000438a01 : jg 0x438a51 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438a76 : jg 0x438a89 ; ret
0x0000000000438a71 : jg 0x438ac1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438ae6 : jg 0x438af9 ; ret
0x0000000000438ae1 : jg 0x438b31 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438b56 : jg 0x438b69 ; ret
0x0000000000438b51 : jg 0x438ba1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438bc6 : jg 0x438bd9 ; ret
0x0000000000438bc1 : jg 0x438c11 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438d24 : jg 0x438d35 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438d38 : jg 0x438d49 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004391aa : jg 0x4391a6 ; ret
0x0000000000444a56 : jg 0x444a61 ; ret
0x0000000000444a66 : jg 0x444a74 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444a7a : jg 0x444a89 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444a99 : jg 0x444aa7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444aa9 : jg 0x444ab7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444ab9 : jg 0x444aca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444ada : jg 0x444ae9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444afa : jg 0x444b09 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444b1a : jg 0x444b29 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444b3a : jg 0x444b4c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444b7d : jg 0x444b8f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444b9d : jg 0x444baf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444bbb : jg 0x444bcb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444bdb : jg 0x444beb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444bfb : jg 0x444c0b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000444c1b : jg 0x444c2b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004450e6 : jg 0x4450f5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004450f6 : jg 0x445108 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000445129 : jg 0x44513b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000445149 : jg 0x44515b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000044526f : jg 0x4452cf ; or eax, 0x1c478d48 ; ret
0x00000000004474b7 : jg 0x4474c7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004474ad : jg 0x4474cd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447944 : jg 0x44797c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447a12 : jg 0x447a4a ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447aea : jg 0x447afb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447c7b : jg 0x447ca5 ; vzeroupper ; ret
0x0000000000447d22 : jg 0x447d2c ; vzeroupper ; ret
0x0000000000447dae : jg 0x447dd8 ; vzeroupper ; ret
0x0000000000447e3e : jg 0x447e48 ; vzeroupper ; ret
0x0000000000447f52 : jg 0x447f63 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448136 : jg 0x448160 ; vzeroupper ; ret
0x0000000000448135 : jg 0x448161 ; vzeroupper ; ret
0x00000000004481fc : jg 0x448206 ; vzeroupper ; ret
0x00000000004481fb : jg 0x448207 ; vzeroupper ; ret
0x00000000004482cf : jg 0x4482f9 ; vzeroupper ; ret
0x00000000004482ce : jg 0x4482fa ; vzeroupper ; ret
0x00000000004483a2 : jg 0x4483ac ; vzeroupper ; ret
0x00000000004483a1 : jg 0x4483ad ; vzeroupper ; ret
0x000000000044840c : jg 0x448417 ; ret
0x000000000044845c : jg 0x448467 ; ret
0x00000000004484d3 : jg 0x44851f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000448564 : jg 0x448572 ; vzeroupper ; ret
0x00000000004485b4 : jg 0x4485c2 ; vzeroupper ; ret
0x0000000000448673 : jg 0x448681 ; vzeroupper ; ret
0x00000000004486f1 : jg 0x4486ff ; vzeroupper ; ret
0x00000000004486f0 : jg 0x448700 ; vzeroupper ; ret
0x0000000000448751 : jg 0x44875f ; vzeroupper ; ret
0x0000000000448750 : jg 0x448760 ; vzeroupper ; ret
0x000000000044883b : jg 0x448849 ; vzeroupper ; ret
0x0000000000448849 : jg 0x448857 ; vzeroupper ; ret
0x00000000004488a0 : jg 0x4488dd ; ret 0x2b77
0x00000000004489bb : jg 0x448988 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448a17 : jg 0x448a15 ; int1 ; mov eax, eax ; ret
0x000000000044dbfa : jg 0x44dc02 ; add byte ptr [rcx], bh ; ret
0x000000000044dc19 : jg 0x44dc23 ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000044eb56 : jg 0x44eadd ; retf
0x00000000004546c8 : jg 0x454655 ; ret 0xdb76
0x00000000004546c8 : jg 0x454659 ; ret 0xdb76
0x000000000045fa82 : jg 0x45fa9b ; test byte ptr [rip - 0x7c000011], al ; ret
0x000000000046a052 : jg 0x46a06b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046b4ca : jg 0x46b4e3 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046b5c7 : jg 0x46b5e0 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000047fb47 : jg 0x47fb59 ; test rdi, rdi ; jne 0x47fb28 ; ret
0x000000000048b078 : jg 0x48b082 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040e4ea : jge 0x40e4f3 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044af45 : jge 0x44af4a ; call r12
0x000000000044af6d : jge 0x44af72 ; call r12
0x000000000044b45d : jge 0x44b40d ; mov r12d, r14d ; call r15
0x000000000044babd : jge 0x44bac2 ; call r12
0x000000000044bae9 : jge 0x44baee ; call r12
0x000000000044bb1d : jge 0x44bb22 ; call r12
0x000000000044bb4d : jge 0x44bb52 ; call r12
0x000000000044bb75 : jge 0x44bb7a ; call r12
0x000000000044bba5 : jge 0x44bbaa ; call r12
0x00000000004781bf : jge 0x478168 ; clc ; dec dword ptr [rbp + rcx*4 + 0xd] ; retf 2
0x000000000048dc12 : jge 0x48dc0f ; leave ; ret
0x000000000048dd90 : jge 0x48dd93 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dedc : jge 0x48ded9 ; leave ; ret
0x000000000048df28 : jge 0x48df2b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e0b7 : jge 0x48e0ba ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e217 : jge 0x48e214 ; leave ; ret
0x000000000048e268 : jge 0x48e26b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a5749 : jge 0x4a574a ; jmp qword ptr [rax]
0x00000000004a766a : jge 0x4a764b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a8fb4 : jge 0x4a9025 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000040175f : jl 0x40178d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000405026 : jl 0x405051 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040da18 : jl 0x40da43 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000417932 : jl 0x41794e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041c5b6 : jl 0x41c5e0 ; adc al, ch ; retf 0xfe3e
0x000000000041f38b : jl 0x41f385 ; ret 0x7508
0x0000000000422c37 : jl 0x422c67 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000422c36 : jl 0x422c68 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000438ca4 : jl 0x438cf3 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438ce0 : jl 0x438d2f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438ede : jl 0x438f2d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439045 : jl 0x439094 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004391a7 : jl 0x4391f6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000044746c : jl 0x4474bb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044748d : jl 0x4474dc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004474a0 : jl 0x4474ef ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447575 : jl 0x4475c4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004475cd : jl 0x44761c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000044766a : jl 0x4476b9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448020 : jl 0x44803f ; cld ; vzeroupper ; ret
0x000000000044a707 : jl 0x44a732 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044b022 : jl 0x44b050 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451481 : jl 0x4514af ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000453768 : jl 0x453796 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000453d4b : jl 0x453d75 ; call r15
0x000000000045479a : jl 0x4547c8 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004560bc : jl 0x4560e6 ; call r15
0x00000000004564f7 : jl 0x456520 ; call rbx
0x00000000004565ad : jl 0x4565da ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000456cdd : jl 0x456d07 ; or al, 0xe9 ; ret
0x00000000004572fc : jl 0x457326 ; call r15
0x0000000000457737 : jl 0x457760 ; call rbx
0x00000000004577ed : jl 0x45781a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045bb97 : jl 0x45bbc2 ; and byte ptr [rax + 1], cl ; ret
0x000000000045c00e : jl 0x45c039 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045c356 : jl 0x45c381 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000466c10 : jl 0x466c3f ; or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x0000000000467d1b : jl 0x467d48 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000469405 : jl 0x469430 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000475d4f : jl 0x475d7d ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047bd45 : jl 0x47bd70 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000482d35 : jl 0x482d63 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000488b80 : jl 0x488bad ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000495819 : jl 0x495817 ; call rax
0x00000000004a4680 : jl 0x4a463f ; cld ; dec esp ; mov dh, 0xfc ; call rax
0x00000000004a91b2 : jl 0x4a9211 ; leave ; retf
0x00000000004b5a14 : jl 0x4b5a4c ; std ; jmp rsp
0x0000000000414198 : jle 0x4141ca ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000414197 : jle 0x4141cb ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004411ce : jle 0x4411d8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000447341 : jle 0x44737d ; movsxd rax, ecx ; ret
0x0000000000458df2 : jle 0x458e05 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004a7662 : jle 0x4a75fb ; xlatb ; retf 0xa1eb
0x00000000004a9225 : jle 0x4a9260 ; pop rsp ; sbb ebp, ebx ; retf
0x0000000000485835 : jmp 0x402242
0x00000000004150b2 : jmp 0x415078
0x0000000000424195 : jmp 0x424163
0x0000000000424923 : jmp 0x4248f1
0x000000000042cec8 : jmp 0x42ce96
0x000000000042cf46 : jmp 0x42cf14
0x000000000042d3d8 : jmp 0x42d3a6
0x000000000042d456 : jmp 0x42d424
0x00000000004409a4 : jmp 0x44096a
0x0000000000440bbc : jmp 0x440b82
0x000000000044702e : jmp 0x446ff4
0x00000000004470ff : jmp 0x4470c5
0x000000000044716e : jmp 0x447134
0x0000000000448cb8 : jmp 0x448c86
0x000000000046b248 : jmp 0x46b20e
0x000000000046bd83 : jmp 0x46bd51
0x0000000000470285 : jmp 0x470253
0x0000000000472c23 : jmp 0x472be9
0x00000000004862fa : jmp 0x4862c0
0x00000000004a9229 : jmp 0x4a91f7
0x00000000004a9776 : jmp 0x4a9744
0x0000000000439383 : jmp 0x66439954
0x0000000000419033 : jmp 0xffffffffc341ba4c
0x00000000004835d1 : jmp 0xffffffffc357bf26
0x000000000047c139 : jmp 0xffffffffeb0983c9
0x0000000000475b13 : jmp 0xfffffffff6791da3
0x00000000004951a3 : jmp qword ptr [rax + 0x10fffa03]
0x0000000000494fb7 : jmp qword ptr [rax + 0x10fffa09]
0x00000000004951db : jmp qword ptr [rax + 0x20fffa04]
0x00000000004951d3 : jmp qword ptr [rax + 0x20fffa05]
0x00000000004951cb : jmp qword ptr [rax + 0x20fffa06]
0x00000000004951c3 : jmp qword ptr [rax + 0x20fffa07]
0x00000000004951bb : jmp qword ptr [rax + 0x20fffa08]
0x00000000004abc0f : jmp qword ptr [rax + rdx + 0x10d4fffe]
0x000000000049479b : jmp qword ptr [rax - 0x1f0006e9]
0x000000000049478b : jmp qword ptr [rax - 0x1f0006ee]
0x000000000049477b : jmp qword ptr [rax - 0x1f0006f3]
0x000000000040e8f1 : jmp qword ptr [rax]
0x00000000004a5643 : jmp qword ptr [rbx - 0x2f00027b]
0x000000000047b267 : jmp qword ptr [rbx]
0x00000000004948ff : jmp qword ptr [rcx + 0x21fff990]
0x0000000000494907 : jmp qword ptr [rcx + 0x21fff991]
0x000000000049490f : jmp qword ptr [rcx + 0x21fff992]
0x0000000000494903 : jmp qword ptr [rcx]
0x000000000049308b : jmp qword ptr [rdi]
0x0000000000494e2f : jmp qword ptr [rdx + 0x12fffa0c]
0x000000000048d1c7 : jmp qword ptr [rdx]
0x00000000004948ef : jmp qword ptr [rip - 0x2e000673]
0x000000000044d99c : jmp qword ptr [rsi]
0x00000000004abbd3 : jmp qword ptr [rsp + rcx + 0x10d4fffe]
0x000000000044d9c6 : jmp qword ptr ss:[rsi]
0x00000000004250a9 : jmp r10
0x0000000000480800 : jmp r11
0x000000000042e0ad : jmp r9
0x0000000000400ab1 : jmp rax
0x0000000000480801 : jmp rbx
0x0000000000422e52 : jmp rcx
0x000000000040db2e : jmp rdi
0x000000000040d845 : jmp rdx
0x000000000045a967 : jmp rsi
0x000000000046de9d : jmp rsp
0x0000000000400595 : jne 0x40059a ; ret
0x000000000040639c : jne 0x4063b0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040e0c8 : jne 0x40e0a6 ; ret
0x000000000040e1bb : jne 0x40e1e5 ; add rsp, 0x118 ; ret
0x000000000040fd41 : jne 0x40fd54 ; add rsp, 0xd8 ; ret
0x000000000040fdf2 : jne 0x40fe05 ; add rsp, 0xd8 ; ret
0x0000000000415185 : jne 0x415193 ; ret
0x0000000000416db8 : jne 0x416e0c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416e31 : jne 0x416e23 ; ret
0x0000000000417d4e : jne 0x417d43 ; ret
0x0000000000418381 : jne 0x418347 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004183cc : jne 0x4183c5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000418ce6 : jne 0x418cdb ; ret
0x000000000041a940 : jne 0x41a94f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042003c : jne 0x420003 ; ret
0x0000000000423319 : jne 0x4230a2 ; call 0x41f608
0x000000000042354a : jne 0x4234d1 ; ret
0x0000000000423857 : jne 0x423846 ; sub rax, 0x10 ; ret
0x00000000004266fc : jne 0x4266e6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042bb97 : jne 0x42bbf4 ; xor eax, eax ; ret
0x000000000042bb67 : jne 0x42bc18 ; xor eax, eax ; ret
0x000000000042c013 : jne 0x42c037 ; xor eax, eax ; vzeroupper ; ret
0x000000000042c74a : jne 0x42c755 ; vzeroupper ; ret
0x000000000042c844 : jne 0x42c756 ; ret
0x000000000042c98f : jne 0x42c759 ; vzeroupper ; ret
0x000000000042dffd : jne 0x42e027 ; xor eax, eax ; ret
0x000000000042d5f1 : jne 0x42e02b ; xor eax, eax ; ret
0x000000000042d619 : jne 0x42e037 ; xor eax, eax ; ret
0x00000000004453d5 : jne 0x445366 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004453a7 : jne 0x445366 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004453a6 : jne 0x445367 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000446b34 : jne 0x446d48 ; xor eax, eax ; ret
0x0000000000446d39 : jne 0x446d59 ; xor eax, eax ; ret
0x0000000000446be1 : jne 0x446d5d ; xor eax, eax ; ret
0x0000000000446d51 : jne 0x446d5e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000446e61 : jne 0x446e52 ; ret
0x0000000000446f11 : jne 0x446f02 ; ret
0x0000000000447081 : jne 0x447076 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004471d1 : jne 0x4471c6 ; sub rax, 1 ; ret
0x00000000004484dd : jne 0x4484c6 ; ret
0x0000000000448644 : jne 0x44862c ; vzeroupper ; ret
0x0000000000448807 : jne 0x4487e7 ; vzeroupper ; ret
0x0000000000448cb2 : jne 0x448be7 ; jmp 0x448c8c
0x0000000000448fdf : jne 0x44900b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449d97 : jne 0x449daf ; add rsp, 0x28 ; ret
0x0000000000449fc7 : jne 0x44a011 ; add rsp, 0x58 ; ret
0x000000000044a018 : jne 0x44a034 ; xor eax, eax ; syscall
0x000000000044a0e8 : jne 0x44a107 ; mov eax, 1 ; syscall
0x000000000044a225 : jne 0x44a28f ; mov eax, 0x48 ; syscall
0x000000000044a357 : jne 0x44a3a9 ; add rsp, 0x68 ; ret
0x000000000044a3b8 : jne 0x44a3d7 ; mov eax, 3 ; syscall
0x000000000044ace6 : jne 0x44acfd ; add rsp, 0x28 ; ret
0x000000000044af1b : jne 0x44af36 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044af41 : jne 0x44af87 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af69 : jne 0x44afa7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba86 : jne 0x44baae ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bab9 : jne 0x44bb07 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bae5 : jne 0x44bb67 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bb71 : jne 0x44bbd8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bba1 : jne 0x44bc09 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c5b2 : jne 0x44c5a9 ; pop rdx ; pop r10 ; ret
0x000000000044c5a2 : jne 0x44c5b4 ; nop ; mov eax, 0xca ; syscall
0x000000000044f75f : jne 0x44f6f3 ; call rsi
0x000000000045b6bf : jne 0x45b6cc ; add rsp, 0x18 ; ret
0x000000000045b907 : jne 0x45b95c ; add rsp, 0x148 ; ret
0x0000000000469302 : jne 0x469315 ; add rsp, 0xd8 ; ret
0x0000000000471111 : jne 0x471103 ; ret
0x000000000047235c : jne 0x472355 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000473d23 : jne 0x473d2e ; xor rax, rax ; ret
0x0000000000474123 : jne 0x474158 ; mov rax, r8 ; vzeroupper ; ret
0x00000000004749dc : jne 0x4749d3 ; ret
0x00000000004749e3 : jne 0x4749ee ; xor rax, rax ; ret
0x0000000000474c7b : jne 0x474c36 ; mov rax, rdx ; ret
0x0000000000475cc7 : jne 0x475d2d ; mov eax, 0x101 ; syscall
0x0000000000475dfc : jne 0x475e49 ; add rsp, 0x58 ; ret
0x0000000000475e7f : jne 0x475e92 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000475f2e : jne 0x475f51 ; add rsp, 0x38 ; ret
0x00000000004792bf : jne 0x479338 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047ee6a : jne 0x47ee10 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047ee58 : jne 0x47ee33 ; ret
0x000000000047faf7 : jne 0x47fb11 ; mov rax, qword ptr [rip + 0x23d8d0] ; ret
0x000000000047fb4c : jne 0x47fb23 ; ret
0x0000000000481609 : jne 0x4815e1 ; movsx eax, cl ; neg eax ; ret
0x00000000004823da : jne 0x4823e9 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004824d5 : jne 0x482509 ; add rsp, 0x38 ; ret
0x0000000000482595 : jne 0x4825c4 ; add rsp, 0x68 ; ret
0x00000000004826f6 : jne 0x482734 ; add rsp, 0x78 ; ret
0x00000000004829c5 : jne 0x4829f4 ; add rsp, 0x68 ; ret
0x0000000000484a01 : jne 0x484a41 ; leave ; ret
0x0000000000484ea1 : jne 0x484e8d ; mov rax, rsi ; ret
0x0000000000484f25 : jne 0x484f05 ; mov rax, rsi ; ret
0x00000000004856ad : jne 0x4856ba ; add rsp, 0x38 ; ret
0x0000000000485790 : jne 0x4857aa ; add rsp, 0x38 ; ret
0x0000000000487ec6 : jne 0x487ef0 ; ret
0x0000000000487ec5 : jne 0x487ef1 ; ret
0x0000000000487f7b : jne 0x487f82 ; pop rbx ; ret
0x0000000000488b0b : jne 0x488b22 ; add rsp, 0x38 ; ret
0x0000000000488c19 : jne 0x488c33 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488d00 : jne 0x488d1b ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048b629 : jne 0x48b64c ; xor eax, eax ; ret
0x000000000048b611 : jne 0x48b651 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d840 : jne 0x48d861 ; mov rax, qword ptr [rax] ; ret
0x000000000048d8af : jne 0x48d8ba ; mov qword ptr [rax], rdx ; ret
0x000000000048dc0e : jne 0x48dc07 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048ded8 : jne 0x48ded1 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e213 : jne 0x48e20c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e764 : jne 0x48e783 ; ret
0x000000000048e784 : jne 0x48e79c ; mov eax, 8 ; ret
0x000000000048e7af : jne 0x48e7de ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e7c9 : jne 0x48e7e2 ; xor eax, eax ; ret
0x000000000048f60f : jne 0x48f63e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f629 : jne 0x48f642 ; xor eax, eax ; ret
0x000000000048fbc9 : jne 0x48fbd3 ; ret
0x000000000048fbe4 : jne 0x48fbf3 ; ret
0x000000000048fe14 : jne 0x48fe23 ; ret
0x0000000000490099 : jne 0x4900bc ; xor eax, eax ; ret
0x0000000000490665 : jne 0x490658 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004906b0 : jne 0x490690 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004907f5 : jne 0x4907db ; pop rbx ; ret
0x0000000000490903 : jne 0x4908ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004914bd : jne 0x4914a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491641 : jne 0x491658 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a76d7 : jne 0x4a76a1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a966b : jne 0x4a9692 ; retf 0x32dd
0x00000000004b35ed : jne 0x4b35f5 ; add byte ptr [rax], ah ; stc ; sti ; jmp qword ptr [rbx]
0x00000000004b3605 : jne 0x4b360d ; add byte ptr [rax], bh ; stc ; sti ; jmp qword ptr [rbx]
0x000000000042d8ae : jno 0x42d8bd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438ca0 : jno 0x438ca9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438eda : jno 0x438ee3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000439041 : jno 0x439052 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004391a6 : jno 0x43922a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000004792c0 : jno 0x4792bf ; dec dword ptr [rax - 0x77] ; ret
0x00000000004834c4 : jno 0x483516 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000496d65 : jno 0x496d64 ; jmp rdx
0x0000000000496d61 : jno 0x496d64 ; ljmp ptr [rdx] ; jno 0x496d68 ; jmp rdx
0x0000000000424fb1 : jnp 0x424fe5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004854f4 : jnp 0x48551d ; add cl, ch ; retf
0x00000000004a7902 : jnp 0x4a7950 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a7979 ; salc ; retf
0x00000000004a8085 : jnp 0x4a8042 ; ret
0x00000000004a9082 : jnp 0x4a90e0 ; retf
0x00000000004a9489 : jnp 0x4a94d6 ; retf 0x99e0
0x00000000004aa0e9 : jnp 0x4aa12a ; retf
0x00000000004b3c15 : jnp 0x4b3c1d ; add byte ptr [rax + 0x1f], bl ; cld ; jmp qword ptr [rcx]
0x0000000000424c4f : jns 0x424c57 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438ca7 : jns 0x438caa ; ret
0x0000000000438ee1 : jns 0x438ee4 ; ret
0x0000000000439048 : jns 0x439053 ; ret
0x000000000043f4d7 : jns 0x43f4b2 ; retf 0xead3
0x000000000043f627 : jns 0x43f602 ; retf 0xead3
0x000000000043f777 : jns 0x43f752 ; retf 0xead3
0x000000000043f8c7 : jns 0x43f8a2 ; retf 0xead3
0x000000000043fa17 : jns 0x43f9f2 ; retf 0xead3
0x000000000043fb67 : jns 0x43fb42 ; retf 0xead3
0x000000000043fcb7 : jns 0x43fc92 ; retf 0xead3
0x000000000043fe07 : jns 0x43fde2 ; retf 0xead3
0x000000000043ff57 : jns 0x43ff32 ; retf 0xead3
0x00000000004400a7 : jns 0x440082 ; retf 0xead3
0x00000000004401f7 : jns 0x4401d2 ; retf 0xead3
0x0000000000440347 : jns 0x440322 ; retf 0xead3
0x0000000000440497 : jns 0x440472 ; retf 0xead3
0x00000000004405e7 : jns 0x4405c2 ; retf 0xead3
0x0000000000440737 : jns 0x440712 ; retf 0xead3
0x000000000044bae6 : jns 0x44bb36 ; mov edi, dword ptr [rbp] ; call r12
0x000000000048b4fe : jns 0x48b50b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d7ae : jns 0x48d7f1 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048e51e : jns 0x48e52b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000049011e : jns 0x49012b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a718e : jns 0x4a7124 ; ret 0xf869
0x00000000004a718d : jns 0x4a7125 ; ret 0xf869
0x00000000004b399d : jns 0x4b39a5 ; add byte ptr [rax], ah ; adc ah, bh ; jmp qword ptr [rax]
0x0000000000414fa4 : jo 0x414ff5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414fd4 : jo 0x415025 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c842 : jo 0x44c866 ; ret
0x0000000000453640 : jo 0x45364a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004693c4 : jo 0x4693c4 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000047118a : jo 0x4711a2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000474396 : jo 0x4743f8 ; pop rbp ; pop r12 ; ret
0x00000000004745ad : jo 0x47460f ; pop rbp ; pop r12 ; ret
0x00000000004828b4 : jo 0x48291a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000494858 : jo 0x4948b6 ; stc ; jmp rax
0x0000000000494ba0 : jo 0x494b52 ; stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x0000000000494d18 : jo 0x494cef ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x0000000000494f70 : jo 0x494f81 ; cli ; jmp rax
0x0000000000494fe8 : jo 0x494ff0 ; cli ; jmp rax
0x00000000004951ec : jo 0x4951f3 ; cli ; call qword ptr [rax]
0x0000000000495834 : jo 0x4957c2 ; cli ; call qword ptr [rax]
0x0000000000495854 : jo 0x4957ef ; cli ; call qword ptr [rax]
0x00000000004967cc : jo 0x49683f ; sti ; dec dword ptr [rax + 0x6a] ; sti ; jmp qword ptr [rax]
0x00000000004a7908 : jo 0x4a7973 ; salc ; retf
0x00000000004a8204 : jo 0x4a827e ; mov ebp, 0xfb67d10d ; ret
0x00000000004ac2ac : jo 0x4ac2b7 ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], bl ; call qword ptr [rcx]
0x00000000004af484 : jo 0x4af48b ; ret 0xa01
0x00000000004b0020 : jo 0x4affda ; clc ; call qword ptr [rax]
0x00000000004b0490 : jo 0x4b0417 ; stc ; call qword ptr [rbx]
0x00000000004b4775 : jo 0x4b477c ; retf
0x0000000000433671 : jp 0x4336a0 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004577f2 : jp 0x4577ec ; ret
0x00000000004a8393 : jp 0x4a834d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000400d5c : jrcxz 0x400d62 ; add cl, cl ; ret
0x000000000043539a : jrcxz 0x435395 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435399 : jrcxz 0x435396 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437eba : jrcxz 0x437eb5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437eb9 : jrcxz 0x437eb6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044c603 : jrcxz 0x44c5c8 ; cmp r11d, 0xa ; je 0x44c614 ; ret
0x0000000000468c4f : jrcxz 0x468c55 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000468c4e : jrcxz 0x468c56 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047df33 : jrcxz 0x47dfb6 ; add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x00000000004801ee : jrcxz 0x48023c ; mov esi, ebx ; syscall
0x0000000000490904 : jrcxz 0x490966 ; pop rbp ; pop r12 ; ret
0x0000000000494ca9 : jrcxz 0x494caa ; inc dword ptr [rax - 0x1b] ; stc ; call rax
0x0000000000494ca8 : jrcxz 0x494cab ; inc dword ptr [rax - 0x1b] ; stc ; call rax
0x00000000004a6fe5 : jrcxz 0x4a703f ; ret
0x00000000004a91ad : jrcxz 0x4a9170 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a9d09 : jrcxz 0x4a9ced ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000403fbc : js 0x403fc6 ; mov rdi, r15 ; call 0x4201e7
0x000000000040ef85 : js 0x40efa9 ; call rdx
0x00000000004230ac : js 0x4230dd ; add byte ptr [rbp + rcx*4 + 0x25], cl ; retf 0x2977
0x0000000000472029 : js 0x472061 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047c3d2 : js 0x47c3e5 ; pop rbx ; ret
0x000000000047df34 : js 0x47df40 ; add byte ptr [rax + 0x15], bh ; syscall
0x000000000048da66 : js 0x48da73 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048da73 : js 0x48da7f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490733 : js 0x4907ae ; ret 0x8b48
0x00000000004a4714 : js 0x4a46d1 ; cld ; call rax
0x00000000004a9081 : js 0x4a9101 ; pop rdx ; retf
0x00000000004ac358 : js 0x4ac3bb ; cmc ; call qword ptr [rcx]
0x00000000004b0188 : js 0x4b01d1 ; stc ; jmp qword ptr [rbx]
0x00000000004b37b4 : js 0x4b3834 ; add byte ptr [rax], al ; test al, 0 ; cld ; jmp rdx
0x000000000046bc53 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000456a45 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041fa1f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004781c0 : lahf ; clc ; dec dword ptr [rbp + rcx*4 + 0xd] ; retf 2
0x00000000004a96c3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047ee6b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043ffdd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045f51f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a8fb2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a97b4 : lahf ; push -0x57d3205 ; call 0xffffffffab5862b6
0x00000000004a77c0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044b1fb : lahf ; ret
0x000000000041967f : lahf ; ret 0x3949
0x0000000000419732 : lahf ; ret 0x48e9
0x000000000044b0b1 : lahf ; ret 0x8545
0x00000000004a6f1d : lahf ; ret 0x871e
0x0000000000448899 : lahf ; ret 0xea81
0x000000000048ce21 : lahf ; ret 0xf45
0x0000000000494b45 : lahf ; stc ; jmp qword ptr [rax]
0x000000000044066d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000492f6b : lcall ptr [rax + rdi*8 - 0x770000a] ; idiv bh ; ret
0x000000000041b532 : lcall ptr [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000419d90 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004128e5 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000045d222 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041266b : lcall ptr [rbx + 0x5d] ; ret
0x0000000000480496 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000496d5f : lcall ptr [rdi + 0x71] ; sti ; ljmp ptr [rdx] ; jno 0x496d6a ; jmp rdx
0x000000000049601f : lcall ptr [rdx + 0x3d] ; sti ; call qword ptr [rdx]
0x00000000004950eb : lcall ptr [rsi + 0x2efffa02] ; add bh, dl ; call rsp
0x0000000000435a26 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004183db : lea eax, dword ptr [r8 - 1] ; ret
0x000000000048b51c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042bbc4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000042bbd4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000042bba4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000004183dc : lea eax, dword ptr [rax - 1] ; ret
0x0000000000473a4d : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000447084 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000004450fc : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000445111 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000044512f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000044514f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000445172 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000445191 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000004451b1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000004451d1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000004451f4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000445219 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000445237 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000445257 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000445273 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000445293 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000004452b3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000004452d3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000044504d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000044506d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000044508f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000004450af : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000004450cf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000004450e9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000444f97 : lea eax, dword ptr [rdi + 1] ; ret
0x0000000000444faa : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000444fb5 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000444fc8 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000444fdd : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000444ffb : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000445007 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000044501a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000044502f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000042bbf9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000042bc09 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000042bb03 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000473c95 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440b67 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000004473da : lea eax, dword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473949 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000444f83 : lea eax, dword ptr [rdi] ; ret
0x000000000044456d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000044458d : lea eax, dword ptr [rdx + 0xb] ; ret
0x00000000004445af : lea eax, dword ptr [rdx + 0xc] ; ret
0x00000000004445cf : lea eax, dword ptr [rdx + 0xd] ; ret
0x00000000004445ef : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000044447f : lea eax, dword ptr [rdx + 0xf] ; ret
0x00000000004444a7 : lea eax, dword ptr [rdx + 1] ; ret
0x00000000004444bd : lea eax, dword ptr [rdx + 2] ; ret
0x00000000004444d5 : lea eax, dword ptr [rdx + 3] ; ret
0x00000000004444eb : lea eax, dword ptr [rdx + 4] ; ret
0x00000000004444fd : lea eax, dword ptr [rdx + 5] ; ret
0x000000000044451b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000444427 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000044452d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000044454d : lea eax, dword ptr [rdx + 9] ; ret
0x00000000004183ce : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004489b3 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004237d6 : lea eax, dword ptr [rdx - 0x10] ; ret
0x0000000000444495 : lea eax, dword ptr [rdx] ; ret
0x000000000044dbd1 : lea eax, dword ptr [rip + 0x26d729] ; ret
0x0000000000424c4c : lea eax, dword ptr [rip + 0x79ee] ; je 0x424c23 ; ret
0x000000000046bd7c : lea eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46bd58
0x00000000004601a1 : lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e611 : lea ebx, dword ptr [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a77d1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000047444b : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000004745e6 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000472974 : lea ecx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042e110 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000044481e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000004237e6 : lea ecx, dword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000476077 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000472780 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047269b : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047456e : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000047475c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000474446 : lea ecx, dword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000403fbb : lea edi, dword ptr [rax + 1] ; mov rdi, r15 ; call 0x4201e8
0x000000000044cebf : lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000403531 : lea edi, dword ptr [rsi + 0x80] ; call 8
0x0000000000418cf1 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004724f7 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042e1e4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000004250a6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042e5d8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000048e391 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046c1cd : lea esi, dword ptr [rip + 0x24bc4d] ; jmp rax
0x00000000004476ff : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e986 : lea esp, dword ptr [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x00000000004250a5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048e390 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000403fba : lea r15, qword ptr [rax + 1] ; mov rdi, r15 ; call 0x4201e9
0x000000000042e10f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000472973 : lea r9, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000047277f : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047269a : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047456d : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000047475b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000474445 : lea r9, qword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000048b51b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042bbc3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042bbd3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042bba3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000473a4c : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000447083 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000004450fb : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000445110 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044512e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000044514e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000445171 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000445190 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000004451b0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000004451d0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000004451f3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000445218 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000445236 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000445256 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000445272 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000445292 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000004452b2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000004452d2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044504c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044506c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044508e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004450ae : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004450ce : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004450e8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444f96 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444fa9 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444fb4 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444fc7 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444fdc : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444ffa : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000445006 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000445019 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000044502e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000042bbf8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042bc08 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042bb02 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000473c94 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440b66 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000004473d9 : lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473948 : lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000444f82 : lea rax, qword ptr [rdi] ; ret
0x000000000044456c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000044458c : lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000004445ae : lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004445ce : lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000004445ee : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000044447e : lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004444a6 : lea rax, qword ptr [rdx + 1] ; ret
0x00000000004444bc : lea rax, qword ptr [rdx + 2] ; ret
0x00000000004444d4 : lea rax, qword ptr [rdx + 3] ; ret
0x00000000004444ea : lea rax, qword ptr [rdx + 4] ; ret
0x00000000004444fc : lea rax, qword ptr [rdx + 5] ; ret
0x000000000044451a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000444426 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000044452c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000044454c : lea rax, qword ptr [rdx + 9] ; ret
0x00000000004237d5 : lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000444494 : lea rax, qword ptr [rdx] ; ret
0x000000000044dbd0 : lea rax, qword ptr [rip + 0x26d729] ; ret
0x000000000046bd7b : lea rax, qword ptr [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46bd59
0x000000000040e610 : lea rbx, qword ptr [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044481d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000047444a : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004745e5 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000004237e5 : lea rcx, qword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000476076 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000403530 : lea rdi, qword ptr [r14 + 0x80] ; call 9
0x000000000044cebe : lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000042e1e3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042e5d7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046c1cc : lea rsi, qword ptr [rip + 0x24bc4d] ; jmp rax
0x00000000004476fe : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000042a637 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b517 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457f8a : leave ; call r15
0x0000000000496dbc : leave ; jb 0x496dbd ; call qword ptr [rax]
0x0000000000446e60 : leave ; jne 0x446e53 ; ret
0x0000000000446f10 : leave ; jne 0x446f03 ; ret
0x00000000004471d0 : leave ; jne 0x4471c7 ; sub rax, 1 ; ret
0x0000000000474c7a : leave ; jne 0x474c37 ; mov rax, rdx ; ret
0x00000000004473d8 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000404f6b : leave ; mov ah, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000048b4d0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046c6e6 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400bea : leave ; ret
0x0000000000490db3 : leave ; retf
0x00000000004a7981 : leave ; retf 0x6ee8
0x00000000004a6aa9 : leave ; retf 0xcccb
0x0000000000494d09 : leave ; stc ; inc dword ptr [rax - 0x2f000636] ; retf
0x0000000000494d49 : leave ; stc ; push rax ; retf 0xfff9
0x000000000047456a : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000049552f : ljmp ptr [rax + rbp - 6] ; call qword ptr [rdx]
0x00000000004949ef : ljmp ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000049566b : ljmp ptr [rdx + 0x3afffa28] ; sub dl, bh ; jmp rax
0x0000000000496d63 : ljmp ptr [rdx] ; jno 0x496d66 ; jmp rdx
0x00000000004950ef : ljmp ptr [rsi] ; add bh, dl ; call rsp
0x000000000042cdfe : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000400be6 : lock add byte ptr [rax], al ; nop ; leave ; ret
0x000000000047f957 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004108b0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004467e0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004a90a6 : lodsb al, byte ptr [rsi] ; loop 0x4a9073 ; retf
0x000000000042ac34 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a9e5d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004abac4 : lodsb al, byte ptr [rsi] ; std ; std ; call rsp
0x00000000004a7906 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a7975 ; salc ; retf
0x00000000004a76db : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000461c17 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004958a5 : lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax + 0x20fffaae]
0x00000000004a9485 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000483632 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041912e : loop 0x419173 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042247e : loop 0x4224d1 ; mov esi, ebx ; mov rdi, r13 ; call 0x41e729
0x00000000004266fd : loop 0x426735 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043530a : loop 0x435305 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435309 : loop 0x435306 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437e2a : loop 0x437e25 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437e29 : loop 0x437e26 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044897f : loop 0x448999 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044c853 : loop 0x44c8a6 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000046420a : loop 0x464213 ; call 0x40043c
0x0000000000475eae : loop 0x475e76 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x000000000048d7c9 : loop 0x48d818 ; add esp, 0x18 ; ret
0x00000000004a90a7 : loop 0x4a9072 ; retf
0x00000000004aa1fa : loop 0x4aa24f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000043527a : loope 0x435275 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435279 : loope 0x435276 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437d9a : loope 0x437d95 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437d99 : loope 0x437d96 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044550b : loope 0x445515 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000448efe : loope 0x448ef5 ; ret
0x000000000044e8ae : loope 0x44e8bb ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004693c3 : loope 0x46943b ; stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000474e7e : loope 0x474e93 ; je 0x474ea4 ; ret
0x000000000047d16b : loope 0x47d171 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004834c7 : loope 0x483519 ; mov dword ptr [rdi], ecx ; ret
0x00000000004834f8 : loope 0x48354b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000048356d : loope 0x4835c0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004907f6 : loope 0x490855 ; ret
0x00000000004914be : loope 0x491520 ; pop rbp ; pop r12 ; ret
0x00000000004a91b1 : loope 0x4a9233 ; pop rdx ; leave ; retf
0x00000000004011e3 : loopne 0x4011b0 ; ret
0x00000000004011e2 : loopne 0x4011b1 ; ret
0x000000000040fed7 : loopne 0x40ff3d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041d41c : loopne 0x41d430 ; xchg eax, esp ; ret 0x3de9
0x0000000000422d4f : loopne 0x422db5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042e631 : loopne 0x42e648 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e630 : loopne 0x42e649 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e781 : loopne 0x42e798 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e780 : loopne 0x42e799 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e8d1 : loopne 0x42e8e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e8d0 : loopne 0x42e8e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea21 : loopne 0x42ea38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea20 : loopne 0x42ea39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb71 : loopne 0x42eb88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb70 : loopne 0x42eb89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ecc1 : loopne 0x42ecd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ecc0 : loopne 0x42ecd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ee11 : loopne 0x42ee28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ee10 : loopne 0x42ee29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef5f : loopne 0x42ef76 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef5e : loopne 0x42ef77 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f0b1 : loopne 0x42f0c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f0b0 : loopne 0x42f0c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f201 : loopne 0x42f218 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f200 : loopne 0x42f219 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f351 : loopne 0x42f368 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f350 : loopne 0x42f369 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f4a1 : loopne 0x42f4b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f4a0 : loopne 0x42f4b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f5f1 : loopne 0x42f608 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f5f0 : loopne 0x42f609 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f741 : loopne 0x42f758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f740 : loopne 0x42f759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f891 : loopne 0x42f8a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f890 : loopne 0x42f8a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431001 : loopne 0x431018 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431000 : loopne 0x431019 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431151 : loopne 0x431168 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431150 : loopne 0x431169 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312a1 : loopne 0x4312b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312a0 : loopne 0x4312b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004313f1 : loopne 0x431408 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004313f0 : loopne 0x431409 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431541 : loopne 0x431558 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431540 : loopne 0x431559 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431691 : loopne 0x4316a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431690 : loopne 0x4316a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004317e1 : loopne 0x4317f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004317e0 : loopne 0x4317f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043192f : loopne 0x431946 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043192e : loopne 0x431947 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a81 : loopne 0x431a98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a80 : loopne 0x431a99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431bd1 : loopne 0x431be8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431bd0 : loopne 0x431be9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431d21 : loopne 0x431d38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431d20 : loopne 0x431d39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431e71 : loopne 0x431e88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431e70 : loopne 0x431e89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431fc1 : loopne 0x431fd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431fc0 : loopne 0x431fd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432111 : loopne 0x432128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432110 : loopne 0x432129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432261 : loopne 0x432278 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432260 : loopne 0x432279 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004488ed : loopne 0x448907 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044c668 : loopne 0x44c67d ; cmp eax, 4 ; je 0x44c677 ; ret
0x000000000044d984 : loopne 0x44d989 ; add cl, ch ; retf
0x000000000044e8b2 : loopne 0x44e915 ; pop r12 ; ret
0x00000000004554dd : loopne 0x455558 ; jae 0x45546e ; retf 0xb941
0x000000000046406f : loopne 0x463ffc ; ret
0x000000000046e1c1 : loopne 0x46e1c7 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046f6e9 : loopne 0x46f74d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046fec5 : loopne 0x46ff29 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000476fc4 : loopne 0x476f60 ; clc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000482e9d : loopne 0x482ea6 ; sub eax, 1 ; ret
0x0000000000494770 : loopne 0x49477e ; stc ; jmp qword ptr [rax]
0x0000000000494780 : loopne 0x494793 ; stc ; jmp qword ptr [rax]
0x0000000000494790 : loopne 0x4947a8 ; stc ; jmp qword ptr [rax]
0x00000000004947a0 : loopne 0x4947bd ; stc ; jmp qword ptr [rax]
0x00000000004948ec : loopne 0x494884 ; stc ; jmp qword ptr [rip - 0x2e000673]
0x0000000000494880 : loopne 0x4948ea ; stc ; call rax
0x0000000000494b1c : loopne 0x494ad5 ; stc ; call rax
0x000000000049591c : loopne 0x495917 ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000495950 : loopne 0x49594f ; cli ; push rax ; idiv dl ; call qword ptr [rax]
0x00000000004a77d4 : loopne 0x4a77b4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004acc1c : loopne 0x4acc30 ; add byte ptr [rax], al ; shl byte ptr [rdi], 0xf6 ; jmp qword ptr [rax]
0x00000000004b001c : loopne 0x4b0064 ; add byte ptr [rax], al ; jo 0x4affde ; clc ; call qword ptr [rax]
0x00000000004a71ea : mov ah, 0x13 ; ret
0x000000000049279a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000491eaa : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000401a0f : mov ah, 0x2b ; add byte ptr [rbx + rbp*8], al ; mov byte ptr [rcx], bh ; ret 0x860f
0x000000000049541c : mov ah, 0x34 ; cli ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x00000000004a7690 : mov ah, 0xa5 ; ret
0x0000000000494f24 : mov ah, 0xd ; cli ; inc dword ptr [rbp + rcx - 6] ; call rsp
0x00000000004ae769 : mov ah, 0xf6 ; call qword ptr [rsi]
0x0000000000494b1d : mov ah, 0xf9 ; call rax
0x0000000000494a99 : mov ah, 0xf9 ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x0000000000494a79 : mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000404f6c : mov ah, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x00000000004a6fe4 : mov ah, bl ; push rsi ; ret
0x000000000048b616 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000457f84 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000494f88 : mov al, 0x10 ; cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x00000000004947b4 : mov al, 0x21 ; stc ; call rax
0x000000000046d153 : mov al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004956e4 : mov al, 0x29 ; cli ; jmp qword ptr [rax]
0x00000000004954e0 : mov al, 0x2a ; cli ; jmp qword ptr [rax]
0x00000000004947d4 : mov al, 0x2a ; stc ; call rax
0x00000000004952a8 : mov al, 0x33 ; cli ; inc dword ptr [rax + 0x33] ; cli ; call rsi
0x0000000000495480 : mov al, 0x37 ; cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x00000000004957b8 : mov al, 0x4a ; cli ; inc eax ; cli ; call rax
0x0000000000494848 : mov al, 0x53 ; stc ; jmp qword ptr [rax]
0x00000000004b1fc0 : mov al, 0x74 ; cli ; call qword ptr [rsi]
0x00000000004b35ec : mov al, 0x75 ; add byte ptr [rax], al ; and cl, bh ; sti ; jmp qword ptr [rbx]
0x0000000000440f2f : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000463c0c : mov al, 0xc8 ; stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000048debf : mov al, 0xe8 ; retf
0x00000000004a9496 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000404c4f : mov al, 0xf ; retf
0x00000000004958f0 : mov al, 0xf1 ; cli ; inc eax ; int1 ; cli ; jmp rax
0x000000000049596c : mov al, 0xf7 ; cli ; inc eax ; idiv edx ; call rax
0x0000000000495990 : mov al, 0xf8 ; cli ; call rax
0x0000000000494a91 : mov al, 0xf9 ; inc dword ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x0000000000494ab1 : mov al, 0xf9 ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x000000000046407b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000442d06 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442d24 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000444490 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442ce0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000045b62a : mov al, byte ptr [rsi] ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x0000000000442cf0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000436041 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000400b29 : mov bh, 0x2b ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004a9520 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x00000000004585e4 : mov bh, 0x43 ; add al, 0x89 ; retf
0x000000000045815f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004453a8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004a97f8 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a84c4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a6aa6 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000413d29 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x0000000000424e25 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b0f59 : mov bh, 0xf9 ; call qword ptr [rax]
0x00000000004b0fa9 : mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004b0f71 : mov bh, 0xf9 ; call qword ptr [rdx]
0x00000000004a4699 : mov bh, 0xfc ; call rax
0x000000000048fd97 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004884fc : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a9bd3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000446c9e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a985b : mov bl, 0x29 ; retf 0xbf4b
0x0000000000474c7c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045ae62 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a95a3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000400b28 : mov bl, 0xb7 ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004164d3 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x00000000004a9840 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004ae71d : mov bl, 0xf6 ; call qword ptr [rbx]
0x00000000004ae6c9 : mov bl, 0xf6 ; call qword ptr [rdx]
0x0000000000494b19 : mov bl, 0xf9 ; jmp rax
0x0000000000494af9 : mov bl, 0xf9 ; push qword ptr [rax] ; mov ch, 0xf9 ; jmp qword ptr [rax]
0x00000000004a71c1 : mov bx, 0xf32d ; retf
0x0000000000403412 : mov byte ptr [r8 - 0x75], r9b ; adc cl, bpl ; retf
0x000000000044eb2a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044c82a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a31cc : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x0000000000403413 : mov byte ptr [rax - 0x75], cl ; adc cl, bpl ; retf
0x000000000044eb2b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044c3cf : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004013b4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000402d71 : mov byte ptr [rbp + rcx*4 + 0x7c], cl ; ret 0x4de8
0x00000000004652a7 : mov byte ptr [rbp - 0xd0], cl ; call 0x4714c8
0x000000000046f5d7 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x000000000045a963 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048b4d4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x000000000040637f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401a14 : mov byte ptr [rcx], bh ; ret 0x860f
0x000000000045f433 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004af1c4 : mov byte ptr [rcx], dh ; add byte ptr [rax], al ; or byte ptr [rdx], cl ; idiv edi ; retf
0x00000000004450f8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444a68 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044516e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000444abe : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004451f0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000444b40 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444fa6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444986 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000444fc2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004449a2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004449e3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a9855 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000042fc5b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000413310 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000495a38 : mov byte ptr [rdi], ch ; sti ; inc eax ; sti ; jmp rax
0x0000000000438d82 : mov byte ptr [rdi], cl ; ret
0x0000000000448665 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000444f80 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000444960 : mov byte ptr [rdi], dh ; ret
0x00000000004360b3 : mov byte ptr [rdi], dl ; ret
0x00000000004444b9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000442d09 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000004444e7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000442d27 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004afd68 : mov byte ptr [rdx - 9], dl ; jmp qword ptr [rbx]
0x0000000000444492 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442ce2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048c040 : mov byte ptr [rip + 0x231169], 8 ; ret
0x0000000000400b26 : mov byte ptr [rip + 0x2bb7b3], 1 ; pop rbp ; ret
0x000000000049601c : mov byte ptr [rip + 0x3d5afffb], bh ; sti ; call qword ptr [rdx]
0x000000000041e6d9 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004221f4 : mov byte ptr [rsi - 0x7cb7ffd7], al ; retf 0x4901
0x0000000000484e9f : mov byte ptr [rsi], al ; jne 0x484e8f ; mov rax, rsi ; ret
0x0000000000484f23 : mov byte ptr [rsi], al ; jne 0x484f07 ; mov rax, rsi ; ret
0x0000000000402d70 : mov byte ptr gs:[rbp + rcx*4 + 0x7c], cl ; ret 0x4de8
0x00000000004a6fe2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a8323 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a8fb6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000461a67 : mov ch, 0x60 ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a96bf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004aa06a : mov ch, 0xab ; ret
0x0000000000471b07 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x00000000004b0021 : mov ch, 0xf8 ; call qword ptr [rax]
0x0000000000494afd : mov ch, 0xf9 ; jmp qword ptr [rax]
0x000000000042d976 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424303 : mov ch, byte ptr [rcx] ; add bh, dh ; ret 0
0x000000000046d0bf : mov cl, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000410a4e : mov cl, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a9ac1 : mov cl, 0x3f ; retf
0x0000000000494918 : mov cl, 0x93 ; stc ; inc dword ptr [rcx - 0x6c] ; stc ; call rcx
0x00000000004ae5f1 : mov cl, 0xf6 ; call qword ptr [rsi]
0x0000000000494b15 : mov cl, 0xf9 ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494a11 : mov cl, 0xf9 ; jmp rax
0x00000000004949f1 : mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000045b567 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043b565 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004250a4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a9492 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042c7c4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438d80 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000474e7b : mov cl, dl ; and cl, 0xf ; je 0x474ea7 ; ret
0x00000000004a974c : mov cs, edi ; ret 0x8b36
0x0000000000468b02 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043faee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444980 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000484fca : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e6ff : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004170e2 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004135bf : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419170 : mov dh, 0 ; ret
0x0000000000494db8 : mov dh, 0x12 ; cli ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x00000000004360b1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042c314 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040e0c4 : mov dh, 0x17 ; test dl, dl ; jne 0x40e0aa ; ret
0x00000000004670de : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000456ef8 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046f5ec : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000456f0e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040dfe9 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xffd8
0x0000000000456f22 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004742e6 : mov dh, 0x43 ; std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000469f2b : mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000047362d : mov dh, 0x47 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000446871 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446861 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446831 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000446851 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446841 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045eb29 : mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004887a7 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x000000000045492d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000045496e : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a8482 : mov dh, 0x4e ; ret 0x474c
0x0000000000446875 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446865 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446835 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000446845 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000463d98 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x000000000040651a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040f484 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000455a36 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048c431 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000455a21 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455a4b : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000455d74 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000047942f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000494960 : mov dh, 0x94 ; stc ; inc dword ptr [rsi - 0x6b] ; stc ; jmp rsi
0x0000000000494db0 : mov dh, 0xc ; cli ; jmp qword ptr [rsi]
0x0000000000475e82 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c746 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046f368 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000488b5d : mov dh, 0xc0 ; neg eax ; ret
0x000000000048540a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044eee1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000448951 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415ee2 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a96c4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048b4cf : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042c33a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048cc7f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000447779 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000426451 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c7d4 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000494a7d : mov dh, 0xf9 ; call qword ptr [rax]
0x00000000004b0e59 : mov dh, 0xf9 ; call qword ptr [rcx]
0x0000000000494a5d : mov dh, 0xf9 ; inc dword ptr [rax - 0x48] ; stc ; jmp qword ptr [rax]
0x00000000004b0eb9 : mov dh, 0xf9 ; jmp qword ptr [rcx]
0x0000000000494a9d : mov dh, 0xf9 ; jmp rax
0x000000000040db25 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004a4685 : mov dh, 0xfc ; call rax
0x00000000004a4681 : mov dh, 0xfc ; dec esp ; mov dh, 0xfc ; call rax
0x000000000041e523 : mov dh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x0000000000404d8f : mov dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x00000000004170f1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004135d1 : mov dh, 2 ; ret
0x000000000042c7d1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c311 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426454 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000448efc : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004b0f58 : mov dil, 0xf9 ; call qword ptr [rax]
0x00000000004b0f70 : mov dil, 0xf9 ; call qword ptr [rdx]
0x0000000000410936 : mov dl, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000495354 : mov dl, 0x35 ; cli ; inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x0000000000487ec1 : mov dl, 0x59 ; and eax, dword ptr [rax] ; jne 0x487ef5 ; ret
0x0000000000494e5c : mov dl, 0xe ; cli ; inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x00000000004949f5 : mov dl, 0xf9 ; call rax
0x0000000000494a95 : mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494ab5 : mov dl, 0xf9 ; jmp rax
0x000000000042fce0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000462f75 : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a9ade : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000438d76 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000438d61 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c7c1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000471149 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471189 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472188 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c827 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c841 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000047114d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000047220a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000045118f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000451192 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000417e05 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c7c5 : mov dword ptr [rax + 8], edx ; ret
0x0000000000491de5 : mov dword ptr [rax + rax], 0x348d4800 ; ret 0xc183
0x00000000004669ad : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f812 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041e70a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x00000000004855cd : mov dword ptr [rax], edi ; pop rbx ; ret
0x000000000048551d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x00000000004011de : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 0x20] ; leave ; ret
0x000000000041b132 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000004855c1 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d8b2 : mov dword ptr [rax], edx ; ret
0x00000000004724fb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047ce41 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000464205 : mov dword ptr [rbp - 0x68], edx ; shl rdx, 3 ; call 0x400441
0x000000000048178f : mov dword ptr [rbp - 0x70], eax ; mov eax, 0x15 ; syscall
0x0000000000464175 : mov dword ptr [rbp - 0xd0], ecx ; call 0x400440
0x00000000004641a5 : mov dword ptr [rbp - 0xd0], ecx ; call 0x400490
0x000000000047d7e1 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000458de2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004133e7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000048241e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004137cf : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000048012e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004862f3 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x4862c7
0x0000000000482353 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488b85 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000488c59 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x00000000004854f3 : mov dword ptr [rbx + 0x23], edi ; add cl, ch ; retf
0x000000000045b74d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041749d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416f81 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004723ba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000418c1d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414fa2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004711d4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000472081 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458df7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485d93 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041742c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048aaf9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004174a0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004132e5 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047218b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000410871 : mov dword ptr [rcx + 0x130], edx ; ret
0x000000000040136e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x00000000004514e5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438d77 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000438d62 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000438d51 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000449d4a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419b64 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044510d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044514b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000004451cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000444abb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444b3d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444a7d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444b80 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444ba0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444b61 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000445233 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000444b83 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416e63 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000445215 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000445253 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000444b65 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419b61 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047bde5 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047bdb7 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000416e93 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d8f1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044518d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000444add : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000044512b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000004451ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000444a9b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435ef5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435d38 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435fd8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435e85 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435cc8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444ff7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435e15 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435c58 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004449c7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000444fd9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000435be8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004449b9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044508b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435b78 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a2b : mov dword ptr [rdi + 5], edx ; ret
0x00000000004450ab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435b08 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a3b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000445049 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004450cb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435a98 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a09 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000484dee : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416e67 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000483604 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000445069 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044502b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000484aa4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004449fb : mov dword ptr [rdi + 8], edx ; ret
0x000000000044850b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000004477a5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000448503 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000448685 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000447795 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004484fb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447787 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d89c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042f9a5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f9e3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000048356f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042fd2c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435548 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff0c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004354c8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300fc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435448 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004302cd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004353b9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304cd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435329 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004306cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435299 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004300ad : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042fec5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000004300a9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430489 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fb5f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000430486 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430686 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430886 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9a9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042f9e7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042fb5c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc58 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fba4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004355c8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004834f4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004835fe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046912a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000444fc5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000445017 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444fa4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444984 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000444ff5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004449c5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000445047 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444a07 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445067 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444a17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004474d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000444a28 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444a38 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444a48 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004449b6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004449f8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004474e3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000435a9c : mov dword ptr [rdi], ecx ; ret
0x000000000044867f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000444f94 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444fb2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000445004 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435da4 : mov dword ptr [rdi], edx ; ret
0x0000000000438d5f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484c76 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000438d4e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438d73 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044778c : mov dword ptr [rdi], esi ; ret
0x000000000042e5c2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000413465 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000444517 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000442d47 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004444f9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442d39 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004445ab : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000444529 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000442d59 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004445cb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000444549 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000442d69 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000444569 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000004445eb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000442d79 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046bd80 : mov dword ptr [rdx + 8], eax ; jmp 0x46bd54
0x0000000000444589 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000044447b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000442ccb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000418d90 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004444a4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000004444d2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000444424 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000449dda : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484c78 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000484dd5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044a08a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442c74 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000004855ad : mov dword ptr [rdx], eax ; pop rbx ; ret
0x000000000040223d : mov dword ptr [rdx], eax ; ret
0x00000000004907ef : mov dword ptr [rip + 0x22c4fb], ebx ; jne 0x4907e1 ; pop rbx ; ret
0x00000000004850d8 : mov dword ptr [rip + 0x237f8a], eax ; ret
0x000000000047fa05 : mov dword ptr [rip + 0x23d9c5], eax ; ret
0x000000000045b628 : mov dword ptr [rip + 0x26048a], edx ; je 0x45b641 ; ret
0x000000000044dc06 : mov dword ptr [rip + 0x26beac], edx ; pop rbx ; ret
0x00000000004201c6 : mov dword ptr [rip + 0x29a694], eax ; ret
0x000000000041a0cc : mov dword ptr [rip + 0x2a078e], eax ; ret
0x0000000000419bc7 : mov dword ptr [rip + 0x2a0c23], eax ; ret
0x0000000000419bde : mov dword ptr [rip + 0x2a0c28], eax ; ret
0x0000000000419b9f : mov dword ptr [rip + 0x2a0c43], eax ; ret
0x0000000000419b7f : mov dword ptr [rip + 0x2a0c5b], eax ; ret
0x0000000000419a75 : mov dword ptr [rip + 0x2a0dcd], eax ; ret
0x0000000000419a5b : mov dword ptr [rip + 0x2a0ddf], eax ; ret
0x0000000000419a43 : mov dword ptr [rip + 0x2a0de7], edx ; ret
0x0000000000419a05 : mov dword ptr [rip + 0x2a0ded], eax ; ret
0x00000000004199f5 : mov dword ptr [rip + 0x2a0e05], eax ; ret
0x0000000000419bf4 : mov dword ptr [rip + 0x2a319a], eax ; ret
0x0000000000401df3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x00000000004474e6 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000004474d9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000478fd1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d8de : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047fb72 : mov dword ptr [rsi], eax ; ret
0x000000000047eeb9 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000041d43a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d4f7 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d43f : mov dword ptr [rsp + 8], eax ; call rcx
0x0000000000409b1b : mov dword ptr [rsp + 8], ecx ; call 0x406626
0x0000000000411bee : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000048a2a3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413cc2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416fe5 : mov dword ptr [rsp], edi ; call 0x413265
0x00000000004669ac : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f811 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000475f8c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449d49 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449dd9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000447794 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042fec0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444970 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004489cb : mov eax, 0x10 ; pop rbx ; ret
0x0000000000475cc9 : mov eax, 0x101 ; syscall
0x0000000000475c42 : mov eax, 0x106 ; syscall
0x000000000044aba7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047e689 : mov eax, 0x14 ; syscall
0x000000000044c894 : mov eax, 0x15 ; syscall
0x0000000000423f00 : mov eax, 0x16 ; ret
0x0000000000449d30 : mov eax, 0x18 ; syscall
0x000000000044c4f3 : mov eax, 0x19 ; syscall
0x000000000044ae40 : mov eax, 0x1c ; syscall
0x00000000004489d9 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000488d20 : mov eax, 0x26 ; syscall
0x0000000000485a70 : mov eax, 0x27 ; syscall
0x00000000004489d2 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000475b70 : mov eax, 0x3f ; syscall
0x00000000004489e7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a75db : mov eax, 0x45155e93 ; ret 0x591c
0x000000000044a227 : mov eax, 0x48 ; syscall
0x00000000004b52f4 : mov eax, 0x48000092 ; add bh, ch ; jmp qword ptr [rdx]
0x000000000044a50b : mov eax, 0x4f ; syscall
0x00000000004afff4 : mov eax, 0x5800003f ; xchg eax, ebx ; clc ; call qword ptr [rax]
0x00000000004581b8 : mov eax, 0x5b000000 ; pop r12 ; ret
0x00000000004489e0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044c520 : mov eax, 0x63 ; syscall
0x0000000000475ba0 : mov eax, 0x66 ; syscall
0x0000000000475bc0 : mov eax, 0x68 ; syscall
0x00000000004ac0f4 : mov eax, 0x69000000 ; cmc ; jmp qword ptr [rsi]
0x0000000000475bb0 : mov eax, 0x6b ; syscall
0x0000000000475bd0 : mov eax, 0x6c ; syscall
0x00000000004489bd : mov eax, 0x80 ; pop rbx ; ret
0x000000000048a0af : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000046d1d1 : mov eax, 0x8900001d ; ret 0x349
0x0000000000487384 : mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401ded : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044ae10 : mov eax, 0xa ; syscall
0x000000000044ade0 : mov eax, 0xb ; syscall
0x00000000004a4715 : mov eax, 0xb7d0fffc ; cld ; call rax
0x00000000004a4711 : mov eax, 0xb878fffc ; cld ; call rax
0x00000000004a4691 : mov eax, 0xb938fffc ; cld ; call rax
0x000000000040e172 : mov eax, 0xba ; syscall
0x0000000000494a61 : mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000475440 : mov eax, 0xc9 ; syscall
0x000000000044c5a5 : mov eax, 0xca ; syscall
0x000000000040e1a0 : mov eax, 0xe ; syscall
0x0000000000449aa5 : mov eax, 0xe5 ; syscall
0x000000000040e17e : mov eax, 0xea ; syscall
0x000000000045b771 : mov eax, 0xf ; syscall
0x000000000045897c : mov eax, 0xff52bee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045d21e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412667 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004137e3 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041262b : mov eax, 0xffffffff ; ret
0x00000000004763d9 : mov eax, 1 ; leave ; ret
0x0000000000484c55 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417b62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486fbd : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000480480 : mov eax, 1 ; pop rbx ; ret
0x000000000046908f : mov eax, 1 ; ret
0x000000000044a0ea : mov eax, 1 ; syscall
0x0000000000474c93 : mov eax, 2 ; ret
0x0000000000474ef1 : mov eax, 3 ; ret
0x000000000044a3ba : mov eax, 3 ; syscall
0x000000000048e75f : mov eax, 4 ; jne 0x48e788 ; ret
0x0000000000474f01 : mov eax, 4 ; ret
0x0000000000449dbe : mov eax, 4 ; syscall
0x0000000000474f11 : mov eax, 5 ; ret
0x0000000000449e0c : mov eax, 5 ; syscall
0x0000000000474f21 : mov eax, 6 ; ret
0x0000000000475bee : mov eax, 6 ; syscall
0x0000000000474f31 : mov eax, 7 ; ret
0x00000000004489c4 : mov eax, 8 ; pop rbx ; ret
0x000000000044ef30 : mov eax, 8 ; ret
0x000000000044a1b0 : mov eax, 8 ; syscall
0x000000000044ad3c : mov eax, 9 ; syscall
0x0000000000412181 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000472614 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417d48 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417d49 ; ret
0x0000000000482211 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000459c60 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x459c72 ; call rax
0x000000000046c727 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045b66f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046131d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048b519 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048b501 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x0000000000480499 : mov eax, dword ptr [rax] ; ret
0x0000000000400dfe : mov eax, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004011e1 : mov eax, dword ptr [rbp - 0x20] ; leave ; ret
0x000000000047cd80 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000400d82 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x000000000047cba1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000416fcd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004855c9 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004176b9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000046b6f5 : mov eax, dword ptr [rbx] ; add byte ptr [rcx - 0x77], al ; retf
0x0000000000442d44 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000442d56 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000442d66 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442d76 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442d86 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043d95a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043f232 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004444d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000442d10 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000444421 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000442c71 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004444a1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000442cf1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047d386 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047246e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000418d00 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000418d28 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049142d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x491444 ; call rax
0x0000000000472611 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000419051 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d871 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d8c1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d901 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d961 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d951 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d911 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000461867 : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x00000000004884a1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4884b8 ; ret
0x0000000000418cf5 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419bf1 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a319a], eax ; ret
0x000000000048fbc5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48fbd7 ; ret
0x000000000048fbe0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48fbf7 ; ret
0x000000000048fe10 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48fe27 ; ret
0x000000000047ee6c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448ef7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448ee9 ; ret
0x000000000043b566 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000418ce1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x418ce0 ; ret
0x0000000000485c70 : mov eax, dword ptr [rip + 0x237c6a] ; ret
0x000000000047fb6b : mov eax, dword ptr [rip + 0x23d857] ; mov qword ptr [rsi], rax ; ret
0x000000000047fafa : mov eax, dword ptr [rip + 0x23d8d0] ; ret
0x0000000000458061 : mov eax, dword ptr [rip + 0x264e11] ; ret
0x000000000044fb81 : mov eax, dword ptr [rip + 0x26ddc1] ; ret
0x0000000000419031 : mov eax, dword ptr [rip + 0x2a10e9] ; ret
0x000000000048e7b2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048b641 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048b614 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048b631 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e7d1 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046c6ec : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x00000000004618b1 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461f09 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000047167f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d936 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044b026 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401763 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000045376c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044a3fa : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040e4ed : mov eax, dword ptr [rsp + 8] ; call rax
0x000000000048742f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048b0aa : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000480498 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041b2a0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470283 : mov eax, eax ; jmp 0x470255
0x000000000044a049 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004230ff : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000448a02 : mov eax, eax ; ret
0x00000000004752b4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000449812 : mov eax, eax ; syscall
0x00000000004740f1 : mov eax, eax ; vzeroupper ; ret
0x000000000041091b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000485fad : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ba04 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410a33 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041033e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004125d2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004130fd : mov eax, ebp ; syscall
0x0000000000484be3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000488c17 : mov eax, ebx ; jne 0x488c35 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488cfe : mov eax, ebx ; jne 0x488d1d ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004110a8 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410e85 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ac40 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004133eb : mov eax, ebx ; pop rbx ; ret
0x0000000000484aa7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000466895 : mov eax, ecx ; ret
0x000000000040e16b : mov eax, ecx ; syscall
0x00000000004132e3 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b535 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000413314 : mov eax, edi ; ret
0x000000000041b135 : mov eax, edx ; add rsp, 8 ; ret
0x000000000046695e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000468f3a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410611 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000448a06 : mov eax, edx ; pop rbx ; ret
0x000000000041b141 : mov eax, edx ; ret
0x000000000040185a : mov eax, edx ; syscall
0x0000000000482e57 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000004145ba : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004107a8 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000004705b4 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e6dd : mov eax, esi ; pop rbx ; ret
0x00000000004107e3 : mov eax, esi ; ret
0x0000000000449802 : mov eax, esi ; syscall
0x000000000046f6e8 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004130fc : mov eax, r13d ; syscall
0x0000000000470282 : mov eax, r8d ; jmp 0x470256
0x0000000000449811 : mov eax, r8d ; syscall
0x0000000000466894 : mov eax, r9d ; ret
0x0000000000412e9e : mov eax, r9d ; syscall
0x00000000004a94d4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000049f9c4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a6a9d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004738b8 : mov ebp, 0xf80148c0 ; ret
0x0000000000473b3c : mov ebp, 0xf80148c6 ; ret
0x00000000004a8206 : mov ebp, 0xfb67d10d ; ret
0x0000000000469bde : mov ebp, 0xfffff730 ; call rax
0x000000000045e6cc : mov ebp, 0xfffff758 ; call rax
0x000000000046cbd9 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465ab5 : mov ebp, 0xffffff40 ; call rax
0x00000000004130f7 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048dd93 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000493154 : mov ebp, dword ptr [rdi + rsi*8 - 0x852d901] ; jmp qword ptr [rsi]
0x0000000000493268 : mov ebp, dword ptr [rdi + rsi*8 - 0x8537401] ; jmp qword ptr [rsi]
0x0000000000482e5d : mov ebp, ecx ; nop ; jmp rdx
0x0000000000482d2a : mov ebp, edi ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000424283 : mov ebp, edi ; sub rsp, 8 ; call 0x4004c8
0x00000000004a9224 : mov ebx, 0x1b5c347e ; jmp 0x4a91fc
0x0000000000491471 : mov ebx, 0x39480022 ; ret
0x0000000000435787 : mov ebx, 0x46f00ff2 ; retf
0x00000000004302e4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000430302 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000046c883 : mov ebx, 0x89000025 ; ret 0x349
0x000000000044dc11 : mov ebx, 0x8900027f ; ret
0x000000000044c604 : mov ebx, 0xafb8341 ; je 0x44c613 ; ret
0x00000000004a6a9b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400af0 : mov ebx, 0xe0ff006b ; nop dword ptr [rax] ; pop rbp ; ret
0x000000000042500b : mov ebx, 0xf480001 ; ret 0x66c3
0x00000000004a9844 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000404808 : mov ebx, dword ptr [rsp + 0x30] ; call 0x420aa6
0x0000000000424921 : mov ebx, edi ; jmp 0x4248f3
0x000000000045b066 : mov ebx, edi ; test rax, rax ; je 0x45b076 ; call rax
0x0000000000475a30 : mov ebx, esi ; sub rsp, 8 ; syscall
0x00000000004801ed : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040e166 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x0000000000475cec : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a76d9 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a91ae : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004640c3 : mov ecx, 0x8900020b ; ret
0x00000000004a4695 : mov ecx, 0xb7d0fffc ; cld ; call rax
0x00000000004a4701 : mov ecx, 0xb938fffc ; cld ; call rax
0x0000000000475f50 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000046c72a : mov ecx, 1 ; jmp rax
0x0000000000438d5c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042e10e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000004725eb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043b563 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a9664 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a9699 ; retf 0x32dd
0x0000000000430483 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430683 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430883 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004449a0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004449e1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435ef3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435e83 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435e13 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435d35 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435cc5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435c55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435be5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435a95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435fd5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444981 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000482307 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000482295 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472c21 : mov ecx, eax ; jmp 0x472beb
0x000000000044ee6b : mov ecx, ebp ; call rbx
0x0000000000417ae0 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000447762 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000417b1a : mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004748b5 : mov ecx, esi ; call rbx
0x000000000048cc3c : mov edi, 0x148015b ; retf
0x000000000045ff1a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400aac : mov edi, 0x6bbbd0 ; jmp rax
0x0000000000449e94 : mov edi, 0xffffff9c ; syscall
0x000000000048d5c6 : mov edi, 1 ; call r14
0x000000000048d51c : mov edi, 1 ; call rax
0x000000000048e28c : mov edi, 1 ; jmp rax
0x000000000040ef84 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044b45c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x00000000004130f6 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045e6cb : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000469bdd : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000465ab4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048dc11 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044af44 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e4e9 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044af1e : mov edi, dword ptr [rbx] ; call r12
0x000000000047cf6f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047fb46 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47fb29 ; ret
0x00000000004a84c6 : mov edi, dword ptr [rdx] ; ret
0x0000000000405a6e : mov edi, dword ptr [rip + 0x2b7f84] ; call 0x421d08
0x0000000000488aef : mov edi, dword ptr [rsp + 0x10] ; call 0x485506
0x000000000048f4ee : mov edi, dword ptr [rsp + 0x10] ; call r14
0x0000000000475d4e : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000482d34 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004515b5 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000451480 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000451e81 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000452059 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000451872 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000451b92 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004531b2 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000454799 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000453d4a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x00000000004564f6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000453767 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044a2a1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040175e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004176eb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044b021 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416ff6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048e3dc : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000423f64 : mov edi, eax ; call rcx
0x000000000040e170 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000422483 : mov edi, ebp ; call 0x41e724
0x0000000000423f11 : mov edi, ebp ; call 0x4201e4
0x000000000048a14e : mov edi, ebp ; call qword ptr [r14]
0x000000000048a222 : mov edi, ebp ; call qword ptr [rax]
0x000000000048a2fe : mov edi, ebp ; call qword ptr [rcx]
0x000000000045882c : mov edi, ebp ; call r12
0x000000000048f2cc : mov edi, ebp ; call r14
0x00000000004232e6 : mov edi, ebp ; call rax
0x0000000000474761 : mov edi, ebp ; call rbx
0x000000000044ad3a : mov edi, ebp ; mov eax, 9 ; syscall
0x0000000000412e9c : mov edi, ebp ; mov eax, r9d ; syscall
0x00000000004748b2 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040e579 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044f16e : mov edi, ebx ; call r14
0x0000000000413cc6 : mov edi, ebx ; call rax
0x000000000044a11e : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a3dc : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000041708d : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000004714ff : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a04e : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000403fbf : mov edi, edi ; call 0x4201e4
0x0000000000472978 : mov edi, edi ; call r12
0x0000000000411bf3 : mov edi, edi ; call rax
0x000000000044f75b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000484f21 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x484f09 ; mov rax, rsi ; ret
0x0000000000449800 : mov edi, edx ; mov eax, esi ; syscall
0x000000000044980f : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000458983 : mov edi, esi ; call rbx
0x0000000000458c61 : mov edi, esi ; call rdx
0x0000000000403a76 : mov edi, esp ; call 0x4004cc
0x000000000048e2e4 : mov edi, esp ; call r15
0x00000000004726a0 : mov edi, esp ; call rbx
0x000000000044a509 : mov edi, esp ; mov eax, 0x4f ; syscall
0x0000000000412e9b : mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000413466 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000455e5d : mov edx, 0x180 ; call 0x402147
0x0000000000455e39 : mov edx, 0x1be ; call 0x402147
0x0000000000455e84 : mov edx, 0x22f ; call 0x402147
0x0000000000435707 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000461862 : mov edx, 0x4800255e ; mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x00000000004304e4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000430502 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044dbf2 : mov edx, 0x8900027f ; ret
0x000000000045535e : mov edx, 0x89fffff3 ; retf 0xe283
0x0000000000494a65 : mov edx, 0xbc20fff9 ; stc ; jmp qword ptr [rax]
0x000000000048c451 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000451257 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047edec : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000485830 : mov edx, 5 ; jmp 0x402247
0x000000000045b834 : mov edx, 8 ; mov eax, ecx ; syscall
0x0000000000458c5a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048e3e0 : mov edx, dword ptr [rbp] ; call r12
0x00000000004855a9 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043f22f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d95d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004855bd : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048f2c9 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x00000000004449c2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004449b3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444a03 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444a13 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042fec1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000430280 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fb11 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000444fb0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000435f60 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000445001 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435da1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000444f91 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444971 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000482d39 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048d519 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x000000000040e17c : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000044a3de : mov edx, eax ; mov eax, 3 ; syscall
0x000000000048a149 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a21d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a2f9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a103 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475c40 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044c4f1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000495835 : mov edx, edi ; call qword ptr [rax]
0x0000000000448428 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000475ead : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040e17b : mov edx, r8d ; mov eax, 0xea ; syscall
0x00000000004562f9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000453842 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000476079 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000041a0ce : mov es, word ptr [rdi] ; sub al, byte ptr [rax] ; ret
0x0000000000494d70 : mov esi, 0x40fffa0c ; adc edi, edx ; call rax
0x000000000045118c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a9486 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000045897e : mov esi, 0x4cffff52 ; mov edi, esi ; call rbx
0x0000000000475eaf : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a9523 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004a760a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000403532 : mov esi, 0x80 ; call 7
0x000000000044c688 : mov esi, 0x80 ; syscall
0x00000000004502e2 : mov esi, 0x83480147 ; ret
0x0000000000462a31 : mov esi, 0x8900000b ; ret 0x349
0x000000000046c335 : mov esi, 0x8900002b ; ret 0x349
0x000000000047eef9 : mov esi, 0xaf0f4907 ; retf 0x14c
0x0000000000494a0d : mov esi, 0xb120fff9 ; stc ; jmp rax
0x00000000004650ee : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x0000000000494cf1 : mov esi, 0xc2a0fff9 ; stc ; push rax ; ret
0x00000000004a6a9e : mov esi, 0xc2c1c0bf ; ret
0x0000000000455e3a : mov esi, 0xe8000001 ; std ; ret 0xfffa
0x0000000000448894 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000004618b4 : mov esi, 1 ; jmp rax
0x000000000046f94c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044aeb8 : mov esi, 2 ; jmp rax
0x000000000044aecb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000459b64 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x459b76 ; call rsi
0x000000000048dc0d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f75e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048f4eb : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048e395 : mov esi, dword ptr [rsi] ; call r12
0x0000000000447793 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044ee66 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004232e1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000452054 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004531ad : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004564f1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000420ca1 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x000000000044a11c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a04c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423f61 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000422912 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412e99 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000422480 : mov esi, ebx ; mov rdi, r13 ; call 0x41e727
0x00000000004801f0 : mov esi, ebx ; syscall
0x000000000044aba5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000449e92 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048e28a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045e6c8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047ee53 : mov esi, edx ; cmp rcx, rsi ; jne 0x47ee38 ; ret
0x0000000000449dbc : mov esi, edx ; mov eax, 4 ; syscall
0x0000000000449e0a : mov esi, edx ; mov eax, 5 ; syscall
0x0000000000475bec : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000465ab1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048e2e1 : mov esi, esi ; mov rdi, r12 ; call r15
0x000000000048a14c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a220 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a2fc : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a106 : mov esi, esp ; mov edi, ebp ; call rax
0x00000000004714fc : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004448aa : mov esp, 0x1d8d4cd2 ; std ; syscall
0x000000000040d8bb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042bba1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042bbd1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042bbc1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004606d6 : mov esp, 0x8948006b ; ret 0x8148
0x0000000000418382 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000451d9d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000494a49 : mov esp, 0xbe50fff9 ; stc ; jmp rax
0x0000000000494a09 : mov esp, 0xbe90fff9 ; stc ; jmp qword ptr [rax]
0x0000000000465bc9 : mov esp, 0xc748006b ; ret 0xc2c8
0x00000000004412e3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000470754 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x000000000042bc8b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042bbb1 : mov esp, 0xf80148c0 ; ret
0x000000000042c0a2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000482e5a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048dd97 : mov esp, ecx ; ret
0x000000000044b460 : mov esp, esi ; call r15
0x0000000000452fbd : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x00000000004a7904 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a7977 ; salc ; retf
0x000000000045753d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a7903 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a7978 ; salc ; retf
0x000000000048b503 : mov qword ptr [r10], r8 ; ret
0x0000000000438d50 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044c7c0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000471148 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471188 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472187 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c826 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c840 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000047114c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472209 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000417e04 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c7c4 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004855cc : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000048551c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004011dd : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x20] ; leave ; ret
0x00000000004855c0 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d8b1 : mov qword ptr [rax], rdx ; ret
0x00000000004724fa : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047ce40 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048178e : mov qword ptr [rbp - 0x70], rax ; mov eax, 0x15 ; syscall
0x000000000047d7e0 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000458de1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004133e6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000048241d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004137ce : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000048012d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004862f2 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x4862c8
0x0000000000482352 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488b84 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488c58 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000416f80 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000418c1c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485d92 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048aaf8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000410870 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000048367e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000004451cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000444b3c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444b1c : mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444b7f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444b9f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444b60 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416e62 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047bde4 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047bdb6 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000416e92 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d8f0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044518c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000444adc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004451ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000444afc : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435d37 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435cc7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435c57 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435be7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044508a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435b77 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a2a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000004450aa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435b07 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a3a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004450ca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435a97 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444a4a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484aa3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000483603 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000484ded : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416e66 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004484fa : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447786 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d89b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042f9a4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f9e2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000048356e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042fd2b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435547 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff0b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004354c7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300fb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435447 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004302cc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004353b8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304cc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435328 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004306cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435298 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004834f9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042f9a8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f9e6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fb5b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc57 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fba3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004355c7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000469129 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004834c8 : mov qword ptr [rdi], r9 ; ret
0x0000000000445016 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444a06 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444a16 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000444a27 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444a37 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444a47 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004449f7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000435a9b : mov qword ptr [rdi], rcx ; ret
0x000000000044867e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000445003 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435da3 : mov qword ptr [rdi], rdx ; ret
0x0000000000438d4d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044778b : mov qword ptr [rdi], rsi ; ret
0x0000000000413464 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000004445aa : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000442d9a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000004445ca : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000442dba : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000004445ea : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000442dda : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046bd7f : mov qword ptr [rdx + 8], rax ; jmp 0x46bd55
0x000000000044447a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000442cca : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000418d8f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000444423 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000442c73 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004855ac : mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040223c : mov qword ptr [rdx], rax ; ret
0x00000000004850d7 : mov qword ptr [rip + 0x237f8a], rax ; ret
0x000000000047fa04 : mov qword ptr [rip + 0x23d9c5], rax ; ret
0x00000000004201c5 : mov qword ptr [rip + 0x29a694], rax ; ret
0x000000000041a0cb : mov qword ptr [rip + 0x2a078e], rax ; ret
0x0000000000419bc6 : mov qword ptr [rip + 0x2a0c23], rax ; ret
0x0000000000419b9e : mov qword ptr [rip + 0x2a0c43], rax ; ret
0x0000000000419b7e : mov qword ptr [rip + 0x2a0c5b], rax ; ret
0x0000000000419a74 : mov qword ptr [rip + 0x2a0dcd], rax ; ret
0x0000000000419a5a : mov qword ptr [rip + 0x2a0ddf], rax ; ret
0x0000000000419a42 : mov qword ptr [rip + 0x2a0de7], rdx ; ret
0x0000000000419a04 : mov qword ptr [rip + 0x2a0ded], rax ; ret
0x00000000004199f4 : mov qword ptr [rip + 0x2a0e05], rax ; ret
0x0000000000401df2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000478fd0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047fb71 : mov qword ptr [rsi], rax ; ret
0x000000000047eeb8 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000041d43e : mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409b1a : mov qword ptr [rsp + 8], rcx ; call 0x406627
0x0000000000411bed : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000048a2a2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413cc1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416fe4 : mov qword ptr [rsp], rdi ; call 0x413266
0x000000000040223b : mov qword ptr fs:[rdx], rax ; ret
0x0000000000447785 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044c4f0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000435706 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000430501 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x000000000045b833 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000435786 : mov r11d, 0x46f00ff2 ; retf
0x0000000000430301 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000044b45f : mov r12d, r14d ; call r15
0x000000000048dc0c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dc10 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048b500 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048debe : mov r8b, 0xe8 ; retf
0x000000000044ee6a : mov r9, r13 ; call rbx
0x00000000004748b4 : mov r9, r14 ; call rbx
0x0000000000418290 : mov rax, -1 ; ret
0x000000000045b770 : mov rax, 0xf ; syscall
0x0000000000474ed0 : mov rax, 1 ; ret
0x0000000000474ee0 : mov rax, 2 ; ret
0x0000000000474ef0 : mov rax, 3 ; ret
0x0000000000474f00 : mov rax, 4 ; ret
0x0000000000474f10 : mov rax, 5 ; ret
0x0000000000474f20 : mov rax, 6 ; ret
0x0000000000474f30 : mov rax, 7 ; ret
0x000000000048742e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047d385 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000412180 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000472613 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000482210 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000459c5f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x459c73 ; call rax
0x000000000046c726 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045b66e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046131c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d842 : mov rax, qword ptr [rax] ; ret
0x0000000000400dfd : mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x00000000004011e0 : mov rax, qword ptr [rbp - 0x20] ; leave ; ret
0x0000000000400d81 : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x000000000047cba0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000416fcc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004855c8 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004176b8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442c70 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000049142c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x491445 ; call rax
0x0000000000472610 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000419050 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d870 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d8c0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d900 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d960 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d950 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d910 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000461866 : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x00000000004884a0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4884b9 ; ret
0x0000000000418cf4 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418ce0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x418ce1 ; ret
0x000000000047faf9 : mov rax, qword ptr [rip + 0x23d8d0] ; ret
0x0000000000458060 : mov rax, qword ptr [rip + 0x264e11] ; ret
0x000000000044fb80 : mov rax, qword ptr [rip + 0x26ddc1] ; ret
0x0000000000419030 : mov rax, qword ptr [rip + 0x2a10e9] ; ret
0x000000000048e7b1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048b640 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048b613 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048b630 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e7d0 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046c6eb : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004618b0 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461f08 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d935 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044b025 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401762 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045376b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040e4ec : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048b0a9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046f6e7 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000485fac : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b3ed : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b29f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004230fe : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004740f0 : mov rax, r8 ; vzeroupper ; ret
0x000000000044ba03 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410a32 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004146f6 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048da6a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000415141 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410e84 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ac3f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004133ea : mov rax, rbx ; pop rbx ; ret
0x000000000047eebb : mov rax, rcx ; ret
0x00000000004132e2 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b534 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000413313 : mov rax, rdi ; ret
0x000000000041b134 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047597a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041aaec : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000448a05 : mov rax, rdx ; pop rbx ; ret
0x000000000041b140 : mov rax, rdx ; ret
0x00000000004107a7 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000041e6dc : mov rax, rsi ; pop rbx ; ret
0x00000000004107e2 : mov rax, rsi ; ret
0x000000000048dd92 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000482e5c : mov rbp, r9 ; nop ; jmp rdx
0x0000000000424282 : mov rbp, rdi ; sub rsp, 8 ; call 0x4004c9
0x0000000000404807 : mov rbx, qword ptr [rsp + 0x30] ; call 0x420aa7
0x0000000000424920 : mov rbx, rdi ; jmp 0x4248f4
0x000000000045b065 : mov rbx, rdi ; test rax, rax ; je 0x45b077 ; call rax
0x0000000000475a2f : mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004801ec : mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004449e0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000482306 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000482294 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472c20 : mov rcx, rax ; jmp 0x472bec
0x0000000000447761 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044bb1b : mov rdi, qword ptr [r13] ; call r12
0x000000000040e4e8 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040ef83 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044b45b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045e6ca : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000469bdc : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000465ab3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044af43 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044af1d : mov rdi, qword ptr [rbx] ; call r12
0x0000000000405a6d : mov rdi, qword ptr [rip + 0x2b7f84] ; call 0x421d09
0x0000000000488aee : mov rdi, qword ptr [rsp + 0x10] ; call 0x485507
0x000000000048f4ed : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x00000000004515b4 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000451e80 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452058 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451871 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000451b91 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004531b1 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453d49 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004564f5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416ff5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048e3db : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000403a75 : mov rdi, r12 ; call 0x4004cd
0x000000000048e2e3 : mov rdi, r12 ; call r15
0x000000000047269f : mov rdi, r12 ; call rbx
0x000000000044a508 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000422482 : mov rdi, r13 ; call 0x41e725
0x000000000045882b : mov rdi, r13 ; call r12
0x000000000048f2cb : mov rdi, r13 ; call r14
0x00000000004927a0 : mov rdi, r13 ; call rax
0x000000000040e578 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000458982 : mov rdi, r14 ; call rbx
0x0000000000458c60 : mov rdi, r14 ; call rdx
0x0000000000403fbe : mov rdi, r15 ; call 0x4201e5
0x0000000000472977 : mov rdi, r15 ; call r12
0x0000000000411bf2 : mov rdi, r15 ; call rax
0x000000000044f75a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000423f63 : mov rdi, rax ; call rcx
0x000000000040e16f : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000423f10 : mov rdi, rbp ; call 0x4201e5
0x00000000004232e5 : mov rdi, rbp ; call rax
0x0000000000474760 : mov rdi, rbp ; call rbx
0x000000000044ad39 : mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000004748b1 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000044f16d : mov rdi, rbx ; call r14
0x0000000000413cc5 : mov rdi, rbx ; call rax
0x000000000041708c : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004714fe : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048d518 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048f2c8 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048e3df : mov rdx, qword ptr [rbp] ; call r12
0x00000000004855a8 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004855bc : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042fb10 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435da0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000482d38 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000048a148 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a21c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a2f8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a102 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475c3f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000448427 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048e394 : mov rsi, qword ptr [r14] ; call r12
0x000000000048f4ea : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000459b63 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x459b77 ; call rsi
0x000000000044f75d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044ee65 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004232e0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000420ca0 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048a14b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a21f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a2fb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a105 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048e2e0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000044a04b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423f60 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000412e98 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000042247f : mov rsi, rbx ; mov rdi, r13 ; call 0x41e728
0x00000000004801ef : mov rsi, rbx ; syscall
0x0000000000449e91 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048e289 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047ee52 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47ee39 ; ret
0x0000000000449dbb : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000449e09 : mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000475beb : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000482e59 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048dd96 : mov rsp, rcx ; ret
0x000000000046d216 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000438d75 : mov word ptr [r9 - 2], cx ; ret
0x000000000044510c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000444a7c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445214 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000444b64 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435fd7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444fd8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004449b8 : mov word ptr [rdi + 4], dx ; ret
0x000000000044502a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000004449fa : mov word ptr [rdi + 8], dx ; ret
0x000000000044850a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000004477a4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004300ac : mov word ptr [rdi - 2], cx ; ret
0x000000000042fec4 : mov word ptr [rdi - 2], dx ; ret
0x00000000004300a8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000496dac : mov word ptr [rdi - 5], gs ; call rbx
0x0000000000496db8 : mov word ptr [rdi - 5], gs ; dec ecx ; jb 0x496dc1 ; call qword ptr [rax]
0x0000000000444983 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004474e2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000435fdb : mov word ptr [rdi], cx ; ret
0x0000000000448694 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000444f93 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000436043 : mov word ptr [rdi], dx ; ret
0x0000000000438d72 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004477a9 : mov word ptr [rdi], si ; ret
0x00000000004444f8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442d38 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004444a3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000442cf3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000491b87 : mov word ptr [rdx], fs ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004474e5 : mov word ptr [rsi - 2], cx ; ret
0x00000000004ac4ac : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x0000000000404dbb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004477a3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000447c77 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000046dcba : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000045f8da : movabs al, byte ptr [0xc8c0c748000000d8] ; ret 0x6b
0x000000000044ad87 : movabs byte ptr [0x89419c7401002720], al ; retf 0x9b9
0x00000000004a95c3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a9221 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x000000000041250a : movabs byte ptr [0xf6178b90660003a1], al ; ret 0xf08
0x0000000000482d29 : movabs dword ptr [0x894f75c085fffd89], eax ; ret
0x00000000004034e1 : movabs dword ptr [0xdfff00b7400002b], eax ; retf 0x2b92
0x00000000004a7667 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a7f1a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000044f0be : movaps xmmword ptr [rbp - 0x60], xmm0 ; call 0x44b3a6
0x000000000042e632 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042e62e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042e6dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040e15c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000444a50 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004452cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000444c1d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000435caf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435c3f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435bcf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435b5f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044526d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000444bbd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000435aef : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044528d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000444bdd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000435a7f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004452ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000444bfd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043609f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043602f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435fbf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f4f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435edf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e6f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435dff : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d8f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d1f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044847d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043520b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043527b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004450e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444a64 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444aa7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444a97 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444b18 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444ad8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444af8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444a78 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444c19 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444bb9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444bd9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444bf9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000435a2a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435a84 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a51 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004452ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000444c1e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435cb0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435c40 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435bd0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435b60 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044526e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000444bbe : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435af0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044528e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000444bde : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435a80 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004452ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000444bfe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004360a0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436030 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435fc0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f50 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435ee0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e70 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e00 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d90 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d20 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000448405 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044847e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043520c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043527c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004359b7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435937 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004358a7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435827 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004357a7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435727 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004356a7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435627 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004355a7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435527 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004354a7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435427 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435397 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435307 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435277 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004450e5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444a65 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444ab8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444aa8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444a98 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444b19 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444ad9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444af9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444a79 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444c1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444bba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444bda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444bfa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000435a2b : movq qword ptr [rdi], mm0 ; ret
0x0000000000435a85 : movq qword ptr [rdi], mm1 ; ret
0x00000000004abc10 : movsb byte ptr [rdi], byte ptr [rsi] ; adc dh, bh ; call rsp
0x00000000004abaf0 : movsb byte ptr [rdi], byte ptr [rsi] ; add dh, bh ; jmp rsp
0x0000000000457eac : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447705 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a8342 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000044dc18 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x44dc24 ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004abbd4 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xfe ; call rsp
0x00000000004b1ee0 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsi ; add byte ptr [rax], al ; cmp al, 0x6f ; cli ; jmp rax
0x00000000004476f7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046d378 : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a7225 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004800dc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004a983d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a9bd5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a9491 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000483522 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000494b95 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rax
0x00000000004a7f21 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048b4a4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000048160b : movsx eax, cl ; neg eax ; ret
0x00000000004816b0 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004250a1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043368b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042e10b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048c748 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000004028ae : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048d049 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b6f7 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048b4d1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048cc81 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044dd4e : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044dcd7 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000047c87d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046f4d6 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000047d1a5 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000046fb06 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000402645 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000449a43 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000046f36a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004488c7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000448981 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000004859fd : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000447397 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000447344 : movsxd rax, ecx ; ret
0x0000000000447389 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042ca3d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000444819 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004488ef : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000004473d7 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040db27 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045ae5f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000042e1df : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d83e : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000045a960 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004ad6ed : movsxd rsi, esi ; jmp rdx
0x00000000004467fc : movsxd rsi, esi ; ret 0x7520
0x00000000004478bf : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447946 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447947 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004478c0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004478bb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004478ba : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447942 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004476a2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447829 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000447806 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000044769f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048b4a5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475e81 : movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000488b5c : movzx eax, al ; neg eax ; ret
0x0000000000485409 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044eee0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415ee0 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e6fe : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004170e1 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004135be : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041916f : movzx eax, byte ptr [rax] ; ret
0x000000000046c6e7 : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000426438 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c7d0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c310 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426453 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004170f0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004135d0 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415ee1 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448950 : movzx eax, cl ; pop rbx ; ret
0x0000000000446e5a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446e59 ; ret
0x0000000000446f0a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446f09 ; ret
0x000000000042d8f4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000447778 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000426450 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c7d3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040e0c3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40e0ab ; ret
0x0000000000426611 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042aa88 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042c758 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000004264a3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446824 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446884 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446874 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446864 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446854 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446844 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446834 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004359d0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042d6a7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044680b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004360b0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042c313 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c339 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435950 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436040 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000473987 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000420c1a : neg byte ptr [rbx - 0x76b7ffd7] ; ret 0x8348
0x0000000000449d47 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004191af : neg eax ; ret
0x0000000000495744 : nop ; adc bh, dl ; call qword ptr [rax]
0x0000000000495700 : nop ; adc dl, bh ; call qword ptr [rax]
0x0000000000495708 : nop ; adc edi, edx ; call qword ptr [rax]
0x0000000000494f80 : nop ; adc edx, edi ; jmp qword ptr [rax]
0x0000000000435107 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044bb47 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bb58 ; call r12
0x000000000042cd5c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004760bc : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400c82 : nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044f01f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004884ff : nop ; add rsp, 8 ; ret
0x0000000000485def : nop ; call rax
0x000000000044f760 : nop ; call rsi
0x00000000004ac619 : nop ; cmc ; call qword ptr [rdx]
0x00000000004ac62d : nop ; cmc ; call rsp
0x0000000000495478 : nop ; cmp dl, bh ; jmp qword ptr [rax]
0x000000000044c82f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c828 ; ret
0x0000000000482e5f : nop ; jmp rdx
0x0000000000400be9 : nop ; leave ; ret
0x000000000042fcdf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000419bf3 : nop ; mov dword ptr [rip + 0x2a319a], eax ; ret
0x000000000042febf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000481791 : nop ; mov eax, 0x15 ; syscall
0x0000000000485a6f : nop ; mov eax, 0x27 ; syscall
0x0000000000475b6f : nop ; mov eax, 0x3f ; syscall
0x000000000044c51f : nop ; mov eax, 0x63 ; syscall
0x000000000047543f : nop ; mov eax, 0xc9 ; syscall
0x000000000044c5a4 : nop ; mov eax, 0xca ; syscall
0x000000000041750f : nop ; mov eax, 0xffffffff ; ret
0x000000000048047f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000043027f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000444faf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000494a0c : nop ; mov esi, 0xb120fff9 ; stc ; jmp rax
0x0000000000494a08 : nop ; mov esp, 0xbe90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004724f9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000419a73 : nop ; mov qword ptr [rip + 0x2a0dcd], rax ; ret
0x0000000000419a59 : nop ; mov qword ptr [rip + 0x2a0ddf], rax ; ret
0x0000000000419a03 : nop ; mov qword ptr [rip + 0x2a0ded], rax ; ret
0x00000000004199f3 : nop ; mov qword ptr [rip + 0x2a0e05], rax ; ret
0x000000000048d8bf : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048b62f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e7cf : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x00000000004736ff : nop ; mov rdi, rbp ; call 0x4201e6
0x00000000004736fe : nop ; mov rdi, rbp ; call 0x4201e7
0x0000000000444a4f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000495734 : nop ; or al, 0xfa ; call qword ptr [rax]
0x0000000000494fc0 : nop ; or dl, bh ; call qword ptr [rax]
0x00000000004004cf : nop ; ret
0x0000000000420ac4 : nop ; ret 0x29
0x00000000004b4b10 : nop ; retf 0xfffc
0x0000000000495720 : nop ; sbb al, 0xfa ; call qword ptr [rax]
0x0000000000495754 : nop ; sbb dl, bh ; call qword ptr [rax]
0x000000000049575c : nop ; sbb edi, edx ; call qword ptr [rax]
0x00000000004b19e0 : nop ; sbb edi, edx ; call qword ptr [rdi]
0x0000000000495718 : nop ; sbb edx, edi ; call qword ptr [rax]
0x00000000004958a8 : nop ; scasb al, byte ptr [rdi] ; cli ; jmp qword ptr [rax]
0x00000000004949c1 : nop ; stc ; call rax
0x0000000000494901 : nop ; stc ; jmp qword ptr [rcx]
0x00000000004956ec : nop ; sub dl, bh ; push rax ; or bh, dl ; call qword ptr [rax]
0x0000000000418d2f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000495828 : nop ; test dl, bh ; push qword ptr [rax] ; xchg dl, bh ; call rax
0x0000000000495848 : nop ; xchg eax, ecx ; cli ; push qword ptr [rax] ; xchg eax, ebx ; cli ; call rax
0x0000000000494cd0 : nop ; xlatb ; stc ; inc dword ptr [rax - 0x27] ; stc ; call qword ptr [rax]
0x00000000004952a0 : nop ; xor al, 0xfa ; jmp qword ptr [rax]
0x000000000041516f : nop ; xor eax, eax ; ret
0x000000000040f048 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041a6c8 : nop dword ptr [rax + rax] ; call rax
0x000000000044498b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400ab3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000412188 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a7b : nop dword ptr [rax + rax] ; ret
0x0000000000446d5b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000474e9c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000423efd : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x0000000000449d2c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x00000000004725f5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044a42d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000044a1ac : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041b13c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000042491c : nop dword ptr [rax] ; mov rbx, rdi ; jmp 0x4248f8
0x0000000000400af5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000448f7c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000041a6bd : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418e41 : nop dword ptr [rax] ; ret
0x00000000004150ad : nop dword ptr [rax] ; xor eax, eax ; jmp 0x41507d
0x0000000000417645 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000044a0a9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401854 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x000000000040f047 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041a6c7 : nop word ptr [rax + rax] ; call rax
0x000000000048537a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474c82 : nop word ptr [rax + rax] ; ret
0x0000000000448b5a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042ac07 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc3f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac35 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475fa2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000475f51 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041e70c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000429c28 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004742c8 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046c7dc : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000426436 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041e6da : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000413cc3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000419bca : or al, 0x2a ; add bl, dh ; ret
0x00000000004800d9 : or al, 0x37 ; jae 0x480087 ; xor eax, eax ; ret
0x0000000000424db0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000044a3fd : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416fe3 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x413267
0x0000000000401761 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004b1948 : or al, 0x59 ; add byte ptr [rax], al ; adc r15b, dl ; call rcx
0x00000000004857c3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004b1e64 : or al, 0x6f ; cli ; call qword ptr [rdx]
0x000000000046f603 : or al, 0x7e ; ret 0x8944
0x00000000004b03b4 : or al, 0x80 ; stc ; call qword ptr [rdx]
0x00000000004013f0 : or al, 0x81 ; retf 0x440
0x0000000000458da3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x458db7 ; ret
0x000000000045eb2b : or al, 0x83 ; ret
0x00000000004239e6 : or al, 0x83 ; retf 0x8902
0x00000000004488f1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x0000000000463d9a : or al, 0x89 ; ret 0xc689
0x000000000044897b : or al, 0x89 ; ret 0xe283
0x00000000004250a3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043b564 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000043368d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042e10d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000476078 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042ca3f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044481b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042e111 : or al, 0xb ; jmp r9
0x000000000044481f : or al, 0xb ; jmp rcx
0x0000000000456cdf : or al, 0xe9 ; ret
0x000000000047229c : or al, 0xeb ; ret 0x5590
0x000000000040450f : or al, 0xf ; retf 0xd289
0x0000000000435bd3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004674fd : or al, 0xf6 ; ret 0xf01
0x0000000000494779 : or al, 0xf9 ; jmp qword ptr [rax - 0x1f0006f3]
0x00000000004956f5 : or al, 0xfa ; call qword ptr [rax + 0x10fffa0d]
0x0000000000495735 : or al, 0xfa ; call qword ptr [rax]
0x0000000000494e31 : or al, 0xfa ; call qword ptr [rdx]
0x0000000000494d71 : or al, 0xfa ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x0000000000494e2d : or al, 0xfa ; jmp qword ptr [rdx + 0x12fffa0c]
0x0000000000494db1 : or al, 0xfa ; jmp qword ptr [rsi]
0x0000000000494f71 : or al, 0xfa ; jmp rax
0x0000000000494f6d : or al, 0xfa ; push qword ptr [rax + 0xc] ; cli ; jmp rax
0x00000000004abbd5 : or al, 0xfe ; call rsp
0x00000000004abf31 : or al, 0xfe ; jmp rsp
0x000000000041a036 : or al, 3 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004237a1 : or al, 9 ; ret 0xbae9
0x0000000000492f38 : or al, bh ; idiv bh ; sti ; div esi ; jmp rcx
0x000000000047427b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042ade7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e7d1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ae15 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048d5ea : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044ae11 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000428738 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000407bed : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040b07c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044cde6 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b494b : or al, byte ptr [rcx] ; ret
0x0000000000409b1e : or al, ch ; cld ; retf 0xffff
0x0000000000409a7d : or al, ch ; popfq ; retf
0x0000000000409bc4 : or al, ch ; push rsi ; retf 0xffff
0x000000000040c257 : or al, ch ; ret
0x000000000040b358 : or al, ch ; ret 0xffb2
0x000000000040774f : or al, ch ; retf
0x00000000004065c8 : or al, ch ; retf 0xff9e
0x00000000004b3819 : or bh, ah ; jmp qword ptr [rbx]
0x0000000000424c90 : or bh, dh ; ret 0
0x00000000004956f1 : or bh, dl ; call qword ptr [rax]
0x0000000000494fb5 : or bh, dl ; jmp qword ptr [rax + 0x10fffa09]
0x000000000041b13a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046bd81 : or bl, bpl ; retf
0x000000000040639d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048efdd : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046bd82 : or bl, ch ; retf
0x0000000000435d93 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044abb7 : or bl, dh ; ret
0x00000000004503d6 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000411f81 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e6ed : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000484def : or byte ptr [r8 + 2], r15b ; ret
0x000000000041204f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047fc1a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442cc8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000480105 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000479492 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040be72 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000484e34 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048d047 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442d87 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000411f82 : or byte ptr [rax + 0x29], cl ; ret
0x00000000004137b5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e6ee : or byte ptr [rax + 0x39], cl ; ret
0x0000000000452fb8 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000483318 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000419169 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004adb56 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000041a216 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000486fbc : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047df01 : or byte ptr [rax + 1], cl ; ret
0x0000000000484df0 : or byte ptr [rax + 2], bh ; ret
0x0000000000412050 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000419ab3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044b024 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044ba02 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe144176b
0x0000000000442ccd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047fc1b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044ac3e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041708b : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046bd7e : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x0000000000442cc9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047ffc0 : or byte ptr [rax - 0x77], cl ; ret
0x00000000004116cb : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x0000000000485cb3 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046bd7d : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x000000000047fb48 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000479493 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040be73 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000480106 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000041f750 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045c010 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044b3d2 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047bd47 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047e3b2 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044cca0 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000412666 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000472d0e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041afed : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041addb : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042b0b7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e971 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aff5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000417e07 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045b992 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045b835 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004489c5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044ef31 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044a1b1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004288b8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000420036 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x420009 ; ret
0x000000000042102c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d83c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000044002e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d83f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004861db : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000483271 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x0000000000485ed9 : or byte ptr [rbp + 0x440f4cf6], al ; ret 0x8b64
0x000000000048d8ae : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000482ef3 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041d882 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000049288e : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044aa2c : or byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc221
0x000000000044a533 : or byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xca21
0x0000000000487277 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000414086 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004022a5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b88e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041e7d7 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041e7d6 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000463a77 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000004103a9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044c684 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047bdb9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000484bdb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000484e35 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x0000000000481d5d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004798e2 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004798b4 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000468f39 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000004110a7 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048aa95 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000004705b3 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048d048 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046f5e9 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000488a1b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000483bd0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000048a21b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000411bf1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000484be2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044b8fb : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442d88 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000421308 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040da1a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044b0ca : or byte ptr [rcx - 0x77], cl ; retf
0x0000000000466c12 : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x000000000044b096 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041d886 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041515a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004b1144 : or byte ptr [rcx], dl ; add al, ch ; retf 0xfff9
0x00000000004a9e5e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047c330 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047c280 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004b4fbc : or byte ptr [rdi - 0x19300000], 0xfc ; jmp qword ptr [rcx]
0x0000000000454c4b : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000454fd7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004503d7 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000040f482 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475e80 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000488b5b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000404504 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042e6db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000483833 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000401821 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000472073 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x00000000004af1c8 : or byte ptr [rdx], cl ; idiv edi ; retf
0x00000000004a5660 : or byte ptr [rsi - 3], dh ; jmp rax
0x0000000000494f9c : or byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x000000000041a6a8 : or ch, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000458161 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004114e4 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000411047 : or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004730f2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045df1e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000048742d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000046de9b : or cl, ch ; jmp rsp
0x0000000000421786 : or cl, ch ; ret
0x0000000000414356 : or cl, ch ; retf
0x000000000047feb9 : or cl, ch ; retf 0xfffd
0x00000000004a9842 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000435cb3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048fbe5 : or dh, bl ; ret
0x00000000004a966a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000044d69c : or dh, dh ; ret 0x8902
0x000000000041b3d7 : or dh, dh ; ret 0xf02
0x00000000004b3818 : or dil, spl ; jmp qword ptr [rbx]
0x0000000000494d0c : or dl, 0xf9 ; call rax
0x0000000000494fc5 : or dl, bh ; call qword ptr [rax + 0x10fffa07]
0x0000000000494fc1 : or dl, bh ; call qword ptr [rax]
0x00000000004951c1 : or dl, bh ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004951bd : or dl, bh ; jmp qword ptr [rax]
0x0000000000495041 : or dl, bh ; jmp rdx
0x000000000047f1b2 : or dl, byte ptr [rbx] ; clc ; dec dword ptr [rbx + rcx*4 + 0x3d] ; retf
0x000000000042102a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044dcda : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040dfeb : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xffd8
0x00000000004294f7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045b1ce : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000044154e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000472f5b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042afc7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fedf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af05 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000412627 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044ad3d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000429f08 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045f435 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000402643 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a3ef7 : or dword ptr [rax], ecx ; retf
0x00000000004833f9 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a8fb3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042de76 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004137e0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004815e8 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000046fcf2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046d4c0 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a980e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000424c37 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000480476 : or dword ptr [rip + 0x23ad6b], 1 ; pop rbx ; ret
0x00000000004b4948 : or eax, 0x10a0303 ; ret
0x00000000004b49a0 : or eax, 0x1370303 ; ret
0x0000000000419b3b : or eax, 0x144002a ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000445271 : or eax, 0x1c478d48 ; ret
0x0000000000401a3b : or eax, 0x2bb3eb ; adc ch, cl ; ret
0x0000000000401a0d : or eax, 0x2bb419 ; add al, 0xeb ; mov byte ptr [rcx], bh ; ret 0x860f
0x00000000004b4938 : or eax, 0x34b0303 ; ret
0x00000000004b496c : or eax, 0x35b0303 ; ret
0x000000000046fb12 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046f37a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045b2da : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440b62 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000042ab17 : or eax, 0x83480000 ; ret 0x4910
0x000000000043e491 : or eax, 0x83480000 ; ret 0xe910
0x000000000042ab45 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000419f1c : or eax, 0x83480003 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000428438 : or eax, 0x894d0000 ; retf
0x0000000000491642 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000474b02 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000494dad : or eax, 0xcb6fffa ; cli ; jmp qword ptr [rsi]
0x0000000000494f25 : or eax, 0xd44fffa ; cli ; call rsp
0x000000000044fc7c : or eax, 0xd830000 ; retf 0x26d1
0x000000000049f719 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049f725 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a97f3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000454895 : or eax, 0xea810000 ; ret 0
0x000000000049477d : or eax, 0xee0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a9493 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000472f2b : or eax, 0xf480000 ; ret 0x66c3
0x0000000000435b63 : or eax, 0xf7f0ff3 ; ret
0x0000000000449d4d : or eax, 0xffffffff ; ret
0x000000000042c799 : or eax, 1 ; ret
0x000000000042acf7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e631 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad25 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044ade1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004285b8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004adb58 : or eax, dword ptr [rdx] ; jae 0x4adb6a ; ret
0x00000000004b5c82 : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000418d24 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004132fd : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461811 : or ebx, dword ptr [rsi + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000435d23 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000415186 : or ebx, esi ; ret
0x0000000000423cef : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000414077 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000004916bf : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004830d3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x000000000047fac3 : or ecx, ebx ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000494771 : or ecx, edi ; jmp qword ptr [rax]
0x0000000000495731 : or edi, edx ; call qword ptr [rax + 0x10fffa0c]
0x000000000044ad99 : or edx, 0x40 ; mov eax, ecx ; syscall
0x000000000046b811 : or edx, dword ptr [rbp] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000494fbd : or edx, edi ; call qword ptr [rax + 0x10fffa08]
0x0000000000494fb9 : or edx, edi ; call qword ptr [rax]
0x00000000004951b9 : or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000495039 : or edx, edi ; jmp rdx
0x0000000000495035 : or edx, edi ; push qword ptr [rdx + 9] ; cli ; jmp rdx
0x0000000000435c43 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045b9a4 : or esi, ebx ; ret
0x00000000004abf4d : or esi, edi ; jmp qword ptr [rcx]
0x00000000004137e1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ad352 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044ad98 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000435d92 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d22 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435cb2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435c42 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b5c81 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047feb8 : or r9b, bpl ; retf 0xfffd
0x0000000000458160 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b499f : or rax, 0x1370303 ; ret
0x00000000004b4937 : or rax, 0x34b0303 ; ret
0x00000000004b496b : or rax, 0x35b0303 ; ret
0x000000000046fb11 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046f379 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000449d4c : or rax, 0xffffffffffffffff ; ret
0x000000000042ad97 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004adb57 : or rax, qword ptr [rdx] ; jae 0x4adb6b ; ret
0x00000000004ad351 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000424f66 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424e26 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041a082 : out 0x2c, al ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048e2e5 : out 0x41, eax ; call rdi
0x0000000000486f69 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004714fd : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000423858 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004a9080 : out 0x78, al ; jnp 0x4a90e2 ; retf
0x000000000048a14d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x000000000048a221 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x000000000048a2fd : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x000000000048a107 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a7611 : out 0xb3, al ; retf 0xe80
0x00000000004a8340 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000419a45 : out 0xd, eax ; sub al, byte ptr [rax] ; ret
0x000000000044e578 : out 0xe8, eax ; ret 0xfddc
0x000000000046a4cf : out 0xe8, eax ; retf
0x0000000000405cba : out 0xeb, eax ; retf 0x8b49
0x000000000043552a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004355aa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004aa068 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004aed75 : out 0xf6, eax ; call qword ptr [rdx]
0x0000000000494bed : out 0xf9, al ; call qword ptr [rax]
0x00000000004b4fc1 : out 0xfc, al ; jmp qword ptr [rcx]
0x0000000000462632 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000045753e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a9497 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000424c4e : out dx, al ; jns 0x424c58 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000464174 : out dx, al ; mov dword ptr [rbp - 0xd0], ecx ; call 0x400441
0x000000000044a11d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a04d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042fd2a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000423f62 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044ad38 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000043593a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043fd8e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a97f2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a907f : out dx, al ; out 0x78, al ; jnp 0x4a90e3 ; retf
0x0000000000422913 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004208c6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000041face : out dx, al ; ret
0x00000000004b1ea9 : out dx, al ; std ; jmp qword ptr [rdi]
0x000000000048fb92 : out dx, al ; xlatb ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004182e9 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418341 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047c271 : out dx, eax ; and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000422484 : out dx, eax ; call 0x41e723
0x0000000000423f12 : out dx, eax ; call 0x4201e3
0x000000000048a14f : out dx, eax ; call qword ptr [r14]
0x000000000048a223 : out dx, eax ; call qword ptr [rax]
0x000000000048a2ff : out dx, eax ; call qword ptr [rcx]
0x000000000045882d : out dx, eax ; call r12
0x000000000048f2cd : out dx, eax ; call r14
0x00000000004232e7 : out dx, eax ; call rax
0x0000000000474762 : out dx, eax ; call rbx
0x00000000004aa0e5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044ad3b : out dx, eax ; mov eax, 9 ; syscall
0x0000000000412e9d : out dx, eax ; mov eax, r9d ; syscall
0x000000000042fb5a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc56 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fba2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004748b3 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040e57a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004359ba : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043fe8d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cec3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ce9b
0x000000000042cf41 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf19
0x000000000042d3d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d3ab
0x000000000042d451 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d429
0x000000000042cac3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cad8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042caed : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446fa3 : out dx, eax ; ret 0xf66
0x000000000044c975 : out dx, eax ; retf
0x0000000000446f86 : out dx, eax ; retf 0x4466
0x00000000004a97bb : out dx, eax ; retf 0xab0d
0x000000000042504a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042dfdc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042dfc5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042dfae : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ca6a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048b247 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043dd9e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004453ce : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000420da6 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000495ec4 : outsb dx, byte ptr [rsi] ; cmp eax, 0x3e66fffb ; sti ; call rsi
0x00000000004a9c43 : outsb dx, byte ptr [rsi] ; ja 0x4a9bcc ; ret 0x48f
0x000000000047df00 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004a8672 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a7984 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a8fb8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000419b62 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004b1e65 : outsd dx, dword ptr [rsi] ; cli ; call qword ptr [rdx]
0x00000000004b1ee5 : outsd dx, dword ptr [rsi] ; cli ; jmp rax
0x00000000004251f8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043971e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004302e2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004304e2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042dddd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042de7d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042d9a2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042da22 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000047398a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042dde2 : outsd dx, dword ptr [rsi] ; ret
0x000000000044d845 : outsd dx, dword ptr [rsi] ; ret 0x26
0x0000000000463e3d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000466bbd : outsd dx, dword ptr [rsi] ; ret 0x3ce8
0x000000000041ad2a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a8346 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041a762 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000430497 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000463e66 : outsd dx, dword ptr [rsi] ; ret 0x93e8
0x000000000042de82 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000466b99 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x00000000004739da : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000430362 : outsd dx, dword ptr [rsi] ; retf
0x000000000043d749 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000430562 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042d3ca : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042ceba : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000463e04 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000466b5f : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000496d81 : outsd dx, dword ptr [rsi] ; sti ; call rbx
0x0000000000496db9 : outsd dx, dword ptr [rsi] ; sti ; dec ecx ; jb 0x496dc0 ; call qword ptr [rax]
0x00000000004a8345 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042a9d2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000474e94 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x0000000000474e7f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a9d1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a9745 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a9746 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000448666 : pextrw edi, mm0, 0x77 ; ret
0x000000000042bb92 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42bbf9 ; xor eax, eax ; ret
0x00000000004b4fbd : pop qword ptr [rax] ; add al, dl ; out 0xfc, al ; jmp qword ptr [rcx]
0x000000000044c5b5 : pop r10 ; ret
0x00000000004a9bcf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044aed1 : pop r12 ; jmp rax
0x000000000044aeb6 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000004208c9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000422e4c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421af6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402cad : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040069f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fed9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041091e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040e079 : pop r12 ; pop r13 ; ret
0x0000000000406384 : pop r12 ; ret
0x00000000004208cb : pop r13 ; pop r14 ; jmp rax
0x0000000000422e4e : pop r13 ; pop r14 ; jmp rcx
0x0000000000421af8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402caf : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fedb : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410920 : pop r13 ; pop r14 ; ret
0x000000000040e07b : pop r13 ; ret
0x00000000004208cd : pop r14 ; jmp rax
0x0000000000422e50 : pop r14 ; jmp rcx
0x0000000000421afa : pop r14 ; pop r15 ; jmp rax
0x0000000000402cb1 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a3 : pop r14 ; pop r15 ; ret
0x000000000040fedd : pop r14 ; pop rbp ; ret
0x0000000000410922 : pop r14 ; ret
0x0000000000421afc : pop r15 ; jmp rax
0x0000000000402cb3 : pop r15 ; pop rbp ; ret
0x00000000004006a5 : pop r15 ; ret
0x000000000041f074 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000045f7f9 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045e72d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbc20
0x000000000048229c : pop rax ; jmp qword ptr [rax]
0x000000000049288d : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004b1ea8 : pop rax ; out dx, al ; std ; jmp qword ptr [rdi]
0x0000000000482356 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004005af : pop rax ; ret
0x00000000004a9b23 : pop rax ; retf
0x0000000000494855 : pop rax ; stc ; push qword ptr [rax + 0x59] ; stc ; jmp rax
0x000000000048f6f1 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004afff8 : pop rax ; xchg eax, ebx ; clc ; call qword ptr [rax]
0x00000000004ac2b1 : pop rbp ; cmc ; call qword ptr [rcx]
0x00000000004a95c5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000417090 : pop rbp ; jmp rax
0x0000000000475cc8 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000487383 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400aab : pop rbp ; mov edi, 0x6bbbd0 ; jmp rax
0x00000000004a7f20 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041a6a7 : pop rbp ; or ch, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000044aed0 : pop rbp ; pop r12 ; jmp rax
0x000000000044aeb5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004208c8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000422e4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421af5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040069e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041091d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040e078 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000406383 : pop rbp ; pop r12 ; ret
0x00000000004208cc : pop rbp ; pop r14 ; jmp rax
0x0000000000422e4f : pop rbp ; pop r14 ; jmp rcx
0x0000000000421af9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402cb0 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040fedc : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000410921 : pop rbp ; pop r14 ; ret
0x0000000000484be8 : pop rbp ; pop rbx ; ret
0x0000000000400ab8 : pop rbp ; ret
0x0000000000485851 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048cc3d : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a6f18 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004489b6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004957d9 : pop rbx ; cli ; call rax
0x00000000004a6f16 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416fd4 : pop rbx ; jmp rax
0x0000000000480497 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000448a01 : pop rbx ; mov eax, eax ; ret
0x000000000046695d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000417b19 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000485fab : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b533 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004107a6 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000040fed8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004581bc : pop rbx ; pop r12 ; ret
0x000000000048b2c9 : pop rbx ; pop r14 ; ret
0x000000000041708f : pop rbx ; pop rbp ; jmp rax
0x0000000000471501 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044aeb4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004208c7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000422e4a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000410954 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040e077 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000406382 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400c87 : pop rbx ; pop rbp ; ret
0x00000000004013b8 : pop rbx ; ret
0x000000000041e621 : pop rbx ; ret 0x29
0x00000000004aa200 : pop rbx ; ret 0x6f9
0x00000000004a76dd : pop rbx ; retf
0x000000000044e8b0 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000040639e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000417ae2 : pop rbx ; xor edx, edx ; jmp rax
0x00000000004b1949 : pop rcx ; add byte ptr [rax], al ; adc r15b, dl ; call rcx
0x00000000004b19dd : pop rcx ; add byte ptr [rax], al ; nop ; sbb edi, edx ; call qword ptr [rdi]
0x000000000042a7a7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000487ec2 : pop rcx ; and eax, dword ptr [rax] ; jne 0x487ef4 ; ret
0x00000000004957d5 : pop rcx ; cli ; push qword ptr [rax] ; pop rbx ; cli ; call rax
0x000000000042ae87 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045dadb : pop rcx ; ret
0x0000000000477e88 : pop rcx ; retf
0x0000000000490f5b : pop rcx ; retf 0x22
0x000000000045f183 : pop rcx ; sbb al, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000494859 : pop rcx ; stc ; jmp rax
0x000000000042e6d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b1f79 : pop rdi ; add byte ptr [rax], al ; adc al, 0x72 ; cli ; call rdi
0x00000000004b1fbd : pop rdi ; add byte ptr [rax], al ; mov al, 0x74 ; cli ; call qword ptr [rsi]
0x000000000044051d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000461b73 : pop rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004300f9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ff09 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a94be : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000421afd : pop rdi ; jmp rax
0x0000000000496d60 : pop rdi ; jno 0x496d65 ; ljmp ptr [rdx] ; jno 0x496d69 ; jmp rdx
0x00000000004a8481 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044bba2 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b0c9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044b095 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042fd29 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fb59 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc55 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fba1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000402cb4 : pop rdi ; pop rbp ; ret
0x00000000004006a6 : pop rdi ; ret
0x0000000000494869 : pop rdi ; stc ; inc dword ptr [rax + 0x4a] ; stc ; jmp qword ptr [rax]
0x000000000042b386 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004a90a1 : pop rdx ; je 0x4a906b ; ret 0xacfc
0x00000000004a91b3 : pop rdx ; leave ; retf
0x00000000004aa067 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044c5b4 : pop rdx ; pop r10 ; ret
0x0000000000482357 : pop rdx ; pop rbx ; ret
0x000000000049586e : pop rdx ; pop rdx ; xor byte ptr [rdx + rdi*8 - 0x5627f01], bl ; call rax
0x000000000044c5d9 : pop rdx ; pop rsi ; ret
0x000000000044a025 : pop rdx ; ret
0x00000000004a9083 : pop rdx ; retf
0x00000000004a9bd0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000049586f : pop rdx ; xor byte ptr [rdx + rdi*8 - 0x5627f01], bl ; call rax
0x000000000042cec4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ce9a
0x000000000042cf42 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf18
0x000000000042d3d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d3aa
0x000000000042d452 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d428
0x000000000044041e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b1ee1 : pop rsi ; add byte ptr [rax], al ; cmp al, 0x6f ; cli ; jmp rax
0x00000000004b1e61 : pop rsi ; add byte ptr [rax], al ; or al, 0x6f ; cli ; call qword ptr [rdx]
0x00000000004b1ea5 : pop rsi ; add byte ptr [rax], al ; pop rax ; out dx, al ; std ; jmp qword ptr [rdi]
0x0000000000461812 : pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004ac331 : pop rsi ; cmc ; call qword ptr [rcx]
0x0000000000458956 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004208ce : pop rsi ; jmp rax
0x0000000000422e51 : pop rsi ; jmp rcx
0x000000000046d0be : pop rsi ; mov cl, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000044bb72 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000421afb : pop rsi ; pop r15 ; jmp rax
0x0000000000402cb2 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004006a4 : pop rsi ; pop r15 ; ret
0x000000000040fede : pop rsi ; pop rbp ; ret
0x0000000000410923 : pop rsi ; ret
0x000000000043dfb0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b684 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ecb0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041d43b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000404809 : pop rsp ; and al, 0x30 ; call 0x420aa5
0x000000000044aed2 : pop rsp ; jmp rax
0x000000000044aeb7 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000004208ca : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x0000000000422e4d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421af7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402cae : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040feda : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041091f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040e07a : pop rsp ; pop r13 ; ret
0x0000000000461bc0 : pop rsp ; pop rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000402453 : pop rsp ; ret
0x0000000000402516 : pop rsp ; retf
0x00000000004830ba : pop rsp ; retf 0x4df0
0x00000000004a9227 : pop rsp ; sbb ebp, ebx ; retf
0x00000000004708cc : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000040fe84 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046b4cd : popfq ; call 0xffffffffc3cab4d7
0x0000000000495875 : popfq ; cli ; call rax
0x000000000046b20f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a91ac : popfq ; jrcxz 0x4a9171 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000048ce0e : popfq ; ret 0xf45
0x0000000000409a7f : popfq ; retf
0x00000000004a9f62 : popfq ; retf 0xde4f
0x000000000045a21b : popfq ; retf 3
0x00000000004b6771 : popfq ; std ; jmp qword ptr [rax]
0x0000000000435a82 : psllq mm1, qword ptr [r15] ; jg 0x435a9d ; ret
0x00000000004385a2 : psllq mm1, qword ptr [r15] ; jg 0x4385bd ; ret
0x0000000000435a83 : psllq mm1, qword ptr [rdi] ; jg 0x435a9c ; ret
0x00000000004385a3 : psllq mm1, qword ptr [rdi] ; jg 0x4385bc ; ret
0x0000000000444a96 : psllq mm1, qword ptr [rdi] ; jg 0x444aaa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444a95 : psllq mm1, qword ptr [rdi] ; jg 0x444aab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444af7 : psllq mm1, qword ptr [rdi] ; jg 0x444b0c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004956fd : psubd mm7, mm7 ; nop ; adc dl, bh ; call qword ptr [rax]
0x000000000042122c : push -0x17fff8d5 ; retf
0x00000000004a7f84 : push -0x30 ; retf 0xe72e
0x00000000004a760e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a97b5 : push -0x57d3205 ; call 0xffffffffab5862b5
0x00000000004a77c1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b0fa4 : push -0x67ffffb1 ; mov bh, 0xf9 ; call qword ptr [rcx]
0x000000000045ec22 : push -0x7c000003 ; ret
0x00000000004453b4 : push -0x9ffffff ; ret 0x7501
0x0000000000419973 : push -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004967cd : push -5 ; dec dword ptr [rax + 0x6a] ; sti ; jmp qword ptr [rax]
0x00000000004967a9 : push -5 ; jmp qword ptr [rax]
0x00000000004a8fb5 : push 0x1b6e41b5 ; std ; retf
0x00000000004125cd : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047a265 : push 0x48b4901 ; and al, 0x83 ; ret
0x0000000000458c5c : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004b1ea4 : push 0x5800005e ; out dx, al ; std ; jmp qword ptr [rdi]
0x00000000004967b9 : push 0x6834fffb ; sti ; call rax
0x00000000004967a5 : push 0x6af0fffb ; sti ; jmp qword ptr [rax]
0x00000000004a9c42 : push 0x6e ; ja 0x4a9bcd ; ret 0x48f
0x0000000000418125 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000416a07 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x0000000000417d4a : push 0x75c08548 ; ret
0x0000000000485c72 : push 0x7c ; and eax, dword ptr [rax] ; ret
0x00000000004a9522 : push 0xfd4cbe ; retf 0xf64
0x000000000041dc0d : push 7 ; add byte ptr [rax - 0x17], dl ; ret
0x0000000000494f87 : push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x00000000004952a7 : push qword ptr [rax + 0x40fffa33] ; xor edi, edx ; call rsi
0x0000000000494857 : push qword ptr [rax + 0x59] ; stc ; jmp rax
0x00000000004967cb : push qword ptr [rax + 0x6a] ; sti ; dec dword ptr [rax + 0x6a] ; sti ; jmp qword ptr [rax]
0x0000000000494f6f : push qword ptr [rax + 0xc] ; cli ; jmp rax
0x00000000004951eb : push qword ptr [rax + 2] ; cli ; call qword ptr [rax]
0x0000000000494fe7 : push qword ptr [rax + 3] ; cli ; jmp rax
0x00000000004967bb : push qword ptr [rax + rbp*2] ; sti ; call rax
0x00000000004967b7 : push qword ptr [rax + rbp*2] ; sti ; push qword ptr [rax + rbp*2] ; sti ; call rax
0x00000000004967a3 : push qword ptr [rax + rbp*2] ; sti ; push rax ; push -5 ; jmp qword ptr [rax]
0x0000000000494d17 : push qword ptr [rax - 0x32] ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x000000000049596b : push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004958ef : push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; jmp rax
0x00000000004957b7 : push qword ptr [rax - 0x3f0005b6] ; cli ; call rax
0x0000000000494b9f : push qword ptr [rax - 0x57] ; stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x0000000000495853 : push qword ptr [rax - 0x6a] ; cli ; call qword ptr [rax]
0x0000000000495833 : push qword ptr [rax - 0x77] ; cli ; call qword ptr [rax]
0x00000000004946c7 : push qword ptr [rax - 0x7f00070a] ; cmc ; clc ; call rax
0x000000000049519f : push qword ptr [rax] ; add al, 0xfa ; jmp qword ptr [rax + 0x10fffa03]
0x0000000000494c57 : push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048e7ad : push qword ptr [rax] ; jne 0x48e7e0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f60d : push qword ptr [rax] ; jne 0x48f640 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494afb : push qword ptr [rax] ; mov ch, 0xf9 ; jmp qword ptr [rax]
0x0000000000494b13 : push qword ptr [rax] ; mov cl, 0xf9 ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494a7b : push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x00000000004951b7 : push qword ptr [rax] ; or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x00000000004957d7 : push qword ptr [rax] ; pop rbx ; cli ; call rax
0x0000000000494867 : push qword ptr [rax] ; pop rdi ; stc ; inc dword ptr [rax + 0x4a] ; stc ; jmp qword ptr [rax]
0x00000000004956af : push qword ptr [rax] ; sub dl, bh ; call rax
0x000000000049582b : push qword ptr [rax] ; xchg dl, bh ; call rax
0x000000000049584b : push qword ptr [rax] ; xchg eax, ebx ; cli ; call rax
0x000000000049482b : push qword ptr [rax] ; xor bh, cl ; call qword ptr [rax]
0x0000000000446d38 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044af68 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af40 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bb70 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bba0 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042c749 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000472048 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000417b4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047206e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000494f23 : push qword ptr [rbp + rcx + 0xd44fffa] ; cli ; call rsp
0x000000000047fb4b : push qword ptr [rbp - 0x2e] ; ret
0x0000000000418380 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000461e43 : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45e0e9
0x0000000000449d3c : push qword ptr [rbx + 1] ; ret
0x0000000000494917 : push qword ptr [rcx + 0x41fff993] ; xchg eax, esp ; stc ; call rcx
0x000000000045f5a4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a94f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041612f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455613 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000459edd : push qword ptr [rcx] ; shr cl, cl ; retf
0x000000000044980b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044a3c6 : push qword ptr [rdi + 0x3f] ; ret
0x000000000044a0f6 : push qword ptr [rdi + 0x57] ; ret
0x000000000044a023 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045b9a2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000449dca : push qword ptr [rdi + 3] ; ret
0x000000000044a0b9 : push qword ptr [rdi + 4] ; ret
0x0000000000449e18 : push qword ptr [rdi + 5] ; ret
0x0000000000475c4e : push qword ptr [rdi + 7] ; ret
0x000000000044abb5 : push qword ptr [rdi + 8] ; ret
0x000000000044a18c : push qword ptr [rdi + 9] ; ret
0x0000000000475b04 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004955f7 : push qword ptr [rdi + rbp - 6] ; jmp rsp
0x0000000000495037 : push qword ptr [rdx + 9] ; cli ; jmp rdx
0x000000000049495f : push qword ptr [rsi + 0x46fff994] ; xchg eax, ebp ; stc ; jmp rsi
0x0000000000494db7 : push qword ptr [rsi + 0x46fffa12] ; adc bh, dl ; call rsi
0x0000000000478b7a : push qword ptr [rsi + rbx - 0x17] ; retf
0x000000000049541b : push qword ptr [rsp + rsi + 0x3444fffa] ; cli ; call rsp
0x0000000000416f82 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a766c : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000047114a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418d31 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041ce8d : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004554cf : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000416f83 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b048c : push rax ; add byte ptr [rax], r8b ; jo 0x4b041b ; stc ; call qword ptr [rbx]
0x0000000000401500 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004947bb : push rax ; and edi, ecx ; call qword ptr [rax]
0x0000000000461e49 : push rax ; call 0x45e0e3
0x000000000044eee8 : push rax ; call rbx
0x0000000000495997 : push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000495680 : push rax ; cli ; call rax
0x0000000000495290 : push rax ; cli ; jmp rax
0x0000000000470c74 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494d44 : push rax ; enter -7, -0x60 ; leave ; stc ; push rax ; retf 0xfff9
0x0000000000494cdb : push rax ; fdiv st(1), st(0) ; jmp rax
0x0000000000494c70 : push rax ; fdivr st(1) ; call qword ptr [rax]
0x0000000000495953 : push rax ; idiv dl ; call qword ptr [rax]
0x0000000000495977 : push rax ; idiv edx ; call qword ptr [rax]
0x00000000004958fb : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000495818 : push rax ; jl 0x495818 ; call rax
0x0000000000472699 : push rax ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a76da : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000494a78 : push rax ; mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494af8 : push rax ; mov bl, 0xf9 ; push qword ptr [rax] ; mov ch, 0xf9 ; jmp qword ptr [rax]
0x00000000004949f3 : push rax ; mov dl, 0xf9 ; call rax
0x0000000000451191 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000494a48 : push rax ; mov esp, 0xbe50fff9 ; stc ; jmp rax
0x00000000004949c0 : push rax ; nop ; stc ; call rax
0x00000000004956ef : push rax ; or bh, dl ; call qword ptr [rax]
0x0000000000419ab2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041adda : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b88d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041d885 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044d69b : push rax ; or dh, dh ; ret 0x8902
0x000000000041e5d2 : push rax ; or dh, dh ; ret 0xf02
0x0000000000495730 : push rax ; or edi, edx ; call qword ptr [rax + 0x10fffa0c]
0x0000000000482b0e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488d05 : push rax ; pop rbx ; ret
0x00000000004967a7 : push rax ; push -5 ; jmp qword ptr [rax]
0x0000000000478b79 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004957c7 : push rax ; push rdx ; cli ; inc dword ptr [rax] ; push rbp ; cli ; call qword ptr [rax]
0x0000000000451193 : push rax ; push rsp ; ret
0x0000000000494cf7 : push rax ; ret
0x00000000004a9f80 : push rax ; retf
0x0000000000494d4b : push rax ; retf 0xfff9
0x00000000004ac7d0 : push rax ; sahf ; cmc ; jmp qword ptr [rax]
0x000000000041c19c : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000418d26 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000472189 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000049487b : push rax ; stc ; jmp rax
0x000000000044ba9d : push rax ; std ; push rbx ; ret
0x00000000004b1700 : push rax ; sti ; stc ; call qword ptr [rax]
0x00000000004947db : push rax ; sub al, 0xf9 ; call qword ptr [rax]
0x0000000000495690 : push rax ; sub al, 0xfa ; call rax
0x0000000000495698 : push rax ; sub edi, edx ; call rax
0x00000000004949c8 : push rax ; xchg eax, ecx ; stc ; call rax
0x00000000004949d0 : push rax ; xchg eax, edx ; stc ; call rax
0x0000000000494b30 : push rax ; xchg eax, esi ; stc ; call qword ptr [rax - 0x1f000666]
0x00000000004a766d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049548f : push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x00000000004954a8 : push rax ; xor edi, edx ; jmp rax
0x000000000048a6ca : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048d172 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b15c5 : push rbp ; add byte ptr [rax], al ; test al, 0xf6 ; std ; jmp qword ptr [rdx]
0x00000000004802b8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004957cd : push rbp ; cli ; call qword ptr [rax]
0x000000000041101d : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000464206 : push rbp ; cwde ; shl rdx, 3 ; call 0x400440
0x0000000000481d5c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000475a2d : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004b65c6 : push rbp ; ret
0x00000000004b5c99 : push rbp ; std ; call qword ptr [rdx]
0x0000000000411356 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040164f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048012f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000485407 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b13bd : push rbx ; add byte ptr [rax], al ; int1 ; hlt ; jmp qword ptr [rbx]
0x00000000004137b8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000447f25 : push rbx ; jb 0x447f35 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000472082 : push rbx ; je 0x4720e6 ; pop rbp ; pop r12 ; ret
0x000000000047210e : push rbx ; je 0x472172 ; pop rbp ; pop r12 ; ret
0x0000000000475a2e : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004137b4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044ba9f : push rbx ; ret
0x0000000000494849 : push rbx ; stc ; jmp qword ptr [rax]
0x00000000004a909c : push rbx ; xchg eax, edx ; jae 0x4a907b ; push rsi ; pop rdx ; je 0x4a9070 ; ret 0xacfc
0x000000000041f3e2 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b70b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b927 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b1159 : push rcx ; add byte ptr [rax], al ; in al, 0xca ; stc ; jmp qword ptr [rdx]
0x000000000044bf3b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a8325 : push rcx ; call qword ptr [rsi]
0x000000000045f096 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000438edd : push rcx ; jl 0x438f2e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439044 : push rcx ; jl 0x439095 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004798e1 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004798b3 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000041a21d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000042e0e3 : push rcx ; shr byte ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000040452e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044b328 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040451e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000444fda : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000435be9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000044508c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045e76f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042f9e8 : push rdi ; clc ; ret
0x000000000042fb60 : push rdi ; cld ; ret
0x00000000004957d1 : push rdi ; cli ; jmp qword ptr [rax]
0x0000000000430687 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004354c9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000470785 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000435449 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043529a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000416e94 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043532a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040450e : push rdi ; or al, 0xf ; retf 0xd289
0x0000000000484bda : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488a1a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000484be1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000404503 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041b3d6 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000445270 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042ddde : push rdi ; ret
0x000000000042de7e : push rdi ; ret 0xff3
0x000000000042d9a3 : push rdi ; retf
0x000000000042da23 : push rdi ; retf 0xcab2
0x0000000000419b40 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045e773 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000404542 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000430887 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300aa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430487 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047398b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042bb98 : push rdi ; xor eax, eax ; ret
0x0000000000494e44 : push rdx ; adc edx, edi ; jmp rdx
0x00000000004957c9 : push rdx ; cli ; inc dword ptr [rax] ; push rbp ; cli ; call qword ptr [rax]
0x000000000049533c : push rdx ; cmp dl, bh ; jmp rdx
0x0000000000424fda : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000495033 : push rdx ; or edx, edi ; push qword ptr [rdx + 9] ; cli ; jmp rdx
0x000000000045118d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042cac4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004475c9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x447620 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000041b686 : push rsi ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000004b16fd : push rsi ; add byte ptr [rax], al ; push rax ; sti ; stc ; call qword ptr [rax]
0x0000000000435e81 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435ef1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000444a25 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435e11 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004449c3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042cad9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fb12 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430281 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042feb5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430095 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430275 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fcd5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a9c40 : push rsi ; cli ; push 0x6e ; ja 0x4a9bcf ; ret 0x48f
0x0000000000446876 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000458c2e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000446866 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000446836 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a90a0 : push rsi ; pop rdx ; je 0x4a906c ; ret 0xacfc
0x00000000004a6fe6 : push rsi ; ret
0x0000000000409bc6 : push rsi ; retf 0xffff
0x0000000000469c91 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000045895a : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045eb83 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446846 : push rsi ; sub eax, edx ; ret
0x00000000004a7668 : push rsi ; xchg eax, ebp ; jge 0x4a764d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042caee : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494f0c : push rsp ; adc dl, bh ; jmp rsp
0x0000000000475eb1 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000482d3a : push rsp ; and al, 0x10 ; call rdx
0x000000000041d4f8 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000451194 : push rsp ; ret
0x0000000000403b2a : push rsp ; ret 0x4820
0x0000000000481c61 : push rsp ; ret 0xeb30
0x00000000004831b5 : push rsp ; retf 0x48f8
0x0000000000404457 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004a986a : push rsp ; syscall
0x00000000004b000c : push rsp ; xchg eax, ebx ; clc ; jmp qword ptr [rsi]
0x000000000043dc70 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000462f76 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044bb17 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bb28 ; call r12
0x00000000004b5c6d : pushfq ; add byte ptr [rax], al ; rcl byte ptr [rbx - 3], 0xff ; ret
0x000000000045172a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000047a45f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004175bb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc20
0x000000000043e970 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ab44 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048ce47 : pushfq ; ret 0xf45
0x00000000004949c4 : rcl byte ptr [rax - 0x6eaf0007], 1 ; stc ; call rax
0x00000000004b110c : rcl byte ptr [rax], 1 ; add al, al ; retf 0xfff9
0x00000000004b5c70 : rcl byte ptr [rbx - 3], 0xff ; ret
0x00000000004949cc : rcl byte ptr [rcx - 0x6daf0007], 1 ; stc ; call rax
0x00000000004a99b1 : rcl byte ptr [rdi], cl ; retf
0x00000000004b530c : rcl byte ptr [rdx + 0x2600000], 1 ; std ; jmp rdx
0x0000000000495850 : rcl byte ptr [rdx + rdi*8 - 0x5698f01], 1 ; call qword ptr [rax]
0x00000000004b16fc : rcl byte ptr [rsi], 0 ; push rax ; sti ; stc ; call qword ptr [rax]
0x0000000000494d64 : rcl dl, 1 ; stc ; jmp qword ptr [rax]
0x00000000004a94da : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a909f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a906d ; ret 0xacfc
0x00000000004a94d9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a909b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a9071 ; ret 0xacfc
0x000000000047fafc : rcr al, 1 ; and eax, dword ptr [rax] ; ret
0x0000000000485232 : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x0000000000473773 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004063a0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046695f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000484be7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000450122 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004128c6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040f266 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048da78 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x0000000000468f3b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000410612 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a94bd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000482e99 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a9811 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000406ac9 : rcr dword ptr [rdi - 0x76b3ffff], cl ; imul eax ; retf
0x0000000000447704 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004476f6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044842a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041f6c1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000400416 : ret
0x00000000004006d7 : ret 0
0x000000000049fb20 : ret 0x10
0x000000000047bd4a : ret 0x101
0x0000000000484bbc : ret 0x114d
0x0000000000458164 : ret 0x1176
0x00000000004802bc : ret 0x1272
0x0000000000481520 : ret 0x12e8
0x000000000047ce53 : ret 0x13e9
0x000000000048b2e1 : ret 0x145
0x0000000000484066 : ret 0x1474
0x00000000004798e8 : ret 0x1475
0x0000000000475f61 : ret 0x1477
0x00000000004467d8 : ret 0x148
0x0000000000404d94 : ret 0x149
0x000000000043929f : ret 0x14d
0x00000000004247c4 : ret 0x14eb
0x000000000040b1da : ret 0x158
0x000000000040adda : ret 0x15c
0x000000000046cbe1 : ret 0x1674
0x0000000000449c3e : ret 0x16e9
0x00000000004279ca : ret 0x17
0x000000000042c076 : ret 0x1776
0x000000000040b082 : ret 0x18
0x00000000004391dc : ret 0x180f
0x000000000042bc05 : ret 0x1876
0x000000000045815b : ret 0x1a72
0x00000000004a9a1a : ret 0x1ad4
0x0000000000408242 : ret 0x1b
0x00000000004a81ad : ret 0x1b49
0x000000000048f3af : ret 0x1be8
0x0000000000424e9a : ret 0x1c6
0x000000000045d699 : ret 0x1ce9
0x00000000004a17f0 : ret 0x1d4
0x00000000004a1f88 : ret 0x1d5
0x0000000000401211 : ret 0x1d89
0x000000000040f122 : ret 0x1f0f
0x000000000041f3e6 : ret 0x1f77
0x000000000045a9bd : ret 0x1fe9
0x000000000045b617 : ret 0x200
0x000000000042423a : ret 0x203
0x000000000044a70c : ret 0x2044
0x0000000000462637 : ret 0x20be
0x00000000004768ec : ret 0x2148
0x000000000041422d : ret 0x214c
0x00000000004137bc : ret 0x2175
0x0000000000491556 : ret 0x22
0x000000000047f058 : ret 0x2275
0x0000000000441548 : ret 0x2288
0x0000000000424faa : ret 0x22a
0x0000000000490e82 : ret 0x22ab
0x0000000000490ca2 : ret 0x22c1
0x000000000042dfe2 : ret 0x2373
0x0000000000487d9a : ret 0x238
0x00000000004a07f8 : ret 0x24
0x000000000041697d : ret 0x2501
0x0000000000467ce4 : ret 0x2504
0x0000000000424103 : ret 0x2575
0x000000000048cce1 : ret 0x25e9
0x000000000044d846 : ret 0x26
0x000000000044d55a : ret 0x26c4
0x0000000000473e66 : ret 0x2774
0x000000000042f7b6 : ret 0x280f
0x0000000000423ffa : ret 0x285
0x000000000042bbf5 : ret 0x2876
0x000000000047f0d7 : ret 0x28f5
0x000000000041e593 : ret 0x29
0x0000000000463e3e : ret 0x290f
0x0000000000411f77 : ret 0x2948
0x0000000000466d7a : ret 0x2949
0x000000000040f630 : ret 0x294c
0x0000000000413a9d : ret 0x294d
0x0000000000422afe : ret 0x297c
0x0000000000424f2a : ret 0x297e
0x000000000041a7da : ret 0x2a08
0x0000000000418b4e : ret 0x2a41
0x0000000000479d0a : ret 0x2b2
0x000000000041135a : ret 0x2b48
0x000000000042382b : ret 0x2b74
0x000000000041f702 : ret 0x2b75
0x00000000004488a2 : ret 0x2b77
0x00000000004009c5 : ret 0x2b8
0x0000000000401e7a : ret 0x2ba4
0x000000000048cccf : ret 0x2be9
0x000000000041ff5e : ret 0x2c75
0x000000000046fb55 : ret 0x2e66
0x000000000044c99e : ret 0x2f75
0x0000000000403427 : ret 0x2fe9
0x00000000004688a5 : ret 0x30be
0x00000000004a0ce8 : ret 0x33
0x0000000000452fc4 : ret 0x349
0x000000000046ef2a : ret 0x350
0x000000000048b080 : ret 0x3575
0x000000000047ba1a : ret 0x3774
0x000000000042c056 : ret 0x3776
0x00000000004a92fa : ret 0x3827
0x00000000004709de : ret 0x3873
0x000000000042bbe5 : ret 0x3876
0x000000000041742b : ret 0x389
0x00000000004a7986 : ret 0x38ae
0x000000000048e992 : ret 0x38e8
0x0000000000489c18 : ret 0x3901
0x00000000004817dd : ret 0x3934
0x000000000046e19f : ret 0x3941
0x0000000000411c01 : ret 0x3948
0x00000000004129bd : ret 0x3949
0x000000000041f82c : ret 0x394c
0x000000000046984d : ret 0x394d
0x0000000000446e52 : ret 0x3a01
0x000000000042dfcb : ret 0x3a73
0x0000000000488863 : ret 0x3a83
0x0000000000447871 : ret 0x3b48
0x000000000044a3df : ret 0x3b8
0x0000000000467a41 : ret 0x3c6
0x0000000000414a19 : ret 0x3c75
0x0000000000466bbe : ret 0x3ce8
0x000000000048179d : ret 0x3d
0x000000000040eeca : ret 0x3d6
0x000000000047fa48 : ret 0x3d73
0x0000000000421031 : ret 0x3d83
0x000000000041d41f : ret 0x3de9
0x000000000047b87a : ret 0x3e80
0x000000000045adcb : ret 0x4002
0x000000000040d80d : ret 0x4074
0x0000000000474451 : ret 0x408d
0x0000000000402b56 : ret 0x4101
0x0000000000460f08 : ret 0x4108
0x00000000004616bd : ret 0x4110
0x0000000000481c76 : ret 0x4118
0x0000000000481817 : ret 0x4134
0x0000000000453777 : ret 0x415f
0x000000000045125e : ret 0x41c3
0x000000000042664a : ret 0x4266
0x0000000000454510 : ret 0x42f
0x00000000004711d3 : ret 0x4389
0x00000000004843ca : ret 0x44
0x0000000000406371 : ret 0x4401
0x00000000004690fb : ret 0x4404
0x0000000000481ff6 : ret 0x4418
0x000000000041ad2b : ret 0x4466
0x000000000041e7a3 : ret 0x4473
0x0000000000400f68 : ret 0x458b
0x00000000004a8484 : ret 0x474c
0x000000000040e654 : ret 0x4801
0x0000000000412bb6 : ret 0x4803
0x0000000000423111 : ret 0x4804
0x00000000004414d3 : ret 0x4808
0x000000000041ce38 : ret 0x4810
0x0000000000458f0c : ret 0x4811
0x000000000045e607 : ret 0x481e
0x0000000000403b2b : ret 0x4820
0x000000000044eb2e : ret 0x4830
0x000000000041bd51 : ret 0x4840
0x0000000000441188 : ret 0x48c3
0x0000000000419733 : ret 0x48e9
0x00000000004a9c46 : ret 0x48f
0x000000000040630c : ret 0x4901
0x0000000000455c1b : ret 0x4902
0x0000000000419d82 : ret 0x4908
0x000000000042ab1c : ret 0x4910
0x000000000044c036 : ret 0x4a3
0x000000000045b219 : ret 0x4c01
0x000000000041f07a : ret 0x4c07
0x000000000045dec6 : ret 0x4c40
0x0000000000424a4d : ret 0x4c88
0x000000000045c988 : ret 0x4d10
0x0000000000402d75 : ret 0x4de8
0x00000000004a96a7 : ret 0x4e27
0x0000000000401cce : ret 0x4f76
0x000000000044f59f : ret 0x5089
0x000000000044c807 : ret 0x508b
0x000000000042dfb4 : ret 0x5173
0x000000000044a63f : ret 0x5488
0x00000000004a790c : ret 0x5508
0x000000000047229e : ret 0x5590
0x000000000048a635 : ret 0x55e8
0x000000000042c036 : ret 0x5776
0x00000000004a9bd8 : ret 0x5803
0x0000000000455c81 : ret 0x5841
0x00000000004881d5 : ret 0x5876
0x000000000040ec63 : ret 0x589
0x00000000004a75e0 : ret 0x591c
0x00000000004a8347 : ret 0x5ae4
0x0000000000455e69 : ret 0x5be9
0x000000000040f96a : ret 0x5d5b
0x00000000004aa072 : ret 0x62c1
0x0000000000424a2d : ret 0x6348
0x000000000047ccc0 : ret 0x6349
0x00000000004859d4 : ret 0x637f
0x0000000000458ee3 : ret 0x6411
0x000000000045be81 : ret 0x6601
0x000000000042bb71 : ret 0x6620
0x0000000000424278 : ret 0x66c3
0x00000000004802ce : ret 0x674
0x000000000042c026 : ret 0x6776
0x00000000004a75ff : ret 0x67b2
0x00000000004179d5 : ret 0x6874
0x0000000000449cea : ret 0x6ae9
0x000000000040f026 : ret 0x6b
0x00000000004aa201 : ret 0x6f9
0x000000000045f47a : ret 0x73
0x0000000000417b51 : ret 0x7401
0x00000000004230da : ret 0x7402
0x000000000047cd2a : ret 0x7403
0x000000000044ad81 : ret 0x7404
0x0000000000472072 : ret 0x7408
0x0000000000410747 : ret 0x7420
0x0000000000464d94 : ret 0x7450
0x00000000004814da : ret 0x7472
0x00000000004453b9 : ret 0x7501
0x00000000004453c6 : ret 0x7502
0x00000000004453d3 : ret 0x7504
0x000000000041f38d : ret 0x7508
0x000000000044538b : ret 0x7510
0x0000000000410ed2 : ret 0x7520
0x0000000000424ebe : ret 0x7540
0x0000000000475ec0 : ret 0x7577
0x000000000042cea2 : ret 0x7677
0x0000000000483152 : ret 0x777
0x0000000000484a16 : ret 0x77f
0x000000000042bb11 : ret 0x7e20
0x000000000042bf8c : ret 0x7e40
0x00000000004251fc : ret 0x7f10
0x000000000046e3a8 : ret 0x7f3c
0x000000000043377e : ret 0x80
0x00000000004263d9 : ret 0x8000
0x000000000048e652 : ret 0x8001
0x000000000047734e : ret 0x8116
0x00000000004606db : ret 0x8148
0x000000000048eba8 : ret 0x8166
0x000000000041db20 : ret 0x820f
0x00000000004554a3 : ret 0x8301
0x000000000047da47 : ret 0x8303
0x00000000004245b4 : ret 0x830f
0x000000000045e4d4 : ret 0x8341
0x000000000040330b : ret 0x8348
0x00000000004472d0 : ret 0x8349
0x000000000047f8bf : ret 0x8364
0x00000000004719b6 : ret 0x840
0x00000000004762b1 : ret 0x8401
0x00000000004129c5 : ret 0x840f
0x00000000004541f0 : ret 0x841
0x000000000048b8fe : ret 0x8440
0x000000000047a467 : ret 0x848b
0x000000000046f7f9 : ret 0x8502
0x0000000000413b52 : ret 0x850f
0x0000000000458843 : ret 0x8511
0x000000000044b0b2 : ret 0x8545
0x000000000040325b : ret 0x8548
0x000000000047746c : ret 0x8549
0x000000000042412a : ret 0x854d
0x00000000004061e1 : ret 0x8575
0x000000000040d7da : ret 0x85b
0x0000000000401a16 : ret 0x860f
0x000000000041b70f : ret 0x870f
0x00000000004a6f1e : ret 0x871e
0x000000000046e3af : ret 0x875
0x000000000042bc15 : ret 0x876
0x0000000000403a52 : ret 0x8801
0x0000000000452522 : ret 0x8804
0x000000000045bed2 : ret 0x8841
0x000000000047e9ae : ret 0x8844
0x000000000045b4aa : ret 0x88e8
0x0000000000404eb0 : ret 0x8901
0x000000000044d69e : ret 0x8902
0x0000000000412e4a : ret 0x8908
0x000000000045e4c6 : ret 0x8941
0x000000000041ffff : ret 0x8944
0x00000000004043ff : ret 0x8948
0x000000000041407a : ret 0x8949
0x0000000000411671 : ret 0x894c
0x0000000000483bcb : ret 0x894e
0x00000000004789f1 : ret 0x89e9
0x0000000000488400 : ret 0x8b
0x0000000000450e39 : ret 0x8b01
0x000000000046fe4a : ret 0x8b04
0x0000000000476053 : ret 0x8b05
0x000000000046fcfb : ret 0x8b08
0x00000000004a974e : ret 0x8b36
0x000000000041e011 : ret 0x8b41
0x000000000046e3db : ret 0x8b44
0x000000000040113a : ret 0x8b48
0x0000000000411e26 : ret 0x8b49
0x0000000000483b4e : ret 0x8b4a
0x000000000040da1d : ret 0x8b4c
0x0000000000485edf : ret 0x8b64
0x00000000004655fd : ret 0x8c0f
0x000000000045df21 : ret 0x8d04
0x000000000048caff : ret 0x8d0f
0x000000000041d704 : ret 0x8d44
0x000000000041a221 : ret 0x8d48
0x0000000000424567 : ret 0x8d49
0x0000000000482ef7 : ret 0x8d4a
0x000000000041e824 : ret 0x8d4c
0x000000000045e4e2 : ret 0x8d89
0x0000000000452fbb : ret 0x8e0f
0x000000000045e78a : ret 0x8f0f
0x0000000000440955 : ret 0x90c3
0x000000000048b73b : ret 0x9272
0x0000000000463e67 : ret 0x93e8
0x000000000041b8d5 : ret 0x948
0x0000000000473a28 : ret 0x94c
0x0000000000485402 : ret 0x950f
0x0000000000449670 : ret 0x9572
0x00000000004a8573 : ret 0x9576
0x00000000004610df : ret 0x958b
0x000000000042306e : ret 0x976
0x000000000047d7f3 : ret 0x9be9
0x00000000004878e5 : ret 0x9eb
0x000000000049f320 : ret 0xa
0x00000000004af486 : ret 0xa01
0x000000000044ada8 : ret 0xa076
0x0000000000449bb4 : ret 0xa0e9
0x000000000048cbbe : ret 0xa4e9
0x00000000004a8263 : ret 0xa514
0x000000000048ccbd : ret 0xa5e9
0x000000000044bd4d : ret 0xabe
0x00000000004a86e7 : ret 0xac65
0x00000000004a90a4 : ret 0xacfc
0x000000000045ff1f : ret 0xae9
0x0000000000423f6a : ret 0xaeeb
0x00000000004ac9cf : ret 0xb00e
0x000000000041228d : ret 0xb074
0x000000000041b92b : ret 0xb277
0x0000000000456a4b : ret 0xb2eb
0x0000000000449ba0 : ret 0xb4e9
0x000000000045e506 : ret 0xb589
0x0000000000400fb0 : ret 0xb60f
0x0000000000401504 : ret 0xb70f
0x000000000046a745 : ret 0xb8
0x000000000046c4ec : ret 0xb848
0x000000000048ea12 : ret 0xb8e8
0x00000000004a85ae : ret 0xb9b9
0x000000000046dd25 : ret 0xb9e9
0x000000000046f8d4 : ret 0xba41
0x00000000004237a3 : ret 0xbae9
0x0000000000456b82 : ret 0xbaeb
0x00000000004102d6 : ret 0xbc20
0x000000000048d176 : ret 0xbc80
0x000000000045e4f2 : ret 0xbd89
0x00000000004814e5 : ret 0xbde8
0x0000000000481622 : ret 0xbe0f
0x00000000004a8304 : ret 0xbe57
0x0000000000426299 : ret 0xc000
0x0000000000403756 : ret 0xc031
0x0000000000458f2e : ret 0xc083
0x000000000042b9d0 : ret 0xc085
0x000000000040e696 : ret 0xc148
0x000000000041bbc5 : ret 0xc183
0x0000000000404ec8 : ret 0xc189
0x000000000044aa32 : ret 0xc221
0x000000000042003b : ret 0xc275
0x0000000000476ea6 : ret 0xc283
0x000000000042de84 : ret 0xc2b2
0x0000000000465bce : ret 0xc2c8
0x000000000044890e : ret 0xc35b
0x000000000045831d : ret 0xc389
0x000000000042003d : ret 0xc3f3
0x00000000004a6aa2 : ret 0xc4c3
0x00000000004a7eb8 : ret 0xc4ff
0x000000000042bff1 : ret 0xc540
0x00000000004583e6 : ret 0xc589
0x0000000000463d9c : ret 0xc689
0x000000000047f89d : ret 0xc74
0x0000000000441890 : ret 0xc748
0x0000000000469998 : ret 0xc789
0x00000000004816b2 : ret 0xc829
0x0000000000462772 : ret 0xc839
0x000000000041741c : ret 0xc883
0x000000000047d46a : ret 0xc8e8
0x00000000004611b7 : ret 0xc985
0x000000000046fde3 : ret 0xc9eb
0x00000000004414a1 : ret 0xc9ff
0x00000000004008e1 : ret 0xca21
0x00000000004a794a : ret 0xcca7
0x00000000004a9a2d : ret 0xcd11
0x00000000004056d2 : ret 0xce80
0x000000000049f720 : ret 0xd
0x000000000042191e : ret 0xd020
0x000000000040e4a6 : ret 0xd021
0x0000000000464c1b : ret 0xd120
0x0000000000401824 : ret 0xd284
0x0000000000457eda : ret 0xd285
0x000000000048f0f8 : ret 0xd2e8
0x000000000047a4f6 : ret 0xd348
0x000000000044ff17 : ret 0xd5e9
0x0000000000481a6f : ret 0xd75
0x000000000045d8c6 : ret 0xd774
0x00000000004a94c5 : ret 0xd8f
0x000000000046e749 : ret 0xd9e8
0x000000000040058f : ret 0xda80
0x00000000004105c3 : ret 0xdaf7
0x00000000004546ca : ret 0xdb76
0x00000000004a95a6 : ret 0xdcd9
0x00000000004a8522 : ret 0xde5d
0x00000000004a72b1 : ret 0xde9e
0x0000000000426159 : ret 0xe000
0x0000000000445349 : ret 0xe074
0x000000000044ddf0 : ret 0xe083
0x00000000004b5c84 : ret 0xe0a
0x000000000048cd81 : ret 0xe1e9
0x000000000044dc22 : ret 0xe1eb
0x000000000040e0b0 : ret 0xe281
0x0000000000401245 : ret 0xe283
0x0000000000473738 : ret 0xe575
0x0000000000466220 : ret 0xe57f
0x0000000000466b9a : ret 0xe583
0x0000000000448902 : ret 0xe680
0x000000000046727f : ret 0xe683
0x00000000004a96c6 : ret 0xe71f
0x00000000004798ba : ret 0xe75
0x0000000000423856 : ret 0xe775
0x0000000000466853 : ret 0xe7e9
0x0000000000401aa5 : ret 0xe883
0x0000000000479436 : ret 0xe8c0
0x0000000000424673 : ret 0xe901
0x000000000048e73a : ret 0xe902
0x0000000000441536 : ret 0xe908
0x000000000043dad6 : ret 0xe910
0x000000000045ed4d : ret 0xe920
0x00000000004a7a27 : ret 0xe970
0x000000000044889a : ret 0xea81
0x000000000040e17d : ret 0xeab8
0x000000000040122d : ret 0xeac1
0x000000000047e0f6 : ret 0xeb01
0x000000000046fd13 : ret 0xeb04
0x000000000042ab4a : ret 0xeb10
0x0000000000481c62 : ret 0xeb30
0x0000000000473662 : ret 0xeb75
0x00000000004aa1d8 : ret 0xec2
0x000000000045d850 : ret 0xed75
0x00000000004a9e7a : ret 0xef32
0x000000000048c948 : ret 0xef89
0x000000000047646f : ret 0xefeb
0x000000000042993e : ret 0xf
0x0000000000426019 : ret 0xf000
0x0000000000405bb5 : ret 0xf01
0x000000000041b3d9 : ret 0xf02
0x000000000041d889 : ret 0xf04
0x0000000000412513 : ret 0xf08
0x000000000041b6a9 : ret 0xf0f
0x000000000040e9ae : ret 0xf10
0x000000000046709b : ret 0xf20
0x000000000041d9f3 : ret 0xf275
0x0000000000464156 : ret 0xf3f
0x0000000000467623 : ret 0xf40
0x000000000047078d : ret 0xf41
0x000000000048cdfc : ret 0xf45
0x0000000000424439 : ret 0xf475
0x0000000000451de6 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000467609 : ret 0xf50
0x0000000000475b15 : ret 0xf631
0x00000000004265d6 : ret 0xf66
0x000000000047b547 : ret 0xf675
0x000000000047084c : ret 0xf741
0x0000000000405e02 : ret 0xf748
0x000000000048313c : ret 0xf749
0x0000000000425ed9 : ret 0xf800
0x00000000004a7190 : ret 0xf869
0x0000000000419153 : ret 0xf8b
0x0000000000464151 : ret 0xf8c1
0x0000000000440db6 : ret 0xf8c5
0x0000000000448c44 : ret 0xf8e9
0x0000000000494e40 : ret 0xfa11
0x0000000000495330 : ret 0xfa32
0x0000000000495338 : ret 0xfa38
0x000000000041fd12 : ret 0xfae9
0x0000000000495fac : ret 0xfb3c
0x000000000042030a : ret 0xfbe9
0x0000000000425d99 : ret 0xfc00
0x0000000000424cb1 : ret 0xfc3
0x000000000045cf3a : ret 0xfc4d
0x000000000045b31a : ret 0xfc4e
0x000000000049119a : ret 0xfc9e
0x000000000047f61a : ret 0xfcaa
0x000000000044e57a : ret 0xfddc
0x000000000044e07a : ret 0xfde1
0x0000000000425c59 : ret 0xfe00
0x0000000000401375 : ret 0xfe83
0x0000000000425b19 : ret 0xff00
0x000000000041fb5a : ret 0xff09
0x000000000041e95a : ret 0xff1b
0x00000000004352f1 : ret 0xff2
0x000000000044dd9b : ret 0xff25
0x000000000042c819 : ret 0xff2d
0x000000000042657a : ret 0xff3
0x000000000046b847 : ret 0xff31
0x000000000041c3ba : ret 0xff3b
0x00000000004259d9 : ret 0xff80
0x0000000000466e21 : ret 0xff83
0x000000000045465c : ret 0xff85
0x000000000045deb2 : ret 0xffa0
0x000000000040b65a : ret 0xffaf
0x000000000040b35a : ret 0xffb2
0x000000000044fcda : ret 0xffb6
0x0000000000411927 : ret 0xffb8
0x000000000040e1ca : ret 0xffc0
0x0000000000402236 : ret 0xffc8
0x000000000040dff2 : ret 0xffd8
0x0000000000423e08 : ret 0xffdf
0x0000000000425759 : ret 0xffe0
0x0000000000462c8e : ret 0xffe6
0x0000000000468ab9 : ret 0xffe8
0x0000000000449c55 : ret 0xffe9
0x000000000040f691 : ret 0xffef
0x0000000000423822 : ret 0xfff
0x0000000000425619 : ret 0xfff0
0x000000000046b230 : ret 0xfff1
0x00000000004afe59 : ret 0xfff7
0x00000000004254d9 : ret 0xfff8
0x000000000046417d : ret 0xfff9
0x000000000041d328 : ret 0xfffa
0x0000000000404de9 : ret 0xfffb
0x0000000000425399 : ret 0xfffc
0x0000000000418bd5 : ret 0xfffd
0x000000000042188c : ret 0xfffe
0x00000000004160cc : ret 0xffff
0x0000000000403fc3 : ret 1
0x000000000041c2fd : ret 2
0x000000000041c012 : ret 3
0x000000000040a4b8 : ret 4
0x00000000004562fa : ret 5
0x000000000049eec8 : ret 6
0x000000000042b0da : ret 7
0x000000000040a518 : ret 8
0x0000000000445dfa : ret 9
0x0000000000400574 : retf
0x0000000000412402 : retf 0
0x000000000049fc80 : retf 0x11
0x000000000048892d : retf 0x114d
0x0000000000477870 : retf 0x12b9
0x000000000045648f : retf 0x12e9
0x0000000000462bc9 : retf 0x147f
0x0000000000473163 : retf 0x148
0x000000000043365c : retf 0x14c
0x0000000000427aa2 : retf 0x16
0x00000000004075d2 : retf 0x194
0x0000000000484aed : retf 0x194d
0x000000000044c4f2 : retf 0x19b8
0x000000000041b8db : retf 0x1a74
0x0000000000407664 : retf 0x1b
0x000000000040f1c1 : retf 0x1be
0x00000000004a1828 : retf 0x1d4
0x00000000004a1fc8 : retf 0x1d5
0x0000000000467192 : retf 0x1dc
0x000000000042bf40 : retf 0x1f0f
0x00000000004b0f02 : retf 0x2000
0x000000000046e021 : retf 0x20be
0x0000000000458912 : retf 0x20e8
0x0000000000414e41 : retf 0x2148
0x0000000000490ebc : retf 0x22
0x000000000049225d : retf 0x22b5
0x00000000004a0838 : retf 0x24
0x000000000046d152 : retf 0x24b0
0x0000000000466a1a : retf 0x256f
0x000000000045d3f2 : retf 0x25fb
0x000000000044ca4c : retf 0x26
0x000000000044fc81 : retf 0x26d1
0x000000000042e5c9 : retf 0x280f
0x000000000047d29a : retf 0x282
0x000000000041dcf4 : retf 0x29
0x0000000000471d2a : retf 0x2941
0x000000000040a05f : retf 0x2948
0x00000000004116ce : retf 0x294c
0x0000000000423d42 : retf 0x296a
0x00000000004230b2 : retf 0x2977
0x000000000042295d : retf 0x29ae
0x0000000000410dd9 : retf 0x2a
0x000000000041e528 : retf 0x2a74
0x000000000040f91b : retf 0x2a7e
0x0000000000413452 : retf 0x2a8a
0x00000000004a839c : retf 0x2a91
0x00000000004005a8 : retf 0x2b
0x00000000004034ea : retf 0x2b92
0x000000000040066a : retf 0x2baa
0x000000000045816f : retf 0x2c73
0x0000000000458149 : retf 0x2c76
0x00000000004a781a : retf 0x2c90
0x0000000000477fc2 : retf 0x2cc
0x000000000044cc81 : retf 0x2e75
0x0000000000482cab : retf 0x2fe8
0x0000000000434ee6 : retf 0x3148
0x00000000004a9605 : retf 0x3159
0x00000000004a966d : retf 0x32dd
0x00000000004a0d28 : retf 0x33
0x00000000004a7f23 : retf 0x33e6
0x0000000000414c12 : retf 0x361
0x00000000004a8451 : retf 0x3617
0x0000000000434ec2 : retf 0x377
0x000000000041eff0 : retf 0x3948
0x0000000000471a90 : retf 0x3949
0x0000000000419cfa : retf 0x394c
0x000000000042008d : retf 0x3d83
0x00000000004a9a66 : retf 0x3d8a
0x00000000004a72fb : retf 0x3ec
0x0000000000457a52 : retf 0x3fb
0x000000000044ddf5 : retf 0x4102
0x000000000044df41 : retf 0x4110
0x0000000000455e72 : retf 0x418
0x000000000045418e : retf 0x4180
0x000000000042662c : retf 0x4266
0x0000000000453ef3 : retf 0x4280
0x000000000048a7fd : retf 0x42f6
0x00000000004013f2 : retf 0x440
0x000000000043d74a : retf 0x4466
0x0000000000465ff6 : retf 0x45e9
0x00000000004548f4 : retf 0x4689
0x0000000000419db5 : retf 0x4801
0x0000000000417a41 : retf 0x4802
0x000000000040ddfc : retf 0x4805
0x000000000040de67 : retf 0x4806
0x0000000000472077 : retf 0x4808
0x000000000040dd18 : retf 0x4809
0x000000000040df58 : retf 0x480a
0x000000000040df1c : retf 0x480d
0x00000000004115e3 : retf 0x4810
0x00000000004116e1 : retf 0x4820
0x00000000004831b6 : retf 0x48f8
0x000000000041d893 : retf 0x4901
0x000000000045a453 : retf 0x4a8d
0x000000000041e4fa : retf 0x4b74
0x00000000004179f3 : retf 0x4c01
0x00000000004239e2 : retf 0x4c89
0x0000000000489d37 : retf 0x4d20
0x0000000000484ab8 : retf 0x4de8
0x00000000004830bb : retf 0x4df0
0x0000000000484adc : retf 0x4df8
0x000000000041ecfb : retf 0x4fe9
0x00000000004670e6 : retf 0x53c
0x00000000004859e2 : retf 0x557f
0x0000000000400b7f : retf 0x5588
0x000000000048b4b6 : retf 0x5774
0x000000000048581d : retf 0x5d5b
0x000000000047a585 : retf 0x5f6
0x000000000041ece8 : retf 0x62e9
0x000000000040ee8c : retf 0x6411
0x000000000042e6b3 : retf 0x6601
0x000000000042e803 : retf 0x6602
0x000000000042e953 : retf 0x6603
0x000000000042eaa3 : retf 0x6604
0x000000000042ebf3 : retf 0x6605
0x000000000042ed43 : retf 0x6606
0x000000000042ee93 : retf 0x6607
0x000000000042efe3 : retf 0x6608
0x000000000042f133 : retf 0x6609
0x000000000042f283 : retf 0x660a
0x000000000042f3d3 : retf 0x660b
0x000000000042f523 : retf 0x660c
0x000000000042f673 : retf 0x660d
0x000000000042f7c3 : retf 0x660e
0x000000000042f913 : retf 0x660f
0x0000000000434ee1 : retf 0x676
0x00000000004a9985 : retf 0x67ca
0x0000000000475c41 : retf 0x6b8
0x00000000004a7982 : retf 0x6ee8
0x00000000004a9846 : retf 0x7272
0x00000000004a901f : retf 0x76a5
0x0000000000411be3 : retf 0x775
0x00000000004a7ea2 : retf 0x79f5
0x000000000041e9d2 : retf 0x7b73
0x000000000044a53b : retf 0x8041
0x00000000004587b2 : retf 0x80e8
0x000000000042be73 : retf 0x8148
0x000000000043328d : retf 0x820f
0x0000000000411290 : retf 0x830f
0x00000000004145f1 : retf 0x8310
0x00000000004135dd : retf 0x8320
0x0000000000454cf7 : retf 0x8341
0x0000000000419db2 : retf 0x8348
0x000000000042aaef : retf 0x8349
0x000000000041a290 : retf 0x840f
0x00000000004a8790 : retf 0x8481
0x0000000000414ff6 : retf 0x850f
0x00000000004008e3 : retf 0x8545
0x000000000044197b : retf 0x8548
0x000000000042b999 : retf 0x860f
0x00000000004336ac : retf 0x870f
0x0000000000483354 : retf 0x877
0x0000000000489e33 : retf 0x8820
0x0000000000453edd : retf 0x8880
0x00000000004239e8 : retf 0x8902
0x0000000000412620 : retf 0x8920
0x000000000044ad9a : retf 0x8940
0x0000000000404506 : retf 0x8941
0x0000000000460df0 : retf 0x8944
0x00000000004034d6 : retf 0x8948
0x000000000042e0e9 : retf 0x8949
0x000000000041158c : retf 0x894c
0x0000000000455fea : retf 0x8966
0x0000000000453f3e : retf 0x8980
0x0000000000400eae : retf 0x8b48
0x0000000000405cbc : retf 0x8b49
0x00000000004304e9 : retf 0x8b4c
0x000000000041a2ce : retf 0x8d48
0x000000000042b8a9 : retf 0x8d4a
0x00000000004448cd : retf 0x8d4c
0x000000000040526e : retf 0x8dd
0x000000000042aa2d : retf 0x9066
0x000000000045aec0 : retf 0x9273
0x00000000004a90ee : retf 0x93a2
0x000000000041e886 : retf 0x948
0x00000000004793b2 : retf 0x98
0x0000000000400f1c : retf 0x9848
0x000000000041ecb2 : retf 0x98e9
0x00000000004a948b : retf 0x99e0
0x000000000044ad90 : retf 0x9b9
0x00000000004a97fa : retf 0x9d7d
0x00000000004aa105 : retf 0xa020
0x00000000004a7665 : retf 0xa1eb
0x00000000004a96eb : retf 0xa2fe
0x000000000041db89 : retf 0xa74
0x00000000004a97bc : retf 0xab0d
0x000000000040ecbd : retf 0xade9
0x00000000004a9d0e : retf 0xae32
0x0000000000426d52 : retf 0xb
0x00000000004a8509 : retf 0xb51a
0x0000000000400eb5 : retf 0xb60f
0x000000000048b392 : retf 0xb801
0x0000000000454d04 : retf 0xb941
0x0000000000485ed0 : retf 0xba
0x000000000041d8c1 : retf 0xba41
0x000000000046fa02 : retf 0xbb41
0x00000000004a9813 : retf 0xbb9a
0x00000000004860a6 : retf 0xbeb
0x00000000004a985d : retf 0xbf4b
0x0000000000456e58 : retf 0xc031
0x0000000000402cf6 : retf 0xc089
0x00000000004a94dd : retf 0xc0fe
0x00000000004652f2 : retf 0xc1
0x000000000040e64a : retf 0xc148
0x00000000004739ee : retf 0xc149
0x000000000046171d : retf 0xc239
0x000000000045971d : retf 0xc6
0x0000000000465f71 : retf 0xc7
0x0000000000473ca3 : retf 0xc985
0x000000000042da24 : retf 0xcab2
0x00000000004a6aaa : retf 0xcccb
0x000000000040af97 : retf 0xd
0x00000000004a82c6 : retf 0xd1cb
0x0000000000448a0f : retf 0xd231
0x00000000004156a5 : retf 0xd284
0x0000000000451805 : retf 0xd285
0x0000000000404511 : retf 0xd289
0x00000000004a99d7 : retf 0xd39
0x0000000000448806 : retf 0xd975
0x00000000004a9f63 : retf 0xde4f
0x0000000000412bc1 : retf 0xdeb
0x00000000004a8593 : retf 0xdf7f
0x00000000004075e6 : retf 0xe
0x00000000004a803e : retf 0xe152
0x0000000000448643 : retf 0xe175
0x00000000004860cb : retf 0xe275
0x0000000000454a10 : retf 0xe283
0x0000000000479039 : retf 0xe474
0x00000000004484dc : retf 0xe475
0x00000000004a861c : retf 0xe496
0x000000000045ea97 : retf 0xe677
0x00000000004a7f86 : retf 0xe72e
0x00000000004a7613 : retf 0xe80
0x0000000000477da6 : retf 0xe802
0x00000000004661e5 : retf 0xe87f
0x000000000040de99 : retf 0xe903
0x00000000004847ac : retf 0xe972
0x0000000000461c1d : retf 0xe9ff
0x00000000004840fb : retf 0xea72
0x0000000000412a83 : retf 0xea77
0x00000000004a95cc : retf 0xea91
0x00000000004887ab : retf 0xeac0
0x000000000041bdae : retf 0xeac1
0x0000000000425171 : retf 0xead3
0x000000000040de52 : retf 0xeb04
0x000000000040deb1 : retf 0xeb07
0x000000000040dd78 : retf 0xeb08
0x000000000040df7f : retf 0xeb0b
0x000000000040df52 : retf 0xeb0c
0x00000000004a76ed : retf 0xeb83
0x00000000004a9ee1 : retf 0xebbf
0x000000000041793b : retf 0xee75
0x000000000047e9b7 : retf 0xee7c
0x00000000004338ec : retf 0xf01
0x0000000000433a6c : retf 0xf02
0x0000000000433bec : retf 0xf03
0x0000000000433d6c : retf 0xf04
0x0000000000433eec : retf 0xf05
0x000000000043406c : retf 0xf06
0x00000000004341ec : retf 0xf07
0x000000000043436c : retf 0xf08
0x00000000004344ec : retf 0xf09
0x000000000043466c : retf 0xf0a
0x00000000004347ec : retf 0xf0b
0x000000000043496c : retf 0xf0c
0x0000000000434aec : retf 0xf0d
0x0000000000434c6c : retf 0xf0e
0x0000000000434dec : retf 0xf0f
0x000000000043f31d : retf 0xf1c5
0x000000000045e51b : retf 0xf41
0x00000000004412e0 : retf 0xf48
0x0000000000473ed1 : retf 0xf4c
0x0000000000473166 : retf 0xf631
0x00000000004a9528 : retf 0xf64
0x000000000041ea46 : retf 0xf66
0x000000000042ca8a : retf 0xf748
0x000000000041e0fd : retf 0xf989
0x000000000043f3ef : retf 0xf9c5
0x0000000000495134 : retf 0xfa09
0x0000000000494f6c : retf 0xfa0c
0x000000000045dd5a : retf 0xfa26
0x0000000000495664 : retf 0xfa29
0x0000000000495464 : retf 0xfa33
0x0000000000404531 : retf 0xfa83
0x00000000004640ea : retf 0xfac1
0x0000000000491392 : retf 0xfc9c
0x0000000000474372 : retf 0xfd98
0x0000000000473b76 : retf 0xfdc5
0x000000000041c5ba : retf 0xfe3e
0x000000000042c8b7 : retf 0xfec5
0x0000000000435711 : retf 0xff2
0x000000000042cebb : retf 0xff3
0x000000000040e124 : retf 0xff31
0x000000000041ab52 : retf 0xff59
0x00000000004065ca : retf 0xff9e
0x0000000000403539 : retf 0xffbf
0x000000000040be79 : retf 0xffe7
0x0000000000487b22 : retf 0xfff3
0x000000000046529a : retf 0xfff5
0x0000000000453fd7 : retf 0xfff6
0x0000000000485837 : retf 0xfff7
0x000000000045f0b2 : retf 0xfff8
0x000000000048eb02 : retf 0xfff9
0x0000000000454c4e : retf 0xfffa
0x000000000046634f : retf 0xfffb
0x000000000040e7a1 : retf 0xfffc
0x0000000000403a82 : retf 0xfffd
0x0000000000411a6e : retf 0xfffe
0x0000000000403a7a : retf 0xffff
0x000000000041b712 : retf 1
0x000000000041b952 : retf 2
0x0000000000453722 : retf 3
0x000000000048c855 : retf 4
0x00000000004a33d4 : retf 5
0x000000000040a3aa : retf 6
0x00000000004a37d4 : retf 7
0x00000000004a39d4 : retf 8
0x000000000042cbdb : retf 9
0x0000000000446f15 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000448a03 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e7cc : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042bb6e : rol bl, 0x83 ; ret 0x6620
0x0000000000474c8b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418d37 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042c33d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004478bd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000426552 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042c05b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473e62 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a31c0 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000047a461 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042cdad : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044d6ab : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d7fe : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004100e9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042bdb2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004860c5 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x0000000000482e9b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004191a8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000453771 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000474ef2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000448891 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046706f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004478be : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008de : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046dd22 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474ed2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004650f2 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044eee6 : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000459e9b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448c27 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x0000000000410ecd : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000448c40 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000044e891 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000495830 : rol byte ptr [rdi - 0x768f0006], 1 ; cli ; call qword ptr [rax]
0x0000000000474f32 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474ee2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048c436 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000474f22 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043f4d5 : rol ch, 1 ; jns 0x43f4b4 ; retf 0xead3
0x000000000043f625 : rol ch, 1 ; jns 0x43f604 ; retf 0xead3
0x000000000043f775 : rol ch, 1 ; jns 0x43f754 ; retf 0xead3
0x000000000043f8c5 : rol ch, 1 ; jns 0x43f8a4 ; retf 0xead3
0x000000000043fa15 : rol ch, 1 ; jns 0x43f9f4 ; retf 0xead3
0x000000000043fb65 : rol ch, 1 ; jns 0x43fb44 ; retf 0xead3
0x000000000043fcb5 : rol ch, 1 ; jns 0x43fc94 ; retf 0xead3
0x000000000043fe05 : rol ch, 1 ; jns 0x43fde4 ; retf 0xead3
0x000000000043ff55 : rol ch, 1 ; jns 0x43ff34 ; retf 0xead3
0x00000000004400a5 : rol ch, 1 ; jns 0x440084 ; retf 0xead3
0x00000000004401f5 : rol ch, 1 ; jns 0x4401d4 ; retf 0xead3
0x0000000000440345 : rol ch, 1 ; jns 0x440324 ; retf 0xead3
0x0000000000440495 : rol ch, 1 ; jns 0x440474 ; retf 0xead3
0x00000000004405e5 : rol ch, 1 ; jns 0x4405c4 ; retf 0xead3
0x0000000000440735 : rol ch, 1 ; jns 0x440714 ; retf 0xead3
0x000000000042c0df : rol ch, 1 ; std ; xlatb ; ret
0x0000000000473bd6 : rol ch, cl ; std ; xlatb ; ret
0x000000000044144f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a6aa0 : rol cl, 0xc2 ; ret
0x0000000000400fab : rol cl, 0xe0 ; add al, 0x89 ; ret 0xb60f
0x0000000000474e7c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000044863c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000004484d8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004379b0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042bb94 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042c0d3 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000440f23 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000400949 : rol dword ptr [rcx], -0x73 ; call r11
0x0000000000456f1f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000424252 : rol dword ptr [rcx], cl ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004b0efe : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x0000000000454fda : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000473b6e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042c815 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x00000000004237ec : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004237eb : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000494d1c : ror bh, 0xf9 ; call qword ptr [rax]
0x0000000000494d10 : ror bl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000472975 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048b068 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042bbe2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42bc29 ; add rax, rdi ; ret
0x00000000004412e7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000474b9c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000411ade : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000475f6c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475f9f ; ret
0x000000000044c588 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041e6d3 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000047cfea : ror byte ptr [rax + 0x39], cl ; ret
0x00000000004709e3 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044dd4d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x0000000000424563 : ror byte ptr [rax + 0xf], 0x43 ; ret 0x8d49
0x000000000047ef16 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045ff1b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045b579 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045b56a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042bc8c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042bbb2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042c0a3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405f53 : ror byte ptr [rax + 1], 1 ; ret
0x00000000004412e4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049f5c8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042c335 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048396c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000466e1a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000466c15 : ror byte ptr [rax - 0x73], 0x15 ; ret
0x000000000042bba2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042bbd2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042bbc2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000042381e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047a0ea : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000420ac0 : ror byte ptr [rax - 0x75], 5 ; nop ; ret 0x29
0x000000000044a04a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000411d20 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048b07d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045ad84 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x00000000004144a0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048266a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040e0ad : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041fe05 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000415181 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x415197 ; ret
0x00000000004853fc : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000416f15 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475e83 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000416131 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f130 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044b1b4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000455615 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000489c15 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046f502 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046fa22 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x00000000004448ab : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; std ; syscall
0x000000000047456c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000484dd4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c747 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000472976 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045c9d6 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000468b08 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044ff0f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000045b772 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044c47c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x000000000045f51c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004108ad : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004760b9 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040fe81 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402e46 : ror byte ptr [rdi], 0x84 ; ret
0x000000000046761b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000450e97 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000000000044cd02 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040be76 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000453b0c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000044181a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004231bf : ror byte ptr [rdi], 0x85 ; ret
0x000000000044d0df : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047e1d2 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000004672ee : ror byte ptr [rdi], 0x85 ; retf
0x0000000000403a7f : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042bf1d : ror byte ptr [rdi], 0x85 ; retf 1
0x0000000000463e1c : ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004239bf : ror byte ptr [rdi], 0x88 ; retf 1
0x00000000004681b9 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000047fca9 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048179a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046e3a5 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000004853ff : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044738e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004105c0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046d7da : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000042381b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000447805 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040e0c2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40e0ac ; ret
0x000000000046414e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004957bc : ror byte ptr [rdx + rdi*8 - 1], 0xd0 ; cli ; jmp rax
0x00000000004b4b0c : ror byte ptr [rdx - 0x35700000], 1 ; cld ; jmp qword ptr [rsi]
0x00000000004957c0 : ror byte ptr [rsi - 6], 1 ; jmp rax
0x0000000000434ec7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004859fe : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000447398 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x00000000004411b4 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004412d9 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000473eca : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048b244 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046ffd6 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423f67 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x000000000047a4f3 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000466850 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000458ba8 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000044d980 : ror dword ptr [rax - 0x77], 5 ; loopne 0x44d98d ; add cl, ch ; retf
0x0000000000416e2d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x416e27 ; ret
0x000000000047110d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x471107 ; ret
0x0000000000466349 : ror dword ptr [rax - 0x7d], -0x18 ; add al, 0xe9 ; retf 0xfffb
0x000000000045e624 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000048463d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046620b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000445347 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000042d618 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042dd24 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042daf6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042da76 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042ddb4 : ror dword ptr [rdi], -0x7b ; je 0x42ddc4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d8ab : ror dword ptr [rdi], -0x7b ; jno 0x42d8c0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d973 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d5f0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047c7de : ror dword ptr [rdi], -0x7c ; retf 6
0x000000000041b750 : ror dword ptr [rdi], cl ; xchg dword ptr [rcx - 0x9ffffff], ecx ; ret
0x0000000000416e2c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x416e28 ; ret
0x000000000047110c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x471108 ; ret
0x00000000004950ec : sahf ; add bh, dl ; ljmp ptr [rsi] ; add bh, dl ; call rsp
0x0000000000401dee : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x401e0e ; syscall
0x0000000000495879 : sahf ; cli ; jmp qword ptr [rax]
0x00000000004ac7d1 : sahf ; cmc ; jmp qword ptr [rax]
0x000000000043fede : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7985 : sahf ; ret 0x38ae
0x0000000000483f31 : sahf ; ret 0x3948
0x000000000045c9dc : sahf ; ret 0x894c
0x000000000048ce34 : sahf ; ret 0xf45
0x00000000004a84bc : sahf ; retf
0x0000000000494b41 : sahf ; stc ; call rax
0x00000000004958b4 : sal al, 0xfa ; call rax
0x00000000004958b8 : sal al, 1 ; cli ; jmp rax
0x00000000004191ae : sal bh, 0xd8 ; ret
0x0000000000495970 : sal bh, 0xfa ; call rax
0x0000000000495974 : sal bh, 1 ; cli ; push rax ; idiv edx ; call qword ptr [rax]
0x00000000004263d7 : sal bh, 1 ; ret 0x8000
0x0000000000426297 : sal bh, 1 ; ret 0xc000
0x0000000000426157 : sal bh, 1 ; ret 0xe000
0x0000000000426017 : sal bh, 1 ; ret 0xf000
0x0000000000425ed7 : sal bh, 1 ; ret 0xf800
0x0000000000425d97 : sal bh, 1 ; ret 0xfc00
0x0000000000425c57 : sal bh, 1 ; ret 0xfe00
0x0000000000425b17 : sal bh, 1 ; ret 0xff00
0x00000000004259d7 : sal bh, 1 ; ret 0xff80
0x0000000000425897 : sal bh, 1 ; ret 0xffc0
0x0000000000425757 : sal bh, 1 ; ret 0xffe0
0x0000000000425617 : sal bh, 1 ; ret 0xfff0
0x00000000004254d7 : sal bh, 1 ; ret 0xfff8
0x0000000000425397 : sal bh, 1 ; ret 0xfffc
0x0000000000425257 : sal bh, 1 ; ret 0xfffe
0x0000000000474c7f : sal bl, 1 ; ret
0x000000000047fb4d : sal bl, cl ; ret
0x000000000040dfed : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xffd8
0x000000000044a0e7 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044a3b7 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000474122 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x0000000000482d2e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000475cc6 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000040639b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048fbe3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x0000000000400594 : sal byte ptr [rbp + 1], cl ; ret
0x000000000048fbc8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044c5a1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000415184 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000424ac8 : sal byte ptr [rbp + rbx*8 + 0x48], 0x29 ; ret
0x000000000044c5b1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000417d4d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000447080 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000416e30 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000004266fb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040e0c7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042c0dd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000481608 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042c0d5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000440f2d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000440f25 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004749db : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041916c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000459045 : sal byte ptr [rbx + 0x48], 0xc7 ; ret 0xffd8
0x000000000044d696 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000044122c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044eee2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044c586 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004a4688 : sal byte ptr [rdi - 0x46c70004], 1 ; cld ; call qword ptr [rax]
0x00000000004a4698 : sal byte ptr [rdi - 0x482f0004], 1 ; cld ; call rax
0x0000000000473e2b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044cebb : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000441543 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004857c1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000480109 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004958f4 : sal cl, 0xfa ; jmp rax
0x0000000000495948 : sal dh, 0xfa ; call rax
0x000000000049594c : sal dh, 1 ; cli ; jmp rax
0x0000000000495918 : sal dl, 0xfa ; jmp rax
0x0000000000452b7b : sal ebp, -6 ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000447763 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000048160d : sal edi, -0x28 ; ret
0x000000000047a57c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000445386 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042e0a6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004906b1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048fca3 : salc ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048fc95 : salc ; and al, byte ptr [rax] ; test eax, eax ; je 0x48fca8 ; ret
0x00000000004b0049 : salc ; clc ; call qword ptr [rax]
0x00000000004474ca : salc ; clc ; ret
0x000000000047ee54 : salc ; cmp rcx, rsi ; jne 0x47ee37 ; ret
0x000000000040637e : salc ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449dbd : salc ; mov eax, 4 ; syscall
0x0000000000449e0b : salc ; mov eax, 5 ; syscall
0x0000000000475bed : salc ; mov eax, 6 ; syscall
0x000000000047ee59 : salc ; ret
0x000000000041e5a6 : salc ; ret 0x29
0x00000000004a790a : salc ; retf
0x00000000004952b0 : salc ; xor bh, dl ; inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x0000000000495994 : sar al, 1 ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000403610 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449cf3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000480493 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000484d30 : sar bh, 0xff ; mov eax, 1 ; ret
0x000000000041c90e : sar bh, cl ; dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000402e42 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047c3d1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x000000000044733e : sar byte ptr [rcx], 0xc8 ; jle 0x447380 ; movsxd rax, ecx ; ret
0x000000000044dc1d : sar byte ptr [rcx], cl ; ret
0x0000000000462bc7 : sar byte ptr [rcx], cl ; retf 0x147f
0x0000000000458f26 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a831f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000494d65 : sar cl, cl ; jmp qword ptr [rax]
0x000000000045d0f4 : sar dh, 0x25 ; add al, ch ; ret
0x0000000000438ca3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x438cae ; ret
0x0000000000447c79 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000047236c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000488dee : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000494d61 : sar ecx, 1 ; call rax
0x00000000004a8083 : sar ecx, 1 ; jnp 0x4a8044 ; ret
0x00000000004160c7 : sar edx, 2 ; call 0x412315
0x0000000000472472 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042c337 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000448133 : sar esi, 1 ; jg 0x448163 ; vzeroupper ; ret
0x00000000004482cc : sar esi, 1 ; jg 0x4482fc ; vzeroupper ; ret
0x000000000047236b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000488ded : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004160c6 : sar rdx, 2 ; call 0x412316
0x00000000004160c5 : sar rdx, 2 ; call 0x412317
0x0000000000472471 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042c336 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463e05 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044ae41 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004adca1 : sbb al, 0 ; add byte ptr [rsp + rcx*4], ch ; idiv bh ; retf
0x000000000046727d : sbb al, 0x29 ; ret 0xe683
0x00000000004b1158 : sbb al, 0x51 ; add byte ptr [rax], al ; in al, 0xca ; stc ; jmp qword ptr [rdx]
0x00000000004681b7 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a9382 : sbb al, 0x8c ; retf
0x0000000000495721 : sbb al, 0xfa ; call qword ptr [rax]
0x000000000045ef1a : sbb al, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040e612 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004648e6 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004074c3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000045f184 : sbb al, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046a38b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b658 : sbb al, ch ; ret 0xffaf
0x0000000000409a27 : sbb al, ch ; retf
0x0000000000495759 : sbb bh, dl ; call qword ptr [rax + 0x10fffa1b]
0x00000000004a8112 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a6e05 : sbb bl, byte ptr [rsi] ; ret
0x0000000000482354 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004862f4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004853f9 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000475d51 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047e9b1 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419b41 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045e774 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041c19d : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000482355 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000469c92 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048e43a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000485caf : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000482d37 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041fdb5 : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047feb5 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x00000000004748b0 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000048012c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416e91 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041aaeb : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000411e8e : sbb byte ptr [rax - 0x77], cl ; retf
0x000000000041a303 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000041d658 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004862f5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000449d31 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040ab0a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004b0854 : sbb byte ptr [rax], cl ; add al, bl ; xchg eax, esp ; stc ; jmp qword ptr [rcx]
0x0000000000495874 : sbb byte ptr [rbp - 0x612f0006], 0xfa ; jmp qword ptr [rax]
0x000000000048aeb5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004203e0 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044d9fc : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000412257 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418d27 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004ac354 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; js 0x4ac3bf ; cmc ; call qword ptr [rcx]
0x000000000047218a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000458752 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041a21e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000047269e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049072f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x4907b2 ; ret 0x8b48
0x00000000004549d8 : sbb byte ptr [rcx - 0x77], al ; ret
0x0000000000488f27 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000462dff : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000040e1c0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004128c4 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000041fe03 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004853fa : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004b1fbc : sbb byte ptr [rdi], 0 ; mov al, 0x74 ; cli ; call qword ptr [rsi]
0x00000000004b0f54 : sbb byte ptr [rdi], cl ; add byte ptr [rax - 0x49], cl ; stc ; call qword ptr [rax]
0x0000000000404543 : sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000004877db : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000494b40 : sbb byte ptr [rsi - 0x602f0007], 0xf9 ; jmp qword ptr [rax]
0x00000000004b0e54 : sbb byte ptr [rsi], cl ; add byte ptr [rax], bl ; mov dh, 0xf9 ; call qword ptr [rcx]
0x00000000004947a1 : sbb cl, bh ; jmp qword ptr [rax]
0x000000000041e6cd : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000045815d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043e62d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044027a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fa9a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043fe8a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f6aa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f18d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e96d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e14d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f849 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ecad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e48d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dc6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ee4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043fd3a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f55a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044066a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dfad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e0e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ede3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e903 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc3b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044056b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f123 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e423 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043df43 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec43 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fd8b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f5ab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e765 : sbb dh, bl ; ret
0x0000000000400590 : sbb dl, 0 ; test dl, dl ; jne 0x40059f ; ret
0x0000000000495715 : sbb dl, bh ; call qword ptr [rax + 0x10fffa19]
0x0000000000495755 : sbb dl, bh ; call qword ptr [rax]
0x0000000000481017 : sbb dl, dh ; jmp r11
0x0000000000488dcb : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e659 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044c4f4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000461c69 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a96bd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000414dc3 : sbb dword ptr [rdx + 0x2a], esi ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000466b60 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000446d57 : sbb eax, -1 ; ret
0x000000000048d7b2 : sbb eax, 0x18c48348 ; ret
0x0000000000495761 : sbb eax, 0x1e90fffa ; cli ; call qword ptr [rax]
0x00000000004907f0 : sbb eax, 0x22c4fb ; jne 0x4907e0 ; pop rbx ; ret
0x00000000004a8113 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000047e53a : sbb eax, 0xba000273 ; retf 0
0x0000000000404458 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045e602 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040823a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040765c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000482e9a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042c797 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048e33f : sbb eax, eax ; ret
0x0000000000446d55 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000424d11 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a9228 : sbb ebp, ebx ; retf
0x000000000044eb8a : sbb ebx, edi ; dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000473139 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x000000000045118e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000040449d : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004a8fb9 : sbb edi, ebp ; retf
0x000000000049571d : sbb edi, edx ; call qword ptr [rax + 0x10fffa1c]
0x000000000049575d : sbb edi, edx ; call qword ptr [rax]
0x00000000004b19e1 : sbb edi, edx ; call qword ptr [rdi]
0x0000000000495719 : sbb edx, edi ; call qword ptr [rax]
0x000000000042b832 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004402ce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000046d326 : scasb al, byte ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004958a9 : scasb al, byte ptr [rdi] ; cli ; jmp qword ptr [rax]
0x00000000004a9669 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000421dbe : scasb al, byte ptr [rdi] ; retf
0x00000000004403cd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046cdf9 : scasd eax, dword ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004b2521 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b2509 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b2535 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000041516e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e9c9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045ba1e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000411f76 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041a219 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000448c43 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000047eefd : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004a8394 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a760f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044c58c : setae al ; ret
0x000000000045b74a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000400caf : setne al ; leave ; ret
0x00000000004191ac : setne al ; neg eax ; ret
0x000000000042c07b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042c03b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000004acc20 : shl byte ptr [rdi], 0xf6 ; jmp qword ptr [rax]
0x00000000004947b8 : shl byte ptr [rdx], 1 ; stc ; push rax ; and edi, ecx ; call qword ptr [rax]
0x0000000000446f9f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042504b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000445343 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000440af5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042dfab : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042dfc2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004739c6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004739d7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042dea1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b4fc0 : shl dh, 1 ; cld ; jmp qword ptr [rcx]
0x00000000004a07f0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a7f1d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000041e0fb : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004a8208 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000446f82 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042df26 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446dfb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00000000004739c2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042504f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042dfdd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042dfc6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042dfaf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ca6b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042df41 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b9cc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042de01 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044e8b1 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e8ad : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000048356c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004834f7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004834c6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464209 : shl edx, 3 ; call 0x40043d
0x000000000048356b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004834f6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004834c5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464208 : shl rdx, 3 ; call 0x40043e
0x00000000004a77c4 : shr al, cl ; add al, 0x3d ; retf
0x000000000042e0e4 : shr byte ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004947d8 : shr byte ptr [rbx], 1 ; stc ; push rax ; sub al, 0xf9 ; call qword ptr [rax]
0x00000000004266ff : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000424caa : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000457f08 : shr byte ptr [rcx], cl ; ret
0x000000000042c33b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004a95c7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000495684 : shr byte ptr [rip + 0x2d50fffa], 1 ; cli ; call rax
0x0000000000495a3c : shr byte ptr [rsi], 0xfb ; jmp rax
0x000000000048d292 : shr cl, 1 ; ret 0xfffe
0x0000000000468c4c : shr cl, cl ; jrcxz 0x468c58 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048cd9f : shr cl, cl ; ret
0x0000000000459edf : shr cl, cl ; retf
0x000000000044fc79 : shr eax, 0x31 ; or eax, 0xd830000 ; retf 0x26d1
0x000000000044891a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000474a8b : shr eax, 2 ; ret
0x0000000000474f93 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448965 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041f6be : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000048367c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000483601 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004835d0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048367b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000483600 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004835cf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000474a8a : shr rax, 2 ; ret
0x0000000000474f92 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f9c9 : sldt word ptr [rax] ; ret
0x00000000004541c8 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000004742c6 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042b7e7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494a0a : stc ; call qword ptr [rax + 0x20fff9be]
0x0000000000494d52 : stc ; call qword ptr [rax - 0x1f000633]
0x0000000000494cfe : stc ; call qword ptr [rax - 0x1f00063a]
0x0000000000494b86 : stc ; call qword ptr [rax - 0x1f00065f]
0x0000000000494b32 : stc ; call qword ptr [rax - 0x1f000666]
0x00000000004947be : stc ; call qword ptr [rax]
0x00000000004b0442 : stc ; call qword ptr [rbx]
0x00000000004b0e5a : stc ; call qword ptr [rcx]
0x00000000004b03b6 : stc ; call qword ptr [rdx]
0x0000000000494956 : stc ; call qword ptr [rsi + 0x26fff993]
0x00000000004947b6 : stc ; call rax
0x00000000004948f2 : stc ; call rcx
0x00000000004b0c06 : stc ; call rsi
0x00000000004b033e : stc ; call rsp
0x0000000000463c0e : stc ; dec dword ptr [rax + 0x29] ; ret
0x00000000004693c5 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000494c8a : stc ; inc dword ptr [rax + 0x10fff9e5] ; fdivr st(1) ; call rax
0x0000000000494bea : stc ; inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x0000000000494a8e : stc ; inc dword ptr [rax + 0x40fff9b0] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x000000000049486a : stc ; inc dword ptr [rax + 0x4a] ; stc ; jmp qword ptr [rax]
0x0000000000494caa : stc ; inc dword ptr [rax - 0x1b] ; stc ; call rax
0x0000000000494ca6 : stc ; inc dword ptr [rax - 0x1d] ; stc ; inc dword ptr [rax - 0x1b] ; stc ; call rax
0x0000000000494c3a : stc ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494cd2 : stc ; inc dword ptr [rax - 0x27] ; stc ; call qword ptr [rax]
0x0000000000494d5e : stc ; inc dword ptr [rax - 0x2f00062f] ; sar cl, cl ; jmp qword ptr [rax]
0x0000000000494d0a : stc ; inc dword ptr [rax - 0x2f000636] ; retf
0x0000000000494b92 : stc ; inc dword ptr [rax - 0x2f00065b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x0000000000494b3e : stc ; inc dword ptr [rax - 0x2f000662] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000494d4e : stc ; inc dword ptr [rax - 0x34] ; stc ; call qword ptr [rax - 0x1f000633]
0x0000000000494cfa : stc ; inc dword ptr [rax - 0x3b] ; stc ; call qword ptr [rax - 0x1f00063a]
0x0000000000494d2e : stc ; inc dword ptr [rax - 0x40] ; stc ; call qword ptr [rax]
0x0000000000494a5e : stc ; inc dword ptr [rax - 0x48] ; stc ; jmp qword ptr [rax]
0x0000000000494a92 : stc ; inc dword ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x0000000000494aae : stc ; inc dword ptr [rax - 0x50] ; stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x0000000000494b82 : stc ; inc dword ptr [rax - 0x60] ; stc ; call qword ptr [rax - 0x1f00065f]
0x0000000000494be6 : stc ; inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x0000000000494c86 : stc ; inc dword ptr [rax - 0x7f00061d] ; in eax, 0xf9 ; call qword ptr [rax]
0x0000000000494b16 : stc ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494a9a : stc ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x0000000000494ab2 : stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x0000000000494852 : stc ; inc dword ptr [rax] ; pop rax ; stc ; push qword ptr [rax + 0x59] ; stc ; jmp rax
0x0000000000494826 : stc ; inc dword ptr [rax] ; stc ; push qword ptr [rax] ; xor bh, cl ; call qword ptr [rax]
0x0000000000494876 : stc ; inc dword ptr [rax] ; stc ; push rax ; stc ; jmp rax
0x000000000049491a : stc ; inc dword ptr [rcx - 0x6c] ; stc ; call rcx
0x0000000000494962 : stc ; inc dword ptr [rsi - 0x6b] ; stc ; jmp rsi
0x0000000000494952 : stc ; inc dword ptr [rsi] ; xchg eax, ebx ; stc ; call qword ptr [rsi + 0x26fff993]
0x0000000000494d1a : stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x0000000000494ba2 : stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000043f382 : stc ; je 0x43f34e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000049479a : stc ; jmp qword ptr [rax - 0x1f0006e9]
0x000000000049478a : stc ; jmp qword ptr [rax - 0x1f0006ee]
0x000000000049477a : stc ; jmp qword ptr [rax - 0x1f0006f3]
0x0000000000494772 : stc ; jmp qword ptr [rax]
0x00000000004b018a : stc ; jmp qword ptr [rbx]
0x00000000004948fe : stc ; jmp qword ptr [rcx + 0x21fff990]
0x0000000000494906 : stc ; jmp qword ptr [rcx + 0x21fff991]
0x000000000049490e : stc ; jmp qword ptr [rcx + 0x21fff992]
0x0000000000494902 : stc ; jmp qword ptr [rcx]
0x00000000004b115e : stc ; jmp qword ptr [rdx]
0x00000000004948ee : stc ; jmp qword ptr [rip - 0x2e000673]
0x000000000049495a : stc ; jmp qword ptr [rsi]
0x000000000049477e : stc ; jmp rax
0x00000000004b0406 : stc ; jmp rbx
0x00000000004948d2 : stc ; jmp rdx
0x0000000000494966 : stc ; jmp rsi
0x00000000004a8084 : stc ; jnp 0x4a8043 ; ret
0x00000000004949ee : stc ; ljmp ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000430888 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000429f07 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494856 : stc ; push qword ptr [rax + 0x59] ; stc ; jmp rax
0x0000000000494d16 : stc ; push qword ptr [rax - 0x32] ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x0000000000494b9e : stc ; push qword ptr [rax - 0x57] ; stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x0000000000494c56 : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000494afa : stc ; push qword ptr [rax] ; mov ch, 0xf9 ; jmp qword ptr [rax]
0x0000000000494b12 : stc ; push qword ptr [rax] ; mov cl, 0xf9 ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494a7a : stc ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494866 : stc ; push qword ptr [rax] ; pop rdi ; stc ; inc dword ptr [rax + 0x4a] ; stc ; jmp qword ptr [rax]
0x000000000049482a : stc ; push qword ptr [rax] ; xor bh, cl ; call qword ptr [rax]
0x0000000000494916 : stc ; push qword ptr [rcx + 0x41fff993] ; xchg eax, esp ; stc ; call rcx
0x000000000049495e : stc ; push qword ptr [rsi + 0x46fff994] ; xchg eax, ebp ; stc ; jmp rsi
0x00000000004947ba : stc ; push rax ; and edi, ecx ; call qword ptr [rax]
0x0000000000494cda : stc ; push rax ; fdiv st(1), st(0) ; jmp rax
0x00000000004949f2 : stc ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000494cf6 : stc ; push rax ; ret
0x0000000000494d4a : stc ; push rax ; retf 0xfff9
0x000000000049487a : stc ; push rax ; stc ; jmp rax
0x00000000004947da : stc ; push rax ; sub al, 0xf9 ; call qword ptr [rax]
0x0000000000439393 : stc ; ret
0x00000000004474c9 : stc ; salc ; clc ; ret
0x00000000004b35f1 : stc ; sti ; jmp qword ptr [rbx]
0x00000000004391a4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042c817 : stc ; xlatb ; ret 0xff2d
0x0000000000489c0f : std ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000044dbe3 : std ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004b620a : std ; call qword ptr [rbx]
0x00000000004b5c9a : std ; call qword ptr [rdx]
0x00000000004a5646 : std ; call rax
0x00000000004b23e2 : std ; call rdx
0x00000000004abac6 : std ; call rsp
0x0000000000476952 : std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004742e8 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044aa7e : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000046a3d2 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a565e : std ; dec dword ptr [rax] ; jbe 0x4a5665 ; jmp rax
0x00000000004a569e : std ; dec eax ; je 0x4a56a5 ; call rax
0x00000000004a5742 : std ; inc dword ptr [rbp + 0x38fffd86] ; jge 0x4a5751 ; jmp qword ptr [rax]
0x0000000000482d2b : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004821de : std ; jbe 0x4821ec ; ret
0x00000000004a574a : std ; jmp qword ptr [rax]
0x00000000004a5642 : std ; jmp qword ptr [rbx - 0x2f00027b]
0x00000000004b59e2 : std ; jmp qword ptr [rcx]
0x00000000004b1eaa : std ; jmp qword ptr [rdi]
0x00000000004b15ca : std ; jmp qword ptr [rdx]
0x00000000004a5662 : std ; jmp rax
0x00000000004b5312 : std ; jmp rdx
0x00000000004b5a16 : std ; jmp rsp
0x00000000004300ab : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044ba9e : std ; push rbx ; ret
0x0000000000447703 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000455e3f : std ; ret 0xfffa
0x00000000004a8fba : std ; retf
0x00000000004abac5 : std ; std ; call rsp
0x0000000000424284 : std ; sub rsp, 8 ; call 0x4004c7
0x00000000004448af : std ; syscall
0x000000000042c0e1 : std ; xlatb ; ret
0x000000000042c0d9 : std ; xlatb ; ret 0xc085
0x000000000042c653 : std ; xlatb ; ret 0xe883
0x0000000000473ca1 : std ; xlatb ; retf 0xc985
0x0000000000473b74 : std ; xlatb ; retf 0xfdc5
0x0000000000473bd4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000422611 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000412053 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000496006 : sti ; call qword ptr [rax]
0x0000000000496d9e : sti ; call qword ptr [rdi]
0x000000000049600e : sti ; call qword ptr [rdx + 0x27fffb3d]
0x0000000000495fde : sti ; call qword ptr [rdx]
0x00000000004967be : sti ; call rax
0x0000000000496d82 : sti ; call rbx
0x0000000000495eca : sti ; call rsi
0x00000000004967ce : sti ; dec dword ptr [rax + 0x6a] ; sti ; jmp qword ptr [rax]
0x0000000000495a36 : sti ; dec dword ptr [rax - 0x3f0004d1] ; sti ; jmp rax
0x000000000044eb8b : sti ; dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000044988f : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000496d9a : sti ; dec dword ptr [rdi + 0x72] ; sti ; call qword ptr [rdi]
0x0000000000496db6 : sti ; dec dword ptr [rdi + rbp*2 + 0x72c9fffb] ; sti ; call qword ptr [rax]
0x0000000000496dba : sti ; dec ecx ; jb 0x496dbf ; call qword ptr [rax]
0x0000000000495fd6 : sti ; dec esp ; cmp eax, 0x3cb8fffb ; sti ; call qword ptr [rdx]
0x0000000000492f3c : sti ; div esi ; jmp rcx
0x0000000000496d96 : sti ; inc dword ptr [rax + 0x4ffffb74] ; jb 0x496da3 ; call qword ptr [rdi]
0x0000000000495ffe : sti ; inc dword ptr [rsp + rdi + 0x3c84fffb] ; sti ; call qword ptr [rax]
0x000000000049626a : sti ; inc dword ptr [rsp + rdi + 0x3ceafffb] ; sti ; call rsi
0x0000000000495a3a : sti ; inc eax ; sti ; jmp rax
0x0000000000424922 : sti ; jmp 0x4248f2
0x00000000004967aa : sti ; jmp qword ptr [rax]
0x00000000004b35f2 : sti ; jmp qword ptr [rbx]
0x0000000000496012 : sti ; jmp qword ptr [rdi]
0x0000000000495a3e : sti ; jmp rax
0x000000000049604e : sti ; jmp rbx
0x0000000000496d66 : sti ; jmp rdx
0x0000000000496d5e : sti ; lcall ptr [rdi + 0x71] ; sti ; ljmp ptr [rdx] ; jno 0x496d6b ; jmp rdx
0x000000000049601e : sti ; lcall ptr [rdx + 0x3d] ; sti ; call qword ptr [rdx]
0x0000000000496d62 : sti ; ljmp ptr [rdx] ; jno 0x496d67 ; jmp rdx
0x0000000000430488 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004967ca : sti ; push qword ptr [rax + 0x6a] ; sti ; dec dword ptr [rax + 0x6a] ; sti ; jmp qword ptr [rax]
0x00000000004967ba : sti ; push qword ptr [rax + rbp*2] ; sti ; call rax
0x00000000004967b6 : sti ; push qword ptr [rax + rbp*2] ; sti ; push qword ptr [rax + rbp*2] ; sti ; call rax
0x00000000004967a2 : sti ; push qword ptr [rax + rbp*2] ; sti ; push rax ; push -5 ; jmp qword ptr [rax]
0x00000000004967a6 : sti ; push rax ; push -5 ; jmp qword ptr [rax]
0x00000000004a820a : sti ; ret
0x0000000000449b95 : sti ; ret 4
0x00000000004b1701 : sti ; stc ; call qword ptr [rax]
0x000000000045b067 : sti ; test rax, rax ; je 0x45b075 ; call rax
0x00000000004a86e4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000044842b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000461b72 : stosb byte ptr [rdi], al ; pop rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000494ba5 : stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x0000000000424bc1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046908e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041f6c3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a97ec : stosd dword ptr [rdi], eax ; ret
0x00000000004a96ea : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000424e71 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041f6c2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a9bd1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004824d6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000448662 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000004b0404 : sub al, 0x80 ; stc ; jmp rbx
0x000000000044cd00 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000004adca4 : sub al, 0x8c ; idiv bh ; retf
0x000000000042d5f3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b2534 : sub al, 0xaf ; cli ; call qword ptr [rdx]
0x00000000004947dd : sub al, 0xf9 ; call qword ptr [rax]
0x0000000000495691 : sub al, 0xfa ; call rax
0x0000000000495611 : sub al, 0xfa ; jmp rsp
0x0000000000497c35 : sub al, 0xfc ; jmp qword ptr [rax]
0x0000000000419130 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000413265 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004190c6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a3c45], 1 ; ret
0x0000000000419035 : sub al, byte ptr [rax] ; ret
0x0000000000424c6a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000424fb2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000482ba5 : sub al, byte ptr [rdx] ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000482ba4 : sub al, byte ptr ss:[rdx] ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000042c9b5 : sub al, ch ; std ; xlatb ; ret
0x00000000004947d5 : sub bh, cl ; call rax
0x0000000000495621 : sub bh, dl ; call rsp
0x00000000004954e1 : sub bh, dl ; jmp qword ptr [rax]
0x000000000046406b : sub bl, cl ; in eax, 0xdf ; loopne 0x464000 ; ret
0x00000000004778e7 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000416a0c : sub byte ptr [rax + 0x39], cl ; retf
0x00000000004778e6 : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000484063 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x000000000045895b : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000404806 : sub byte ptr [rax - 0x75], cl ; pop rsp ; and al, 0x30 ; call 0x420aa8
0x00000000004232e4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c89c : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000470434 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000404fe3 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040ddf9 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040de64 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040df19 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040de96 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040de4f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040deae : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040df4f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000004849fd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484a45 ; leave ; ret
0x000000000048f6f2 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000449424 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400c86 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000488873 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000488872 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004949f0 : sub byte ptr [rcx - 0x4d0f0007], dh ; stc ; call rax
0x000000000040450b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x000000000040453f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000424deb : sub byte ptr [rcx], 0 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000044c82c : sub byte ptr [rcx], al ; ret
0x0000000000420abe : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 5 ; nop ; ret 0x29
0x0000000000422106 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000424dca : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x0000000000424e0b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000468ab6 : sub cl, bpl ; ret 0xffe8
0x000000000040f12d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000468ab7 : sub cl, ch ; ret 0xffe8
0x000000000045eb84 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000496d64 : sub dh, byte ptr [rcx - 5] ; jmp rdx
0x0000000000495531 : sub dl, bh ; call qword ptr [rdx]
0x00000000004956b1 : sub dl, bh ; call rax
0x0000000000495671 : sub dl, bh ; jmp rax
0x000000000049552d : sub dl, bh ; ljmp ptr [rax + rbp - 6] ; call qword ptr [rdx]
0x00000000004956ad : sub dl, bh ; push qword ptr [rax] ; sub dl, bh ; call rax
0x00000000004956ed : sub dl, bh ; push rax ; or bh, dl ; call qword ptr [rax]
0x000000000048082a : sub dl, dh ; call r11
0x0000000000475dde : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a858d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000477c02 : sub dword ptr [rax + 0xf000002], -0x7b ; ret
0x000000000042016a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000424c8c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004201ca : sub dword ptr [rax], eax ; ret
0x000000000044f0bf : sub dword ptr [rbp - 0x60], eax ; call 0x44b3a5
0x00000000004a9222 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042e6d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e6ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e827 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e83d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e977 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e98d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eac7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42eadd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ec2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ed7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eeb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42eecd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f007 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f01d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f157 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f16d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f2a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f2bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f3f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f40d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f547 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f55d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f697 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f6ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f7e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f7fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f94d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4310bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43120d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431347 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43135d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431497 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4314ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004315e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4315fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431737 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43174d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431887 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43189d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004319d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4319ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431b27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431b3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431c8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431dc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431ddd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431f17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431f2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432067 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43207d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004321b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4321cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43231d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e633 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e62f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042e6dd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000424cab : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042abb7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042ddd6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042aa71 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a9ada : sub dword ptr [rsi], 0x76 ; retf
0x000000000040e15d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042c747 : sub eax, -1 ; jne 0x42c758 ; vzeroupper ; ret
0x000000000042385a : sub eax, 0x10 ; ret
0x0000000000497c31 : sub eax, 0x2cb8fffc ; cld ; jmp qword ptr [rax]
0x0000000000495685 : sub eax, 0x2d50fffa ; cli ; call rax
0x0000000000495605 : sub eax, 0x2d64fffa ; cli ; jmp rsp
0x0000000000469f64 : sub eax, 0x83000000 ; ret
0x0000000000467335 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a7226 : sub eax, 0xea4ca798 ; retf
0x0000000000424d12 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000458df4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004471d4 : sub eax, 1 ; ret
0x0000000000482226 : sub eax, dword ptr [0] ; ret
0x0000000000401a3e : sub eax, dword ptr [rax] ; adc ch, cl ; ret
0x0000000000401a10 : sub eax, dword ptr [rax] ; add al, 0xeb ; mov byte ptr [rcx], bh ; ret 0x860f
0x0000000000403e2f : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004005a9 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000400b2a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000405a72 : sub eax, dword ptr [rax] ; call 0x421d04
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x000000000040229f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045eb26 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004199de : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000042122d : sub eax, dword ptr [rdi] ; add al, ch ; retf
0x0000000000448efa : sub eax, dword ptr [rdx + rcx*4] ; je 0x448ee6 ; ret
0x0000000000424e72 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000418d03 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044733d : sub eax, eax ; cmp eax, ecx ; jle 0x447381 ; movsxd rax, ecx ; ret
0x0000000000481694 : sub eax, eax ; ret
0x000000000042c793 : sub eax, ecx ; je 0x42c7a9 ; sbb eax, eax ; or eax, 1 ; ret
0x00000000004183d9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000484cf0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042643c : sub eax, ecx ; ret
0x00000000004412e9 : sub eax, edi ; ret
0x0000000000474b9e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000484dd3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000418d2b : sub eax, edx ; ret
0x0000000000474f90 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042c75c : sub eax, edx ; vzeroupper ; ret
0x000000000044739d : sub eax, esi ; ret
0x0000000000481693 : sub eax, r8d ; ret
0x00000000004a847e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000414710 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046519f : sub ebp, ecx ; retf
0x00000000004132e6 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a6f15 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000041b960 : sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000044d698 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000474124 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000004947d9 : sub edi, ecx ; push rax ; sub al, 0xf9 ; call qword ptr [rax]
0x0000000000495699 : sub edi, edx ; call rax
0x0000000000495619 : sub edi, edx ; jmp rsp
0x0000000000418d30 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000418d25 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042bbe4 : sub edx, eax ; jbe 0x42bc27 ; add rax, rdi ; ret
0x000000000042bbf4 : sub edx, eax ; jbe 0x42bc29 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042bc04 : sub edx, eax ; jbe 0x42bc29 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042bc14 : sub edx, eax ; jbe 0x42bc29 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000495569 : sub edx, edi ; call rdx
0x00000000004956e5 : sub edx, edi ; jmp qword ptr [rax]
0x0000000000413cbf : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004160c4 : sub edx, esi ; sar rdx, 2 ; call 0x412318
0x000000000048aeb3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000492bcd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000424286 : sub esp, 8 ; call 0x4004c5
0x0000000000475a33 : sub esp, 8 ; syscall
0x00000000004183d8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000423859 : sub rax, 0x10 ; ret
0x00000000004471d3 : sub rax, 1 ; ret
0x0000000000482225 : sub rax, qword ptr [0] ; ret
0x00000000004199dd : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000482224 : sub rax, qword ptr fs:[0] ; ret
0x0000000000485a02 : sub rax, r8 ; ret
0x00000000004412e8 : sub rax, rdi ; ret
0x0000000000474b9d : sub rax, rdi ; shr rax, 2 ; ret
0x00000000004472a3 : sub rax, rdx ; ret
0x000000000044133f : sub rax, rdx ; vzeroupper ; ret
0x000000000044739c : sub rax, rsi ; ret
0x000000000042bbe3 : sub rdx, rax ; jbe 0x42bc28 ; add rax, rdi ; ret
0x00000000004160c3 : sub rdx, rsi ; sar rdx, 2 ; call 0x412319
0x000000000048aeb2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000492bcc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000424285 : sub rsp, 8 ; call 0x4004c6
0x0000000000475a32 : sub rsp, 8 ; syscall
0x000000000040185c : syscall
0x0000000000481f57 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x0000000000417c44 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000475b35 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048b643 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b37b8 : test al, 0 ; cld ; jmp rdx
0x0000000000488c54 : test al, 0x1e ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000044b45e : test al, 0x45 ; mov esp, esi ; call r15
0x000000000044c1fa : test al, 0x75 ; ret
0x00000000004a77d7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004a71be : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000004b15c8 : test al, 0xf6 ; std ; jmp qword ptr [rdx]
0x000000000040dd71 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047ef15 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004266fa : test al, al ; jne 0x4266e8 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000448cb0 : test al, al ; jne 0x448be9 ; jmp 0x448c8e
0x0000000000420556 : test bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004aa0e4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004732cc : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a8591 : test bh, dl ; retf 0xdf7f
0x000000000041a308 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000004108af : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000459951 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x00000000004107e1 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000046b5c9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000040f04a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041a6ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044551a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044495a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041905a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004135ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000041218a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041901a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044535a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000044f672 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046b4cc : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000496004 : test byte ptr [rbx + rdi*8], bh ; call qword ptr [rax]
0x000000000047315f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048c74b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048e2e2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000462442 : test byte ptr [rcx - 0x7a000007], al ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004641a4 : test byte ptr [rcx - 0xcf73], 0xff ; call 0x400491
0x000000000042a4c6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042aca6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004297d6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042abb6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x00000000004294f6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044bef4 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x00000000004708c9 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000042076e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004732b4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004222ce : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004769ae : test byte ptr [rdx], bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000004227ce : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000046a054 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045fa84 : test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000473dbd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000004124a4 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000488efd : test byte ptr [rsi - 0x7cfffff5], bl ; ret 0x4101
0x0000000000453841 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004411cd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000459251 : test ch, bl ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x1d], cl ; retf
0x000000000042b7e6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000429f06 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b606 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048a53a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000429c26 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427cb6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427fb6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428eb6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b6f6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428bb6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004288b6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004285b6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044ce41 : test cl, ch ; retf 0xfffe
0x000000000042a636 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b516 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446e5f : test cl, cl ; jne 0x446e54 ; ret
0x0000000000446f0f : test cl, cl ; jne 0x446f04 ; ret
0x00000000004471cf : test cl, cl ; jne 0x4471c8 ; sub rax, 1 ; ret
0x0000000000491f01 : test dh, al ; add eax, 0x89490000 ; ret 0x8349
0x00000000004453a4 : test dl, 0x40 ; jne 0x445369 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004453d2 : test dl, 4 ; jne 0x445369 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000495829 : test dl, bh ; push qword ptr [rax] ; xchg dl, bh ; call rax
0x0000000000400593 : test dl, dl ; jne 0x40059c ; ret
0x000000000040e0c6 : test dl, dl ; jne 0x40e0a8 ; ret
0x000000000044707f : test dl, dl ; jne 0x447078 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000481607 : test dl, dl ; jne 0x4815e3 ; movsx eax, cl ; neg eax ; ret
0x0000000000489372 : test dword ptr [rax + 0x39], 0x430f48c2 ; ret 0x8348
0x0000000000492253 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x000000000046d197 : test dword ptr [rax - 0x74b7ffdc], esi ; add al, 0xf8 ; jmp rax
0x00000000004732cd : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000469536 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004028b1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044dd51 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045f4f9 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000469c46 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbc20
0x00000000004028b0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044dd50 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042bb68 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000044a249 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d8d7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042dd26 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c9a8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x00000000004205a8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000475ceb : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d8ad : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d7bd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d6cd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000411a68 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048e6c4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041d9ec : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042d5f2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473ba3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449eb6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x00000000004a5744 : test dword ptr [rsi + 0x7d38fffd], eax ; std ; jmp qword ptr [rax]
0x0000000000446be2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004603c1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000041029d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042daf8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a866d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a94c0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433776 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000494ba1 : test eax, 0xaac0fff9 ; stc ; call qword ptr [rax]
0x000000000044c47b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x00000000004237d1 : test eax, eax ; je 0x4237e8 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000042b8b8 : test eax, eax ; je 0x42b8c4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044ac78 : test eax, eax ; je 0x44ac83 ; ret
0x000000000044dbe6 : test eax, eax ; je 0x44dbf5 ; ret
0x0000000000459c64 : test eax, eax ; je 0x459c6e ; call rax
0x000000000045b069 : test eax, eax ; je 0x45b073 ; call rax
0x00000000004857c0 : test eax, eax ; je 0x4857d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048fb88 : test eax, eax ; je 0x48fb95 ; ret
0x000000000048fc98 : test eax, eax ; je 0x48fca5 ; ret
0x0000000000491431 : test eax, eax ; je 0x491440 ; call rax
0x0000000000417d4c : test eax, eax ; jne 0x417d45 ; ret
0x0000000000418ce4 : test eax, eax ; jne 0x418cdd ; ret
0x000000000042bb95 : test eax, eax ; jne 0x42bbf6 ; xor eax, eax ; ret
0x000000000042c011 : test eax, eax ; jne 0x42c039 ; xor eax, eax ; vzeroupper ; ret
0x000000000044a016 : test eax, eax ; jne 0x44a036 ; xor eax, eax ; syscall
0x000000000044a0e6 : test eax, eax ; jne 0x44a109 ; mov eax, 1 ; syscall
0x000000000044a223 : test eax, eax ; jne 0x44a291 ; mov eax, 0x48 ; syscall
0x000000000044a3b6 : test eax, eax ; jne 0x44a3d9 ; mov eax, 3 ; syscall
0x000000000044c5b0 : test eax, eax ; jne 0x44c5ab ; pop rdx ; pop r10 ; ret
0x0000000000475cc5 : test eax, eax ; jne 0x475d2f ; mov eax, 0x101 ; syscall
0x000000000048fbc7 : test eax, eax ; jne 0x48fbd5 ; ret
0x000000000048fbe2 : test eax, eax ; jne 0x48fbf5 ; ret
0x000000000048fe12 : test eax, eax ; jne 0x48fe25 ; ret
0x000000000047c3d0 : test eax, eax ; js 0x47c3e7 ; pop rbx ; ret
0x0000000000400cad : test eax, eax ; setne al ; leave ; ret
0x000000000047e6ed : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000046a635 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x0000000000470c8a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044af19 : test ebp, ebp ; jne 0x44af38 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044ba84 : test ebp, ebp ; jne 0x44bab0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bab7 : test ebp, ebp ; jne 0x44bb09 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bae3 : test ebp, ebp ; jne 0x44bb69 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490901 : test ebp, ebp ; jne 0x4908f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004914bb : test ebp, ebp ; jne 0x4914a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a5645 : test ebp, edi ; call rax
0x00000000004a565d : test ebp, edi ; dec dword ptr [rax] ; jbe 0x4a5666 ; jmp rax
0x00000000004a569d : test ebp, edi ; dec eax ; je 0x4a56a6 ; call rax
0x00000000004a5641 : test ebp, edi ; jmp qword ptr [rbx - 0x2f00027b]
0x000000000042bad0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000422610 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000422108 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454fd9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000445392 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474c79 : test ecx, ecx ; jne 0x474c38 ; mov rax, rdx ; ret
0x000000000044af3f : test edi, edi ; jne 0x44af89 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af67 : test edi, edi ; jne 0x44afa9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bb6f : test edi, edi ; jne 0x44bbda ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bb9f : test edi, edi ; jne 0x44bc0b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047fb4a : test edi, edi ; jne 0x47fb25 ; ret
0x0000000000484e9d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484e91 ; mov rax, rsi ; ret
0x0000000000441182 : test edx, edx ; je 0x441191 ; bsf eax, edx ; ret
0x000000000044122b : test edx, edx ; je 0x441248 ; bsf rax, rdx ; ret
0x000000000044ceba : test edx, edx ; je 0x44ced1 ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000473e2a : test edx, edx ; je 0x473e58 ; bsf rax, rdx ; ret
0x0000000000415183 : test edx, edx ; jne 0x415195 ; ret
0x0000000000416e2f : test edx, edx ; jne 0x416e25 ; ret
0x000000000047110f : test edx, edx ; jne 0x471105 ; ret
0x00000000004749da : test edx, edx ; jne 0x4749d5 ; ret
0x0000000000445385 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000459b68 : test esi, esi ; je 0x459b72 ; call rsi
0x0000000000473d21 : test esi, esi ; jne 0x473d30 ; xor rax, rax ; ret
0x00000000004749e1 : test esi, esi ; jne 0x4749f0 ; xor rax, rax ; ret
0x000000000045f284 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000044539f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b8b7 : test r8d, r8d ; je 0x42b8c5 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474c78 : test r9d, r9d ; jne 0x474c39 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x00000000004237d0 : test rax, rax ; je 0x4237e9 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000044ac77 : test rax, rax ; je 0x44ac84 ; ret
0x0000000000459c63 : test rax, rax ; je 0x459c6f ; call rax
0x000000000045b068 : test rax, rax ; je 0x45b074 ; call rax
0x00000000004857bf : test rax, rax ; je 0x4857d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491430 : test rax, rax ; je 0x491441 ; call rax
0x0000000000417d4b : test rax, rax ; jne 0x417d46 ; ret
0x0000000000418ce3 : test rax, rax ; jne 0x418cde ; ret
0x0000000000400cac : test rax, rax ; setne al ; leave ; ret
0x000000000044af18 : test rbp, rbp ; jne 0x44af39 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044ba83 : test rbp, rbp ; jne 0x44bab1 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490900 : test rbp, rbp ; jne 0x4908f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004914ba : test rbp, rbp ; jne 0x4914a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047fb49 : test rdi, rdi ; jne 0x47fb26 ; ret
0x000000000044122a : test rdx, rdx ; je 0x441249 ; bsf rax, rdx ; ret
0x0000000000473e29 : test rdx, rdx ; je 0x473e59 ; bsf rax, rdx ; ret
0x0000000000415182 : test rdx, rdx ; jne 0x415196 ; ret
0x0000000000416e2e : test rdx, rdx ; jne 0x416e26 ; ret
0x000000000047110e : test rdx, rdx ; jne 0x471106 ; ret
0x0000000000459b67 : test rsi, rsi ; je 0x459b73 ; call rsi
0x0000000000473d20 : test rsi, rsi ; jne 0x473d31 ; xor rax, rax ; ret
0x00000000004749e0 : test rsi, rsi ; jne 0x4749f1 ; xor rax, rax ; ret
0x0000000000415ee3 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000438d3a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000447aec : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004474b5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000448671 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x00000000004474b9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447c78 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x0000000000447d1f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438d26 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438d0d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000447a55 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000004485db : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000447bc3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000447b95 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000448562 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000004474ab : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004474af : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000448132 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x00000000004481f8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x00000000004486ed : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x00000000004474c4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004474c8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000439043 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438edc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000438cde : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438ca2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004391a5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000447668 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000004475cb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000044746a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043f381 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041ff84 : vshufps xmm2, xmm2, xmm5, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000042beb8 : vzeroupper ; ret
0x000000000042c090 : vzeroupper ; xor eax, eax ; ret
0x000000000044c891 : wait ; add al, 0 ; mov eax, 0x15 ; syscall
0x00000000004791e9 : wait ; jb 0x4791ea ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004004cb : wait ; sub eax, dword ptr [rax] ; nop ; ret
0x000000000042af03 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043e62f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aff3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ae13 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000460b32 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044027c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fa9c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043fe8c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f6ac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047df4c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004488f2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042b85b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043f18f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e96f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e14f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044f6d8 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042b3b3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000041e9cb : xchg byte ptr [rax], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x7b73
0x000000000043f84b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494dcc : xchg byte ptr [rax], dl ; cli ; call qword ptr [rsi]
0x000000000043ecaf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ab43 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043e48f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dc6f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ee4f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042b593 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ad23 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004815ea : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048d04c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042b773 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004221f5 : xchg byte ptr [rcx], ch ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004a8395 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043fd3c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f55c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044066c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004952c4 : xchg byte ptr [rdi], dh ; cli ; call qword ptr [rsi]
0x0000000000454893 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042b683 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043dfaf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042afc5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0b5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aed5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460b49 : xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000043e0e5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ede5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e905 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc3d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455985 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044056d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac33 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004379af : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043f125 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e425 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043df45 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec45 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fd8d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f5ad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049582d : xchg dl, bh ; call rax
0x000000000042ade5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac05 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042acf5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ab15 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046fb09 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046d1d0 : xchg dword ptr [rax - 0x76ffffe3], edi ; ret 0x349
0x000000000047bde6 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a8398 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044f7c4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a7f1f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000046366b : xchg dword ptr [rbp - 0x77000000], eax ; ret 0x349
0x000000000046c882 : xchg dword ptr [rbx - 0x76ffffdb], edi ; ret 0x349
0x00000000004a718c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b6fa : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000046d87a : xchg dword ptr [rcx - 0x76ffffea], ecx ; ret 0x349
0x000000000046e4c5 : xchg dword ptr [rcx - 0x76fffff6], esp ; ret 0x349
0x000000000041b752 : xchg dword ptr [rcx - 0x9ffffff], ecx ; ret
0x000000000046e49c : xchg dword ptr [rdi - 0x76fffff6], edx ; ret 0x349
0x000000000044c5ae : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44c5ad ; pop rdx ; pop r10 ; ret
0x000000000046fcf4 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046a38a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000413878 : xchg dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000479430 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c334 : xchg dword ptr [rsi - 0x76ffffd5], edi ; ret 0x349
0x0000000000462518 : xchg dword ptr [rsi - 0x76ffffef], eax ; ret 0x349
0x0000000000462a30 : xchg dword ptr [rsi - 0x76fffff5], edi ; ret 0x349
0x000000000046efb3 : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x349
0x00000000004a732b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000413877 : xchg dword ptr gs:[rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004a7669 : xchg eax, ebp ; jge 0x4a764c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000458c5b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044ea0b : xchg eax, ebp ; ret
0x000000000048b2e0 : xchg eax, ebp ; ret 0x145
0x000000000044a634 : xchg eax, ebp ; ret 0x3948
0x000000000041e7bb : xchg eax, ebp ; ret 0x8348
0x000000000047a0f0 : xchg eax, ebp ; ret 0xc283
0x000000000042191d : xchg eax, ebp ; ret 0xd020
0x000000000040e4a5 : xchg eax, ebp ; ret 0xd021
0x0000000000464c1a : xchg eax, ebp ; ret 0xd120
0x00000000004105c2 : xchg eax, ebp ; ret 0xdaf7
0x000000000044dc21 : xchg eax, ebp ; ret 0xe1eb
0x000000000048ce5a : xchg eax, ebp ; ret 0xf45
0x00000000004a7f22 : xchg eax, ebp ; retf 0x33e6
0x00000000004191ad : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000494965 : xchg eax, ebp ; stc ; jmp rsi
0x00000000004a937c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000411bc2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046c3f7 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042ca40 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004afff9 : xchg eax, ebx ; clc ; call qword ptr [rax]
0x00000000004b000d : xchg eax, ebx ; clc ; jmp qword ptr [rsi]
0x000000000049584d : xchg eax, ebx ; cli ; call rax
0x00000000004a9d0c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000044481c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042e1e2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004a9223 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a91fd
0x000000000045bbf8 : xchg eax, ebx ; ret 0x3948
0x00000000004129bc : xchg eax, ebx ; ret 0x3949
0x0000000000421030 : xchg eax, ebx ; ret 0x3d83
0x00000000004719b5 : xchg eax, ebx ; ret 0x840
0x000000000045c6dd : xchg eax, ebx ; ret 0x854d
0x0000000000494955 : xchg eax, ebx ; stc ; call qword ptr [rsi + 0x26fff993]
0x0000000000494919 : xchg eax, ebx ; stc ; inc dword ptr [rcx - 0x6c] ; stc ; call rcx
0x0000000000494959 : xchg eax, ebx ; stc ; jmp qword ptr [rsi]
0x000000000042432b : xchg eax, ecx ; add byte ptr [rax], r8b ; cmovne rax, rdx ; ret
0x0000000000495849 : xchg eax, ecx ; cli ; push qword ptr [rax] ; xchg eax, ebx ; cli ; call rax
0x000000000043f231 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000461e4b : xchg eax, ecx ; ret 0xffff
0x00000000004949c9 : xchg eax, ecx ; stc ; call rax
0x0000000000494905 : xchg eax, ecx ; stc ; jmp qword ptr [rcx + 0x21fff991]
0x0000000000494909 : xchg eax, ecx ; stc ; jmp qword ptr [rcx]
0x000000000043d95f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000410872 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048c84c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x00000000004151f4 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000040d841 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004a76d5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a76a3 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a7907 : xchg eax, edi ; jo 0x4a7974 ; salc ; retf
0x0000000000424f65 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000485231 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x000000000041f82b : xchg eax, edi ; ret 0x394c
0x000000000040058e : xchg eax, edi ; ret 0xda80
0x000000000041fd11 : xchg eax, edi ; ret 0xfae9
0x0000000000420309 : xchg eax, edi ; ret 0xfbe9
0x00000000004a803d : xchg eax, edi ; retf 0xe152
0x00000000004a937b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a77d8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047b6df : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004b52f5 : xchg eax, edx ; add byte ptr [rax], al ; add dil, bpl ; jmp qword ptr [rdx]
0x000000000049534c : xchg eax, edx ; cli ; jmp qword ptr [rdx]
0x00000000004a909d : xchg eax, edx ; jae 0x4a907a ; push rsi ; pop rdx ; je 0x4a906f ; ret 0xacfc
0x00000000004a76dc : xchg eax, edx ; pop rbx ; retf
0x0000000000421e5a : xchg eax, edx ; ret
0x00000000004061d8 : xchg eax, edx ; ret 0x8548
0x0000000000483835 : xchg eax, edx ; ret 0x8949
0x00000000004a718f : xchg eax, edx ; ret 0xf869
0x000000000044738d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004949d1 : xchg eax, edx ; stc ; call rax
0x000000000049490d : xchg eax, edx ; stc ; jmp qword ptr [rcx + 0x21fff992]
0x0000000000494911 : xchg eax, edx ; stc ; jmp qword ptr [rcx]
0x000000000042b8bc : xchg eax, edx ; sub eax, edx ; ret
0x000000000042cd40 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434f73 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004566a1 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000448984 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000495855 : xchg eax, esi ; cli ; call qword ptr [rax]
0x00000000004ac6b9 : xchg eax, esi ; cmc ; call rax
0x00000000004a9488 : xchg eax, esi ; jnp 0x4a94d7 ; retf 0x99e0
0x000000000042cdfd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cd5b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004495e1 : xchg eax, esi ; ret 0xc085
0x00000000004a9a2c : xchg eax, esi ; ret 0xcd11
0x000000000044963f : xchg eax, esi ; ret 0xd284
0x0000000000422486 : xchg eax, esi ; ret 0xffff
0x00000000004201d2 : xchg eax, esi ; retf
0x000000000042cdac : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494b31 : xchg eax, esi ; stc ; call qword ptr [rax - 0x1f000666]
0x00000000004b6591 : xchg eax, esi ; std ; call qword ptr [rdx]
0x0000000000494958 : xchg eax, esi ; xchg eax, ebx ; stc ; jmp qword ptr [rsi]
0x00000000004952e8 : xchg eax, esi ; xor edi, edx ; jmp qword ptr [rsi]
0x000000000046d217 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004ae4d0 : xchg eax, esp ; and al, 0 ; add byte ptr [rsp + rbp*4 - 0xa], cl ; call qword ptr [rdi]
0x0000000000476fc5 : xchg eax, esp ; clc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b2241 : xchg eax, esp ; cli ; call qword ptr [rdi]
0x0000000000495851 : xchg eax, esp ; cli ; push qword ptr [rax - 0x6a] ; cli ; call qword ptr [rax]
0x000000000049604c : xchg eax, esp ; cmp al, 0xfb ; jmp rbx
0x00000000004201c8 : xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub dword ptr [rax], eax ; ret
0x00000000004a9c3f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9bd0 ; ret 0x48f
0x0000000000467072 : xchg eax, esp ; ret
0x00000000004514eb : xchg eax, esp ; ret 0x1f0f
0x000000000044a70b : xchg eax, esp ; ret 0x2044
0x000000000048179c : xchg eax, esp ; ret 0x3d
0x000000000041d41e : xchg eax, esp ; ret 0x3de9
0x000000000046e3a7 : xchg eax, esp ; ret 0x7f3c
0x0000000000485401 : xchg eax, esp ; ret 0x950f
0x0000000000447390 : xchg eax, esp ; ret 0xc085
0x000000000044aa31 : xchg eax, esp ; ret 0xc221
0x0000000000476ea5 : xchg eax, esp ; ret 0xc283
0x000000000044a538 : xchg eax, esp ; ret 0xca21
0x0000000000401823 : xchg eax, esp ; ret 0xd284
0x000000000044ff16 : xchg eax, esp ; ret 0xd5e9
0x000000000048cdfb : xchg eax, esp ; ret 0xf45
0x00000000004008dd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000042381a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004949e1 : xchg eax, esp ; stc ; call qword ptr [rax]
0x000000000049491d : xchg eax, esp ; stc ; call rcx
0x0000000000494961 : xchg eax, esp ; stc ; inc dword ptr [rsi - 0x6b] ; stc ; jmp rsi
0x00000000004b0859 : xchg eax, esp ; stc ; jmp qword ptr [rcx]
0x00000000004a7663 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x000000000049491c : xchg eax, r12d ; stc ; call rcx
0x0000000000481790 : xchg eax, r8d ; mov eax, 0x15 ; syscall
0x000000000046d4c2 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000495831 : xchg edx, edi ; push qword ptr [rax - 0x77] ; cli ; call qword ptr [rax]
0x00000000004a2819 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042e0a9 : xlatb ; add r9, r11 ; jmp r9
0x000000000048fb93 : xlatb ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000475f6f : xlatb ; ja 0x475f9c ; ret
0x00000000004476f3 : xlatb ; jb 0x4476fe ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040db2d : xlatb ; jmp rdi
0x00000000004a8203 : xlatb ; jo 0x4a827f ; mov ebp, 0xfb67d10d ; ret
0x0000000000484f22 : xlatb ; mov byte ptr [rsi], al ; jne 0x484f08 ; mov rax, rsi ; ret
0x0000000000449801 : xlatb ; mov eax, esi ; syscall
0x0000000000449810 : xlatb ; mov eax, r8d ; syscall
0x00000000004a7610 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042b9e4 : xlatb ; ret
0x00000000004a96a6 : xlatb ; ret 0x4e27
0x0000000000473a27 : xlatb ; ret 0x94c
0x000000000042b9cf : xlatb ; ret 0xc085
0x00000000004264f0 : xlatb ; ret 0xc148
0x000000000042c654 : xlatb ; ret 0xe883
0x00000000004411a4 : xlatb ; ret 0xf66
0x000000000042c818 : xlatb ; ret 0xff2d
0x0000000000440add : xlatb ; retf
0x00000000004a7664 : xlatb ; retf 0xa1eb
0x0000000000473b04 : xlatb ; retf 0xc148
0x0000000000473ca2 : xlatb ; retf 0xc985
0x00000000004a8592 : xlatb ; retf 0xdf7f
0x0000000000425170 : xlatb ; retf 0xead3
0x0000000000473b75 : xlatb ; retf 0xfdc5
0x000000000042bdb1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000473bd5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042bb93 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042c0d2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000440f22 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000445346 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004263d6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000426296 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000426156 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000426016 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000425ed6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000425d96 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000425c56 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000425b16 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004259d6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000425896 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000425756 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000425616 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004254d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000425396 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000425256 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000445342 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004739c5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004739d6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000494cd1 : xlatb ; stc ; inc dword ptr [rax - 0x27] ; stc ; call qword ptr [rax]
0x0000000000494c58 : xor ah, bl ; stc ; call qword ptr [rax]
0x0000000000424f4a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a718a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004a9226 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000004967bc : xor al, 0x68 ; sti ; call rax
0x00000000004967b8 : xor al, 0x68 ; sti ; push qword ptr [rax + rbp*2] ; sti ; call rax
0x00000000004967a4 : xor al, 0x68 ; sti ; push rax ; push -5 ; jmp qword ptr [rax]
0x00000000004b033c : xor al, 0x77 ; stc ; call rsp
0x000000000045a962 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046f94b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048e392 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a836a : xor al, 0xd8 ; ret
0x0000000000459b65 : xor al, 0xf0 ; test rsi, rsi ; je 0x459b75 ; call rsi
0x000000000045326e : xor al, 0xf6 ; ret
0x00000000004952e5 : xor al, 0xfa ; call qword ptr [rsi + 0x26fffa33]
0x0000000000495421 : xor al, 0xfa ; call rsp
0x000000000049541d : xor al, 0xfa ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x00000000004952a1 : xor al, 0xfa ; jmp qword ptr [rax]
0x0000000000476fc2 : xor al, ch ; loopne 0x476f62 ; clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000045ab37 : xor al, ch ; ret
0x000000000049482d : xor bh, cl ; call qword ptr [rax]
0x00000000004952b1 : xor bh, dl ; inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x000000000042bc1c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000042baed : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000411e22 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004484d4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045c358 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000440951 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000440db2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411e23 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004766bc : xor byte ptr [rax + 1], cl ; retf
0x0000000000494a90 : xor byte ptr [rax - 0x4dbf0007], 0xf9 ; jmp qword ptr [rax]
0x000000000044b45a : xor byte ptr [rax - 0x75], cl ; jge 0x44b410 ; mov r12d, r14d ; call r15
0x000000000044150f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047475f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048b248 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004720f2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044d9ef : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004484d5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000041217b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004b006c : xor byte ptr [rax], al ; add byte ptr [rax], ah ; clc ; call qword ptr [rax]
0x000000000040ef59 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040ee93 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004749ac : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040ef7f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004489d3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047202a : xor byte ptr [rax], al ; je 0x472035 ; ret
0x00000000004956b0 : xor byte ptr [rax], ch ; cli ; call rax
0x000000000048e7ae : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000447945 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000494b3c : xor byte ptr [rbp - 0x617f0007], bl ; stc ; call rax
0x0000000000467279 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000415506 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044fc6a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000496d98 : xor byte ptr [rbx + rdi*8 - 1], 0x4f ; jb 0x496da1 ; call qword ptr [rdi]
0x000000000046e2db : xor byte ptr [rbx - 0x78f0f608], al ; ret
0x00000000004957d8 : xor byte ptr [rbx - 6], bl ; call rax
0x000000000048b065 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000478d43 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000494b90 : xor byte ptr [rcx + rdi*8 - 0x65a7f01], ah ; call rax
0x0000000000494b14 : xor byte ptr [rcx - 0x4cff0007], dh ; stc ; jmp rax
0x000000000040451b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004a766e : xor byte ptr [rcx], ah ; retf
0x000000000041217c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000413467 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410873 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004951b8 : xor byte ptr [rcx], cl ; cli ; jmp qword ptr [rax + 0x20fffa08]
0x00000000004b116c : xor byte ptr [rcx], dl ; add byte ptr [rax], al ; retf
0x00000000004b676c : xor byte ptr [rdi - 0x62e00000], ah ; std ; jmp qword ptr [rax]
0x0000000000494868 : xor byte ptr [rdi - 7], bl ; inc dword ptr [rax + 0x4a] ; stc ; jmp qword ptr [rax]
0x00000000004b0f6c : xor byte ptr [rdi], cl ; add byte ptr [rax - 0x49], al ; stc ; call qword ptr [rdx]
0x00000000004711d0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000495870 : xor byte ptr [rdx + rdi*8 - 0x5627f01], bl ; call rax
0x00000000004951a0 : xor byte ptr [rdx + rdi*8], al ; jmp qword ptr [rax + 0x10fffa03]
0x000000000049482c : xor byte ptr [rdx], dh ; stc ; call qword ptr [rax]
0x00000000004b107f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042caef : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047398c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042baee : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004948c4 : xor byte ptr [rsi - 0x70df0007], cl ; stc ; call qword ptr [rax]
0x00000000004a937e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004946cc : xor ch, 0xf8 ; call rax
0x0000000000412bad : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x0000000000424452 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000047e443 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045bec7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d83e : xor cl, byte ptr [rax] ; jne 0x48d863 ; mov rax, qword ptr [rax] ; ret
0x00000000004243f2 : xor cl, byte ptr [rbp + 0x29] ; retf 0x3948
0x0000000000406200 : xor cl, ch ; ret
0x0000000000494d08 : xor cl, cl ; stc ; inc dword ptr [rax - 0x2f000636] ; retf
0x000000000045adc9 : xor dh, dh ; ret 0x4002
0x00000000004807fe : xor dl, dh ; jmp r11
0x0000000000480910 : xor dl, dh ; ret
0x00000000004230ab : xor dword ptr [rax + 0x29], edi ; add byte ptr [rbp + rcx*4 + 0x25], cl ; retf 0x2977
0x000000000046684d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a8616 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044c9bf : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d8ad : xor dword ptr [rax], ecx ; jne 0x48d8bc ; mov qword ptr [rax], rdx ; ret
0x000000000041c93d : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000424cf1 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000044fc7b : xor dword ptr [rip + 0xd830000], ecx ; retf 0x26d1
0x000000000046c1ce : xor eax, 0x24bc4d ; jmp rax
0x000000000049529d : xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000495355 : xor eax, 0x3542fffa ; cli ; call rdx
0x00000000004952d5 : xor eax, 0x3556fffa ; cli ; jmp rsi
0x0000000000495491 : xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000447f03 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044af6a : xor eax, 0x7d8b48 ; call r12
0x000000000046615a : xor eax, 0x89ffffe6 ; ret
0x000000000040ef56 : xor eax, dword ptr [0x30] ; call rax
0x0000000000416130 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416f14 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045d409 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000475f6b : xor eax, eax ; cmp rdi, rdx ; ja 0x475fa0 ; ret
0x000000000044c587 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004150b0 : xor eax, eax ; jmp 0x41507a
0x0000000000476350 : xor eax, eax ; leave ; ret
0x0000000000473772 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040639f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004128c5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f265 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004242bc : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004137d2 : xor eax, eax ; pop rbx ; ret
0x000000000040f1ad : xor eax, eax ; ret
0x00000000004266fe : xor eax, eax ; sub eax, ecx ; ret
0x000000000044a01a : xor eax, eax ; syscall
0x0000000000415180 : xor eax, eax ; test rdx, rdx ; jne 0x415198 ; ret
0x000000000042bfdc : xor eax, eax ; vzeroupper ; ret
0x0000000000459728 : xor ebp, ecx ; ret 0xfffd
0x00000000004b5945 : xor ebp, edi ; jmp qword ptr [rdx]
0x0000000000458fb6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000489e6b : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004650ec : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x0000000000457f89 : xor ecx, ecx ; call r15
0x0000000000474569 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000044c99c : xor edi, dword ptr [rax] ; ret 0x2f75
0x00000000004b59e1 : xor edi, ebp ; jmp qword ptr [rcx]
0x00000000004b5a15 : xor edi, ebp ; jmp rsp
0x0000000000401858 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044ad96 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041b531 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044abac : xor edi, edi ; syscall
0x0000000000495369 : xor edi, edx ; call qword ptr [rdx]
0x00000000004952ad : xor edi, edx ; call rsi
0x00000000004952a9 : xor edi, edx ; inc dword ptr [rax + 0x33] ; cli ; call rsi
0x00000000004952e9 : xor edi, edx ; jmp qword ptr [rsi]
0x00000000004954a9 : xor edi, edx ; jmp rax
0x000000000040ee90 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044eee3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000417ae3 : xor edx, edx ; jmp rax
0x000000000047456b : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000041fe04 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000461f0c : xor esi, esi ; jmp rax
0x00000000004107e0 : xor esi, esi ; mov rax, rsi ; ret
0x0000000000457f88 : xor r9d, r9d ; call r15
0x000000000040ef55 : xor rax, qword ptr [0x30] ; call rax
0x000000000040ef54 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000445360 : xor rax, rax ; ret
0x000000000040ee8f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ee8e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 10537
