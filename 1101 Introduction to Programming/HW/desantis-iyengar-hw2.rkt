#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 1692 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 190
(6
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname desantis-"
 #"iyengar-hw2) (read-case-sensitive #t) (teachpacks ()) (htdp-settings"
 #" #(#t constructor repeating-decimal #f #t none #f () #t)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 6 #";; HW2"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Keith DeSantis kwdesantis"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Partner: Maanav Iyengar miyengar"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"greeting"
0 0 24 3 2 #" ("
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; a Greeting is a (make-greeting String String)"
0 0 24 29 1 #"\n"
0 0 17 3 73
(7
 #"; interp: A Greeting is a greeting card that goes along with a gift "
 #"where"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #"; message is a String that is the message enclosed"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; name is a String that is the name of the sender"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Happy Valetine's Day\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Ryan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         181 21           0 0           0 29 0 17 3 23
#"; Template for Greeting"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; fcn-on-greeting: Greeting ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"fcn-on-greeting"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 16 #"greeting-message"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"greeting-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"teddy"
0 0 24 3 2 #" ("
0 0 14 3 6 #"outfit"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; a Teddy is a (make-teddy String Natural String Greeting)"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; interp: a Teddy is a teddy bear where,"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; outfit is a String that is the outfit it's wearing"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; size is a Natural that is its size in inches (15\" or 20\")"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; color is a String that is the color"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; card is the Greeting that goes with the gift"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"FIRETEDDY"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"firesuit\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"KNGIHTTEDDY"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"armor\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 9         283 21           0 0           0 46 0 17 3 20
#"; Template for Teddy"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; fcn-on-teddy: Teddy ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-on-teddy"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"teddy-outfit"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"teddy-size"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"teddy-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"fcn-on-greeting"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 4 #"))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"ring"
0 0 24 3 2 #" ("
0 0 14 3 5 #"metal"
0 0 24 3 1 #" "
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; a Ring is a (make-ring Boolean Boolean Greeting)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; interp: a Ring is a ring where,"
0 0 24 29 1 #"\n"
0 0 17 3 85
(8
 #"; metal is a Boolean that is true if the ring is gold and false if t"
 #"he ring is silver"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(9
 #"; box is a Boolean that is true if the box if heart-shaped and false"
 #" if it is standard"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #"; card is the Greeting that goes with the gift"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"EPICRING"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ring"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"LAMERING"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ring"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         241 21           0 0           0 39 0 17 3 19
#"; Template for Ring"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; fcn-on-ring: Ring ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"fcn-on-ring"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"ring-metal"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"ring-box"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"fcn-on-greeting"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 4 #"))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"roses"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quantity"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; Roses is a (make-roses Natural Greeting)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; interp: Roses is a bouquet of roses where,"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; quantity is the number of dozens of roses in the bouqeut"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; card is the Greeting that goes with the gift"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SMALLROSES"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-roses"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BIGBOYROSES"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-roses"
0 0 24 3 1 #" "
0 0 21 3 7 #"1199988"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         187 21           0 0           0 30 0 17 3 20
#"; Template for Roses"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; fcn-on-roses: Roses ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-on-roses"
0 0 24 3 1 #" "
0 0 14 3 7 #"flowers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"roses-quantity"
0 0 24 3 1 #" "
0 0 14 3 7 #"flowers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"fcn-on-greeting"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rose-card"
0 0 24 3 1 #" "
0 0 14 3 7 #"flowers"
0 0 24 3 4 #"))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9          61 21           0 0           0 9 0 17 3 27
#"; Data Definition for Gift:"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; A Gift is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; Teddy"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; Ring"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; Roses"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         295 21           0 0           0 48 0 17 3 20
#"; Template for Gift:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; fcn-on-gift: Gift ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"fcn-on-gift"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"teddy?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-on-teddy"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 5 #"ring?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"fcn-on-ring"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"roses?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-on-roses"
0 0 24 3 5 #"))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Bill\""
0 0 24 3 3 #")) "
0 0 17 3 51 #"; defining new card for check expect boundary cases"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; greeting-card-cost: Greeting -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 115
(10
 #"; consumes a Greeting and produces the cost of that greeting card wh"
 #"ere it costs $0.05 per character in the message"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; (define (greeting-card-cost card) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 31 #"; case where there is a message"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 32 #"; case where there is no message"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 16 #"greeting-message"
0 0 24 3 1 #" "
0 0 14 3 4 #"card"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 7"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"BUSINESSTEDDY"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"suit\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"brown\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 3 #")) "
0 0 17 3 45 #"; defining some new teddies for check expects"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"BUSINESSTEDDY2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"suit\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"NOCARDTEDDY"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"naked\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"brown\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"NOCARDTEDDY2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"naked\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"COLORFULNAKEDTEDDY"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"naked\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"turqoise\""
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SMALL"
0 0 24 3 1 #" "
0 0 21 3 5 #"39.99"
0 0 24 3 2 #") "
0 0 17 3 40 #"; defining constant as price of 15\" bear"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"BIG"
0 0 24 3 1 #" "
0 0 21 3 5 #"49.99"
0 0 24 3 4 #")   "
0 0 17 3 40 #"; defining constant as price of 20\" bear"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; teddy-cost: Teddy -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 97
(11
 #"; consumes a Teddy and produces the total cost of the Teddy and its "
 #"corresponding greeting, where"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(12
 #"; 15\" teddies cost $39.99 and 20\" teddies cost $49.99 and brown/bl"
 #"ack fur cost no extra but any"
) 0 0 24 29 1 #"\n"
0 0 17 3 7 #"; other"
0 0 17 3 1 #" "
0 0 17 3 5 #"color"
0 0 17 3 1 #" "
0 0 17 3 4 #"adds"
0 0 17 3 1 #" "
0 0 17 3 5 #"$5.00"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 3 #"top"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 13 #"the base cost"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 9 #"FIRETEDDY"
0 0 24 3 2 #") "
0 0 21 3 5 #"45.99"
0 0 24 3 54 #")                                                     "
0 0 17 3 42 #"; case where small colorful bear ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 18 #"COLORFULNAKEDTEDDY"
0 0 24 3 2 #") "
0 0 21 3 5 #"54.99"
0 0 24 3 45 #")                                            "
0 0 17 3 40 #"; case where big colorful bear ($0 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 11 #"NOCARDTEDDY"
0 0 24 3 2 #") "
0 0 21 3 5 #"39.99"
0 0 24 3 52 #")                                                   "
0 0 17 3 39 #"; case where small brown bear ($0 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 13 #"BUSINESSTEDDY"
0 0 24 3 2 #") "
0 0 21 3 5 #"50.99"
0 0 24 3 50 #")                                                 "
0 0 17 3 37 #"; case where big brown bear ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 12 #"NOCARDTEDDY2"
0 0 24 3 2 #") "
0 0 21 3 5 #"39.99"
0 0 24 3 51 #")                                                  "
0 0 17 3 39 #"; case where small black bear ($0 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 14 #"BUSINESSTEDDY2"
0 0 24 3 2 #") "
0 0 21 3 5 #"50.99"
0 0 24 3 49 #")                                                "
0 0 17 3 54 #"; case where big black bear ($1 card)                 "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; (define (teddy-cost bear) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-size"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"teddy-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"teddy-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"brown\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"SMALL"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"SMALL"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-size"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"teddy-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"teddy-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"brown\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"BIG"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"BIG"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"bear"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 8"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"GOLDNORMAL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ring"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD2"
0 0 24 3 3 #")) "
0 0 17 3 38 #"; defining new rings for check-expects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SILVERHEART"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ring"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"GOLD"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 4 #")   "
0 0 17 3 41 #"; defining constant for cost of gold ring"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"SILVER"
0 0 24 3 1 #" "
0 0 21 3 3 #"115"
0 0 24 3 2 #") "
0 0 17 3 43 #"; defining constant for cost of silver ring"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; ring-cost: Ring-> Number"
0 0 24 29 1 #"\n"
0 0 17 3 164
(13
 #"; consumes a Ring and produces the cost of the Ring and Greeting whe"
 #"re silver rings are $115 and gold are $260 and having a heart shaped"
 #" box adds $5.50 to the total"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-cost"
0 0 24 3 1 #" "
0 0 14 3 10 #"GOLDNORMAL"
0 0 24 3 2 #") "
0 0 21 3 3 #"260"
0 0 24 3 5 #")    "
0 0 17 3 42 #"; case where gold and normal box ($0 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-cost"
0 0 24 3 1 #" "
0 0 14 3 11 #"SILVERHEART"
0 0 24 3 2 #") "
0 0 21 3 5 #"121.5"
0 0 24 3 2 #") "
0 0 17 3 43 #"; case where silver and heart box ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-cost"
0 0 24 3 1 #" "
0 0 14 3 8 #"EPICRING"
0 0 24 3 2 #") "
0 0 21 3 5 #"266.5"
0 0 24 3 5 #")    "
0 0 17 3 41 #"; case where gold and heart box ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-cost"
0 0 24 3 1 #" "
0 0 14 3 8 #"LAMERING"
0 0 24 3 2 #") "
0 0 21 3 3 #"116"
0 0 24 3 7 #")      "
0 0 17 3 40 #"; case where silver normal box ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; (define (ring-cost band) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-cost"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 10 #"ring-metal"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ring-box"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"GOLD"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 3 #")) "
0 0 21 3 3 #"5.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"GOLD"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 8 #"))))]   "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ring-metal"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ring-box"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"SILVER"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 3 #")) "
0 0 21 3 3 #"5.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"SILVER"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-card"
0 0 24 3 1 #" "
0 0 14 3 4 #"band"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 9"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOROSES"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-roses"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"CARD1"
0 0 24 3 3 #")) "
0 0 17 3 53 #"; defining new roses for check-expects boundary cases"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"DOZEN"
0 0 24 3 1 #" "
0 0 21 3 5 #"24.99"
0 0 24 3 2 #") "
0 0 17 3 46 #"; defining constant for price of a dozen roses"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; roses-cost: Roses -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 111
(14
 #"; consumes a bouqeut of Roses and produces their cost (including the"
 #" Greeting) where they cost $24.99 per dozen"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"roses-cost"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOROSES"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 16 #")               "
0 0 17 3 29 #"; case with 0 roses ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"roses-cost"
0 0 24 3 1 #" "
0 0 14 3 10 #"SMALLROSES"
0 0 24 3 2 #") "
0 0 21 3 6 #"300.88"
0 0 24 3 9 #")        "
0 0 17 3 32 #"; case with some roses ($1 card)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; (define (roses-cost bunch) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"roses-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"bunch"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 18 #"greeting-card-cost"
0 0 24 3 2 #" ("
0 0 14 3 10 #"roses-card"
0 0 24 3 1 #" "
0 0 14 3 5 #"bunch"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"DOZEN"
0 0 24 3 2 #" ("
0 0 14 3 14 #"roses-quantity"
0 0 24 3 1 #" "
0 0 14 3 5 #"bunch"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; 10 "
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"SH"
0 0 24 3 1 #" "
0 0 21 3 5 #"10.99"
0 0 24 3 2 #") "
0 0 17 3 56 #"; defining a constant for price of shipping and handling"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; gift-cost: Gift -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 92
(15
 #"; consumes a Gift and produces the total cost of that Gift including"
 #" a $10.99 charge for s&h"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gift-cost"
0 0 24 3 1 #" "
0 0 14 3 9 #"FIRETEDDY"
0 0 24 3 2 #") "
0 0 21 3 5 #"56.98"
0 0 24 3 2 #") "
0 0 17 3 28 #"; case where gift is a Teddy"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gift-cost"
0 0 24 3 1 #" "
0 0 14 3 8 #"EPICRING"
0 0 24 3 2 #") "
0 0 21 3 6 #"277.49"
0 0 24 3 2 #") "
0 0 17 3 27 #"; case where gift is a Ring"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gift-cost"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOROSES"
0 0 24 3 2 #") "
0 0 21 3 5 #"11.99"
0 0 24 3 4 #")   "
0 0 17 3 26 #"; case where gift is Roses"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; (define (gift-cost present) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gift-cost"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"teddy?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-cost"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 2 #") "
0 0 14 3 2 #"SH"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"ring?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-cost"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 2 #") "
0 0 14 3 2 #"SH"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 6 #"roses?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"roses-cost"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 2 #") "
0 0 14 3 2 #"SH"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; 11"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; change-message: Gift String -> Gift"
0 0 24 29 1 #"\n"
0 0 17 3 156
(16
 #"; consumes a Gift and a message and produces a Gift that is the same"
 #" in everyway except the message on the Greeting is the replaced with"
 #" the inputed message"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"change-message"
0 0 24 3 1 #" "
0 0 14 3 9 #"FIRETEDDY"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"MERRY CHRISTMAS\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"firesuit\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"MERRY CHRISTMAS\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Ryan\""
0 0 24 3 4 #"))) "
0 0 17 3 48 #"; case where gift is a Teddy and message changes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"change-message"
0 0 24 3 1 #" "
0 0 14 3 8 #"EPICRING"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"MERRY CHRISTMAS\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ring"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"MERRY CHRISTMAS\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Ryan\""
0 0 24 3 16 #")))             "
0 0 17 3 47 #"; case where gift is a Ring and message changes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"change-message"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOROSES"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"MERRY CHRISTMAS\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-roses"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"MERRY CHRISTMAS\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Ryan\""
0 0 24 3 24 #")))                     "
0 0 17 3 46 #"; case where gift is Roses and message changes"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"change-message"
0 0 17 3 1 #" "
0 0 17 3 34 #"present newmess) FIRETEDDY) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"change-message"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 1 #" "
0 0 14 3 7 #"newmess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"teddy?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-teddy"
0 0 24 3 2 #" ("
0 0 14 3 12 #"teddy-outfit"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 10 #"teddy-size"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 11 #"teddy-color"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 14 3 7 #"newmess"
0 0 24 3 2 #" ("
0 0 14 3 13 #"greeting-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"teddy-card"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"ring?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ring"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ring-metal"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 8 #"ring-box"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 14 3 7 #"newmess"
0 0 24 3 2 #" ("
0 0 14 3 13 #"greeting-name"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ring-card"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 6 #"roses?"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-roses"
0 0 24 3 2 #" ("
0 0 14 3 14 #"roses-quantity"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-greeting"
0 0 24 3 1 #" "
0 0 14 3 7 #"newmess"
0 0 24 3 2 #" ("
0 0 14 3 13 #"greeting-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"roses-card"
0 0 24 3 1 #" "
0 0 14 3 7 #"present"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; 12"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; a ListOfString is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;  -empty"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;  -(cons String ListOfString)"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; interp:  ListOfString represents a list of strings"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         229 21           0 0           0 37 0 17 3 27
#"; Template for ListofString"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; fcn-on-ListofString: ListofString ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"fcn-on-ListofString"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 19 #"fcn-on-ListofString"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 5 #"))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"EMPTYLIST"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 50 #")                                                 "
0 0 17 3 46 #"; defining some lists for use in check-expects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOXLIST"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Burger\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Fries\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Gamers\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"XLIST"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Epic\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"xX\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; character-count: ListofString -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 94
(17
 #"; consumes a ListofString and produces the number of characters in t"
 #"he Strings within the list"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"character-count"
0 0 24 3 1 #" "
0 0 14 3 9 #"EMPTYLIST"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 5 #")    "
0 0 17 3 36 #"; case where there are no characters"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"character-count"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOXLIST"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 6 #")     "
0 0 17 3 33 #"; case where there are characters"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; (define (character-count los) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"character-count"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"character-count"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; 13"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Defining Helper Functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; re-string: ListofString -> String"
0 0 24 29 1 #"\n"
0 0 17 3 135
(18
 #"; consumes a ListofString and produces a String that is every elemen"
 #"t back to back in one String (will be used in next helper function)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"re-string"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOXLIST"
0 0 24 3 2 #") "
0 0 19 3 19 #"\"BurgerFriesGamers\""
0 0 24 3 2 #") "
0 0 17 3 29 #"; case where multiple entries"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"re-string"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 21 #")                    "
0 0 17 3 34 #"; case where ListofString is empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; (define (re-string los) \"None\") ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"re-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 9 #"re-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Second Helper Function Which Uses re-string:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; number-x: String -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 90
(19
 #"; consumes a String and produces the number of x's (uppercase and lo"
 #"wercase) in the String"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"number-x"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 6 #")     "
0 0 17 3 37 #"; case where String has no characters"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"number-x"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"None\""
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 55 #"; case where there are no x's but String has characters"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"number-x"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"Xx\""
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")   "
0 0 17 3 26 #"; case where there are x's"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; (define (number-x message) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"number-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"number-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"re-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 7 #"))))) ("
0 0 14 3 8 #"number-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"re-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explode"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 8 #")))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Actual Function:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; count-x: ListofString -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 156
(20
 #"; consumes a ListofString and produces a Natural that is the total n"
 #"umber of x's in all the elements in the ListofString (including uppe"
 #"rcase and lowercase)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 4 #")   "
0 0 17 3 34 #"; case where ListofString is empty"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOXLIST"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 52 #"; case where ListofString has no x's and isn't empty"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"XLIST"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #")   "
0 0 17 3 33 #"; case where ListofString has x's"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; (define (count-x los) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"count-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"number-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"count-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 6 #")))]))"
0           0
