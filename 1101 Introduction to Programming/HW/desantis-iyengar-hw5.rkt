#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 75 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1673 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 194
(6
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname desan"
 #"tis-iyengar-hw5) (read-case-sensitive #t) (teachpacks ()) (htdp-sett"
 #"ings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 8 #";; Lab 5"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Keith DeSantis Partner: Maanav Iyengar"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"river"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 2 #"pH"
0 0 24 3 1 #" "
0 0 14 3 2 #"DO"
0 0 24 3 1 #" "
0 0 14 3 4 #"flow"
0 0 24 3 1 #" "
0 0 14 3 11 #"tributaries"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; A River is a (make-river String Number Number Natural ListofRiver)"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; interp: represents a river where,"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; name is the river's name"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; pH is the river's pH level"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; DO is the river's dissolved-oxygen level in mg/L"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; flow is the flowrate of the river in cubic feet per second"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; a ListofRiver is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; - (cons River ListofRiver)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Missouri River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Jefferson River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"7.0"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"Beaverhead River\""
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 112
(7
 #"                                                                    "
 #"                                           ("
) 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Big Hole River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"6.04"
0 0 24 3 1 #" "
0 0 21 3 5 #"14.78"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Sun River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.34"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Gardner River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107
(8
 #"                                                                    "
 #"                                      ("
) 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Shields River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.04"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Boulder River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8.87"
0 0 24 3 1 #" "
0 0 21 3 4 #"17.2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Madison River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.54"
0 0 24 3 1 #" "
0 0 21 3 4 #"13.4"
0 0 24 3 1 #" "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Gallatin River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"6.72"
0 0 24 3 1 #" "
0 0 21 3 3 #"5.6"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         331 21           0 0           0 54 0 17 3 28
#"; Template for fcn-on-river:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; fcn-on-river: River ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-on-river"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"river-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"river-pH"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"river-DO"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"river-flow"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"fcn-on-lor"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 4 #"))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         277 21           0 0           0 45 0 17 3 26
#"; Template for fcn-on-lor:"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; fcn-on-lor: ListofRiver ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fcn-on-lor"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-on-river"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"fcn-on-lor"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-poor-quality"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-poor-quality"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Bruh River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.8"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; count-poor-quality: River -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 151
(9
 #"; consumes a River and produces the number of rivers that have a pH "
 #"of <6.5 or >8.5 or a DO of <6 for all rivers in it's tributaries (in"
 #"cluding itself)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-poor-quality"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"river-pH"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 21 3 3 #"6.5"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"river-pH"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 21 3 3 #"8.5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"river-DO"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"poor-in-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"poor-in-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"poor-in-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"poor-in-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NO\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 7 #"1000000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; poor-in-list: ListofRiver -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 153
(10
 #"; consumes a ListofRiver and produces the number of rivers that have"
 #" a pH of <6.5 or >8.5 or a DO of <6 for all rivers in that list and "
 #"their tributaries"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"poor-in-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 18 #"count-poor-quality"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 12 #"poor-in-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"low-flow-rivers"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 1 #" "
0 0 21 3 3 #"101"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Boulder River\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"low-flow-rivers"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; low-flow-rivers: River Number -> ListofString"
0 0 24 29 1 #"\n"
0 0 17 3 143
(11
 #"; consumes a River and a flow rate and produces a list of all the na"
 #"mes of rivers in that system with a flow rate less than the given fl"
 #"ow rate"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"low-flow-rivers"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #" "
0 0 14 3 3 #"flw"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 10 #"river-flow"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 14 3 3 #"flw"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"river-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #") ("
0 0 14 3 12 #"lows-in-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 14 3 3 #"flw"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"lows-in-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 14 3 3 #"flw"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"lows-in-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NO\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 7 #"1000000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 3 #"301"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"lows-in-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NO\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 7 #"1000000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; lows-in-list: ListofRiver Number -> ListofString"
0 0 24 29 1 #"\n"
0 0 17 3 156
(12
 #"; consumes a ListofRiver and a flow rate and produces a list of all "
 #"the names of rivers and their tributaries with a flow rate less than"
 #" the given flow rate"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"lows-in-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #" "
0 0 14 3 3 #"flw"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 15 #"low-flow-rivers"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 14 3 3 #"flw"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 12 #"lows-in-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 14 3 3 #"flw"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"lower-all-ph"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Missouri River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.6"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Jefferson River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"Beaverhead River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"7.9"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 112 7 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Big Hole River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5.94"
0 0 24 3 1 #" "
0 0 21 3 5 #"14.78"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Sun River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.4"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.24"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Gardner River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Shields River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"6.94"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Boulder River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8.77"
0 0 24 3 1 #" "
0 0 21 3 4 #"17.2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Madison River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.44"
0 0 24 3 1 #" "
0 0 21 3 4 #"13.4"
0 0 24 3 1 #" "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Gallatin River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"6.62"
0 0 24 3 1 #" "
0 0 21 3 3 #"5.6"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; lower-all-ph: River -> River"
0 0 24 29 1 #"\n"
0 0 17 3 128
(13
 #"; consumes a River and produces a River that is the same expect ever"
 #"y pH values of each river in the system has decreased by 0.1"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 13 #"define-struct"
0 0 17 3 1 #" "
0 0 17 3 5 #"river"
0 0 17 3 31 #" (name pH DO flow tributaries))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"lower-all-ph"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-river"
0 0 24 3 2 #" ("
0 0 14 3 10 #"river-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"river-pH"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"river-DO"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #") ("
0 0 14 3 10 #"river-flow"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #") ("
0 0 14 3 13 #"lower-list-ph"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lower-list-ph"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NO\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 7 #"1000000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 1 #" "
0 0 21 3 3 #"0.9"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NO\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.6"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 7 #"1000000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lower-list-ph"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; lower-list-ph: ListofRiver -> ListofRiver"
0 0 24 29 1 #"\n"
0 0 17 3 102
(14
 #"; consumes a ListofRiver and produces the same list but the pH value"
 #"s of each river have decreased 0.1"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lower-list-ph"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"lower-all-ph"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 13 #"lower-list-ph"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 7"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"find-subsystem"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"NAOFNDAJBFISD\""
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"find-subsystem"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.34"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Gardner River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Shields River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.04"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Boulder River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8.87"
0 0 24 3 1 #" "
0 0 21 3 4 #"17.2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; find-subsystem: String River -> River"
0 0 24 29 1 #"\n"
0 0 17 3 185
(15
 #"; consumes a name of a river and a River and produces the portion of"
 #" the inputted River that has the named River as it's root.  If there"
 #" is no River with the given root it returns false"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"find-subsystem"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"river-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"riv"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"find-subsystem-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"find-subsystem-list"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.34"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Gardner River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Shields River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.04"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 107 8 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Boulder River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8.87"
0 0 24 3 1 #" "
0 0 21 3 4 #"17.2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"find-subsystem-list"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Nfjanfjanfdsjio\""
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"find-subsystem-list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"fjaf\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; find-subsystem-list: String ListofRiver -> River"
0 0 24 29 1 #"\n"
0 0 17 3 181
(16
 #"; consumes a name of a river and a ListRiver and produces the River "
 #"with the given name's river from the list as its root.  If there is "
 #"no River with the given root it returns false"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"find-subsystem-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"rivname"
0 0 24 3 2 #" ("
0 0 14 3 14 #"find-subsystem"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"river?"
0 0 24 3 1 #" "
0 0 14 3 7 #"rivname"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 7 #"rivname"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 19 #"find-subsystem-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 8"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 29 #"count-alkaline-tributaries-of"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Missouri River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Jefferson River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"7.0"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"Beaverhead River\""
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 112 7 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Big Hole River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"6.04"
0 0 24 3 1 #" "
0 0 21 3 5 #"14.78"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 112 7 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Sun River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 112 7 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.34"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Gardner River\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 163
(17
 #"                                                                    "
 #"                                                                    "
 #"                          ("
) 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Shields River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.04"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 163 17 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Boulder River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8.87"
0 0 24 3 1 #" "
0 0 21 3 4 #"17.2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 113
(18
 #"                                                                    "
 #"                                            ("
) 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Madison River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7.54"
0 0 24 3 1 #" "
0 0 21 3 4 #"13.4"
0 0 24 3 1 #" "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 113 18 0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Gallatin River\""
0 0 24 3 1 #" "
0 0 21 3 4 #"6.72"
0 0 24 3 1 #" "
0 0 21 3 3 #"5.6"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 19 3 19 #"\"Yellowstone River\""
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 29 #"count-alkaline-tributaries-of"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"BRUHHH\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-river"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"NOPE\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 19 3 6 #"\"NOPE\""
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; count-alkaline-tributaries-of: River String -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 164
(19
 #"; consumes a River and a name and produces a count of the number of "
 #"rivers that are tributaries of the named river and have a pH of >8.5"
 #" (assume river is in system)"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #"; (does not include the starting River)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 29 #"count-alkaline-tributaries-of"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"goodriv"
0 0 24 3 2 #" ("
0 0 14 3 14 #"find-subsystem"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 19 #"count-alkaline-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 7 #"goodriv"
0 0 24 3 17 #"))))             "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"count-alkaline-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 8 #"MISSOURI"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; count-alkaline-list: ListofRiver -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 85
(20
 #"; consumes a ListofRiver and produces the number of rivers in that l"
 #"ist with pH > 8.5"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"count-alkaline-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 24 #"count-not-start-alkaline"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 19 #"count-alkaline-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; count-not-start-alkaline: River -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 83
(21
 #"; consumes a River and produces the number of rivers in that system "
 #"with a pH > 8.5"
) 0 0 24 29 1 #"\n"
0 0 17 3 94
(22
 #"; NOTE: used for checking rivers that aren't the starting node (thes"
 #"e do count the root River)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"count-not-start-alkaline"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"river-pH"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 2 #") "
0 0 21 3 3 #"8.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 19 #"count-alkaline-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"count-alkaline-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"river-tributaries"
0 0 24 3 1 #" "
0 0 14 3 3 #"riv"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
