#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1           0 616 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 174
(6
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname lab1) (re"
 #"ad-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructo"
 #"r repeating-decimal #f #t none #f () #t)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 8 #";; Lab 1"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; Keith"
0 0 17 3 1 #" "
0 0 17 3 8 #"DeSantis"
0 0 17 3 11 #" kwdesantis"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Partner: Maanav Iyengar"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"vehicle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"make"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 19 #"year-of-manufacture"
0 0 24 3 1 #" "
0 0 14 3 8 #"odometer"
0 0 24 3 1 #" "
0 0 14 3 10 #"passengers"
0 0 24 3 1 #" "
0 0 14 3 11 #"date-of-exp"
0 0 24 3 4 #"))  "
0 0 17 3 56
#"; define struct for a vehicle, calls on the struc \"date\""
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; a Vehicle"
0 0 17 3 63
#" is a (make-vehicle String String Natural Natural Natural Date)"
0 0 24 29 1 #"\n"
0 0 17 3 98
(7
 #";; interp: represents a vehicle's stats for a certain vehicle in the"
 #" car rental agency's inventory"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";; make is the car's brand"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; model is the car's model"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; year-of-manufacture is the car's manufacturing year"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; odometer is the number of miles read on the car's odometer"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; passengers is the number of passengers the car can hold"
0 0 24 29 1 #"\n"
0 0 17 3 115
(8
 #";; date-of-exp is a structure that is defined below, it represents t"
 #"he date that the car's registration will expire"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"date"
0 0 24 3 2 #" ("
0 0 14 3 4 #"year"
0 0 24 3 1 #" "
0 0 14 3 5 #"month"
0 0 24 3 1 #" "
0 0 14 3 3 #"day"
0 0 24 3 3 #")) "
0 0 17 3 26 #"; define struct for a date"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; a date is a (make-date Natural Natural Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 76
(9
 #";; interp: represents the date that a certain car's registration wil"
 #"l expire"
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; year is the year of expiration"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; month is the month of expiration"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; day is the day of expiration"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2021"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 17 3 27 #"; making some example dates"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2024"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2021"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Chevy\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Tahoe\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2007"
0 0 24 3 1 #" "
0 0 21 3 5 #"90000"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE1"
0 0 24 3 3 #")) "
0 0 17 3 26 #"; making some example cars"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Toyota\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Tacoma\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2014"
0 0 24 3 1 #" "
0 0 21 3 4 #"6000"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR3"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Nissan\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Rogue\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2011"
0 0 24 3 1 #" "
0 0 21 3 6 #"140000"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR4"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Nissan\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Rogue\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2007"
0 0 24 3 1 #" "
0 0 21 3 6 #"140000"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Signature for make-vehicle"
0 0 24 29 1 #"\n"
0 0 17 3 70
(10
 #";; make-vehicle: String String Natural Natural Natural Date -> Vehic"
 #"le"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Signature for vehicle-make"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; vehicle-make: Vehicle -> String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Signature for vehicle-model"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; vehicle-model: Vehicle -> String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Signature for vehicle-year-of-manufacture"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; vehicle-year-of-manufacture: Vehicle -> Natural"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Signature for vehicle-odometer"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; vehicle-odometer: Vehicle -> Natural"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Signature for vehicle-passengers"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; vehicle-passengers: Vehicle -> Natural"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Signature for vehicle-date-of-exp"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; vehicle"
0 0 17 3 29 #"-date-of-exp: Vehicle -> Date"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; low-mileage-toyota?: vehicle Natural -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 158
(11
 #";; consumes a Vehicle and a number of miles and produces true if the"
 #" vehicle is a Toyota with a odometer reading of less than or equal t"
 #"o the natural provided"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"low-mileage-toyota?"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 1 #" "
0 0 21 3 9 #"100000000"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 51 #"; case where car isn't a Toyota and has low mileage"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"low-mileage-toyota?"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR2"
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 17 3 48 #"; case where car is a Toyota and has low mileage"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"low-mileage-toyota?"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 47 #"; case where car is Toyota but has high mileage"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"low-mileage-toyota?"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 52 #"; case where car isn't a Toyota and has high mileage"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; (define (low-mileage-toyota? car miles) 0)  ; stub"
0 0 24 29 1 #"\n"
0 0 17 3 69
(12
 #";; (define (low-mileage-toyota? car miles) (car...miles))  ; templat"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"low-mileage-toyota?"
0 0 24 3 1 #" "
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"miles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Toyota\""
0 0 24 3 2 #" ("
0 0 14 3 12 #"vehicle-make"
0 0 24 3 1 #" "
0 0 14 3 3 #"car"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 16 #"vehicle-odometer"
0 0 24 3 1 #" "
0 0 14 3 3 #"car"
0 0 24 3 2 #") "
0 0 14 3 5 #"miles"
0 0 24 3 4 #"))) "
0 0 17 3 111
(13
 #"; function definition, uses an and statement to confirm that the car"
 #" is a Toyota AND has less than wanted miles"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; newer-car: vehicle vehicle -> vehicle"
0 0 24 29 1 #"\n"
0 0 17 3 88
(14
 #";; consumes two Vehicles and produces the car with the more recent y"
 #"ear of manufacturing"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"newer-car"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR2"
0 0 24 3 2 #") "
0 0 14 3 4 #"CAR2"
0 0 24 3 2 #") "
0 0 17 3 44 #"; case where one car is newer than the other"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"newer-car"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR4"
0 0 24 3 2 #") "
0 0 14 3 4 #"CAR1"
0 0 24 3 2 #") "
0 0 17 3 51 #"; case where both cars have same manufacturing year"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; (define (newer-car carone cartwo) 0)  ;stub"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; (define (newer-car carone cartwo) (carone...cartwo))  ;template"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"newer-car"
0 0 24 3 1 #" "
0 0 14 3 6 #"carone"
0 0 24 3 1 #" "
0 0 14 3 6 #"cartwo"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 27 #"vehicle-year-of-manufacture"
0 0 24 3 1 #" "
0 0 14 3 6 #"carone"
0 0 24 3 3 #") ("
0 0 14 3 27 #"vehicle-year-of-manufacture"
0 0 24 3 1 #" "
0 0 14 3 6 #"cartwo"
0 0 24 3 5 #"))   "
0 0 17 3 22 #"; newer-car definition"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 6 #"carone"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 6 #"cartwo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; update-odometer: Vehicle Natural -> Vehicle"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; consumes a Vehicle"
0 0 17 3 141
(15
 #" and a natural number of miles then produces a \"new version\" of th"
 #"at Vehicle where the odometer is updated to have that amount of mile"
 #"s added"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"update-odometer"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Chevy\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Tahoe\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2007"
0 0 24 3 1 #" "
0 0 21 3 5 #"90010"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE1"
0 0 24 3 3 #")) "
0 0 17 3 28 #"; case where miles are added"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"update-odometer"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Toyota\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Tacoma\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2014"
0 0 24 3 1 #" "
0 0 21 3 4 #"6000"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"DATE2"
0 0 24 3 3 #")) "
0 0 17 3 31 #"; case where no miles are added"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; (define (update-odometer usedcar newmiles) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 17 3 77
(16
 #"; (define (update-odometer usedcar newmiles) (usedcar...newmiles)) ;"
 #" template"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"update-odometer"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 1 #" "
0 0 14 3 8 #"newmiles"
0 0 24 3 2 #") "
0 0 17 3 28 #"; update-odometer definition"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-vehicle"
0 0 24 3 2 #" ("
0 0 14 3 12 #"vehicle-make"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 3 #") ("
0 0 14 3 13 #"vehicle-model"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 3 #") ("
0 0 14 3 27 #"vehicle-year-of-manufacture"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 16 #"vehicle-odometer"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 2 #") "
0 0 14 3 8 #"newmiles"
0 0 24 3 3 #") ("
0 0 14 3 18 #"vehicle-passengers"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 3 #") ("
0 0 14 3 19 #"vehicle-date-of-exp"
0 0 24 3 1 #" "
0 0 14 3 7 #"usedcar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; Creating a Helper Function:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"OLDDATE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"January\""
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 3 #")) "
0 0 17 3 29 #"; defining some example dates"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"NEWDDATE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2040"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"January\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SAMEDATE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2021"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"January\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         655 21           0 0           0 108 0 17 3 37
#";; date-compare: Date Date -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 109
(17
 #";; consumes two dates and produces true if the first date comes afte"
 #"r the second or if they are the same date"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"date-compare"
0 0 24 3 1 #" "
0 0 14 3 7 #"OLDDATE"
0 0 24 3 2 #" ("
0 0 14 3 19 #"vehicle-date-of-exp"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 40 #"; case where first date is before second"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"date-compare"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEWDATE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 14 3 18 #"ehicle-date-of-exp"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 17 3 39 #"; case where first date is after second"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"date-compare"
0 0 24 3 1 #" "
0 0 14 3 8 #"SAMEDATE"
0 0 24 3 2 #" ("
0 0 14 3 19 #"vehicle-date-of-exp"
0 0 24 3 1 #" "
0 0 14 3 4 #"CAR1"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 17 3 35 #"; case where two dates are the same"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; (define (date-compare exp-date second-date) 0) ; stub"
0 0 24 29 1 #"\n"
0 0 17 3 83
(18
 #";; (define (date-compare exp-date second-date) (exp-date...second-da"
 #"te)) ; template"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"date-compare"
0 0 24 3 1 #" "
0 0 14 3 8 #"exp-date"
0 0 24 3 1 #" "
0 0 14 3 11 #"second-date"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 8 #"exp-date"
0 0 24 3 3 #") ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 11 #"second-date"
0 0 24 3 3 #")) "
0 0 17 3 54 #"; if the year of exp is after the day's year then true"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 8 #"exp-date"
0 0 24 3 3 #") ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 11 #"second-date"
0 0 24 3 3 #")) "
0 0 17 3 50 #"; if the year of exp has already passed then false"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 51 #";; NOW HOW TO FIGURE OUT MONTH ORDER IN A CLEAN WAY"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 86
(19
 #";; if we figure how search a list for a certain entries index then w"
 #"e could do it well"
) 0           0 0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0           0
